{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Halooid Platform","text":"<p>Welcome to the official documentation for the Halooid multi-product platform. This documentation provides comprehensive information about our suite of products, architecture, development guidelines, and more.</p>"},{"location":"#project-overview","title":"Project Overview","text":"<p>Halooid is a multi-product platform consisting of five integrated products:</p> <ul> <li> Taskake: Task management system</li> <li> Qultrix: Human Resource Management Software</li> <li> AdminHub: Internal monitoring and administration</li> <li> CustomerConnect: CRM for customer interactions</li> <li> Invantray: Inventory and asset management software</li> </ul>"},{"location":"#technical-architecture","title":"Technical Architecture","text":"<p>The Halooid platform is built using modern technologies and follows best practices for scalable, maintainable software development.</p>"},{"location":"#backend","title":"Backend","text":"<ul> <li>Language: Go</li> <li>API Approach: Hybrid (REST with OpenAPI + gRPC for internal communication)</li> <li>Database: PostgreSQL with Redis for caching</li> <li>Authentication: JWT-based with role-based access control</li> </ul>"},{"location":"#web-frontend","title":"Web Frontend","text":"<ul> <li>Framework: Svelte with SvelteKit</li> <li>Styling: Tailwind CSS</li> <li>State Management: Svelte stores</li> <li>Build System: Vite</li> </ul>"},{"location":"#mobile","title":"Mobile","text":"<ul> <li>Framework: Flutter</li> <li>State Management: Provider/Riverpod</li> <li>API Communication: Dio</li> </ul>"},{"location":"#project-structure","title":"Project Structure","text":"<p>The project follows a monorepo approach with clear separation between backend, web, and mobile applications, while sharing common libraries and components.</p> <pre><code>graph TD\n    A[Halooid Platform] --&gt; B[Backend]\n    A --&gt; C[Web Frontend]\n    A --&gt; D[Mobile Apps]\n    A --&gt; E[Documentation]\n\n    B --&gt; B1[Go Services]\n    B --&gt; B2[APIs]\n    B --&gt; B3[Database]\n\n    C --&gt; C1[Taskake UI]\n    C --&gt; C2[Qultrix UI]\n    C --&gt; C3[AdminHub UI]\n    C --&gt; C4[CustomerConnect UI]\n    C --&gt; C5[Invantray UI]\n\n    D --&gt; D1[Taskake Mobile]\n    D --&gt; D2[Qultrix Mobile]\n\n    E --&gt; E1[User Guides]\n    E --&gt; E2[API Reference]\n    E --&gt; E3[Development Guides]</code></pre>"},{"location":"#getting-started","title":"Getting Started","text":"<p>To get started with the Halooid platform, check out the following resources:</p> <ul> <li>Installation Guide</li> <li>Quick Start Guide</li> <li>Architecture Overview</li> <li>Development Setup</li> </ul>"},{"location":"#products","title":"Products","text":"<p>Learn more about each of our products:</p> <ul> <li>Taskake - Task management system</li> <li>Qultrix - Human Resource Management Software</li> <li>AdminHub - Internal monitoring and administration</li> <li>CustomerConnect - CRM for customer interactions</li> <li>Invantray - Inventory and asset management software</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions to the Halooid platform! Please check out our Contributing Guidelines to get started.</p>"},{"location":"changelog/","title":"Changelog","text":"<p>This page documents all notable changes to the Halooid platform.</p>"},{"location":"changelog/#unreleased","title":"[Unreleased]","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Initial project setup</li> <li>Documentation structure</li> <li>Architecture design</li> </ul>"},{"location":"changelog/#010-2023-05-04","title":"[0.1.0] - 2023-05-04","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>Initial release of the Halooid platform</li> <li>Basic functionality for all five products:</li> <li>Taskake: Task management system</li> <li>Qultrix: Human Resource Management Software</li> <li>AdminHub: Internal monitoring and administration</li> <li>CustomerConnect: CRM for customer interactions</li> <li>Invantray: Inventory and asset management software</li> <li>Core features:</li> <li>User authentication and authorization</li> <li>Organization management</li> <li>Basic API functionality</li> <li>Web and mobile interfaces</li> </ul>"},{"location":"changelog/#backend","title":"Backend","text":"<ul> <li>Go-based microservices architecture</li> <li>REST and gRPC API implementations</li> <li>PostgreSQL database integration</li> <li>Redis caching</li> <li>JWT authentication</li> </ul>"},{"location":"changelog/#web-frontend","title":"Web Frontend","text":"<ul> <li>Svelte with SvelteKit implementation</li> <li>Tailwind CSS styling</li> <li>Responsive design</li> <li>Basic UI components</li> </ul>"},{"location":"changelog/#mobile","title":"Mobile","text":"<ul> <li>Flutter implementation for iOS and Android</li> <li>Basic mobile UI</li> <li>Offline capabilities</li> </ul>"},{"location":"changelog/#how-to-upgrade","title":"How to Upgrade","text":""},{"location":"changelog/#from-00x-to-010","title":"From 0.0.x to 0.1.0","text":"<p>This is the initial release, so no upgrade path is necessary.</p>"},{"location":"changelog/#future-releases","title":"Future Releases","text":"<p>We plan to release new versions of the Halooid platform regularly. Here's what you can expect in upcoming releases:</p>"},{"location":"changelog/#020-planned-for-2023-06","title":"[0.2.0] - Planned for 2023-06","text":"<ul> <li>Enhanced task management features in Taskake</li> <li>Improved HR management capabilities in Qultrix</li> <li>Advanced monitoring features in AdminHub</li> <li>Enhanced customer relationship management in CustomerConnect</li> <li>Improved inventory management in Invantray</li> <li>Performance optimizations</li> <li>Bug fixes</li> </ul>"},{"location":"changelog/#030-planned-for-2023-07","title":"[0.3.0] - Planned for 2023-07","text":"<ul> <li>Integration with external services</li> <li>Advanced reporting and analytics</li> <li>Mobile app enhancements</li> <li>Performance improvements</li> <li>Security enhancements</li> <li>Bug fixes</li> </ul>"},{"location":"changelog/#100-planned-for-2023-08","title":"[1.0.0] - Planned for 2023-08","text":"<ul> <li>Stable release with all core features</li> <li>Comprehensive documentation</li> <li>Production-ready deployment options</li> <li>Enterprise-grade security</li> <li>Performance optimizations</li> <li>Bug fixes</li> </ul>"},{"location":"faq/","title":"Frequently Asked Questions","text":"<p>This page provides answers to frequently asked questions about the Halooid platform.</p>"},{"location":"faq/#general-questions","title":"General Questions","text":""},{"location":"faq/#what-is-halooid","title":"What is Halooid?","text":"<p>Halooid is a multi-product platform consisting of five integrated products:</p> <ol> <li>Taskake: Task management system</li> <li>Qultrix: Human Resource Management Software</li> <li>AdminHub: Internal monitoring and administration</li> <li>CustomerConnect: CRM for customer interactions</li> <li>Invantray: Inventory and asset management software</li> </ol> <p>These products work together to provide a comprehensive solution for businesses of all sizes.</p>"},{"location":"faq/#is-halooid-open-source","title":"Is Halooid open source?","text":"<p>Yes, Halooid is an open-source platform. The source code is available on GitHub under the MIT license.</p>"},{"location":"faq/#can-i-use-halooid-for-free","title":"Can I use Halooid for free?","text":"<p>Yes, you can use the open-source version of Halooid for free. We also offer a cloud-hosted version with additional features and support, which follows a subscription model.</p>"},{"location":"faq/#can-i-contribute-to-halooid","title":"Can I contribute to Halooid?","text":"<p>Absolutely! We welcome contributions from the community. Please check our Contributing Guide for more information.</p>"},{"location":"faq/#what-technologies-does-halooid-use","title":"What technologies does Halooid use?","text":"<p>Halooid is built using the following technologies:</p> <ul> <li>Backend: Go</li> <li>Web Frontend: Svelte with SvelteKit</li> <li>Mobile: Flutter</li> <li>Database: PostgreSQL with Redis for caching</li> <li>API: REST with OpenAPI + gRPC for internal communication</li> </ul>"},{"location":"faq/#product-questions","title":"Product Questions","text":""},{"location":"faq/#can-i-use-the-products-separately","title":"Can I use the products separately?","text":"<p>Yes, each product in the Halooid platform can be used independently. However, they are designed to work together seamlessly, providing additional value through integration.</p>"},{"location":"faq/#how-do-the-products-integrate-with-each-other","title":"How do the products integrate with each other?","text":"<p>The products integrate through:</p> <ol> <li>Shared User Management: Users can access all products with a single account.</li> <li>Cross-Product Workflows: Actions in one product can trigger workflows in another.</li> <li>Unified Data Model: Common entities like users, organizations, and projects are shared across products.</li> <li>Consistent User Experience: All products follow the same design principles and interaction patterns.</li> </ol>"},{"location":"faq/#can-i-extend-the-functionality-of-the-products","title":"Can I extend the functionality of the products?","text":"<p>Yes, the Halooid platform is designed to be extensible. You can:</p> <ol> <li>Develop Plugins: Create plugins to add new functionality.</li> <li>Customize Workflows: Configure workflows to match your business processes.</li> <li>Integrate with External Systems: Use the API to integrate with other systems.</li> <li>Modify the Source Code: Since Halooid is open source, you can modify the source code to suit your needs.</li> </ol>"},{"location":"faq/#technical-questions","title":"Technical Questions","text":""},{"location":"faq/#what-are-the-system-requirements-for-halooid","title":"What are the system requirements for Halooid?","text":"<p>For users: - Web Browser: Latest version of Chrome, Firefox, Safari, or Edge - Mobile Device: iOS 14+ or Android 8+ - Internet Connection: Broadband connection (1 Mbps or faster)</p> <p>For developers: - Operating System: macOS, Linux, or Windows 10+ - Go: Version 1.20 or later - Node.js: Version 18 or later - Flutter: Version 3.0 or later - Docker: Latest version - Docker Compose: Latest version - PostgreSQL: Version 14 or later - Redis: Version 6 or later - Git: Latest version</p>"},{"location":"faq/#how-can-i-deploy-halooid","title":"How can I deploy Halooid?","text":"<p>You can deploy Halooid in several ways:</p> <ol> <li>Cloud Hosted (SaaS): Use our cloud-hosted solution at halooid.com.</li> <li>Self-Hosted with Docker Compose: The simplest way to self-host Halooid.</li> <li>Self-Hosted with Kubernetes: For more advanced deployments with high availability and scalability.</li> <li>Manual Installation: For complete control over the installation process.</li> </ol> <p>For more information, see the Installation Guide.</p>"},{"location":"faq/#how-can-i-back-up-my-data","title":"How can I back up my data?","text":"<p>For self-hosted installations, you can back up your data by:</p> <ol> <li>Database Backup: Use PostgreSQL's backup tools to create database backups.</li> <li>File Backup: Back up uploaded files and configuration files.</li> <li>Docker Volume Backup: If using Docker, back up the Docker volumes.</li> </ol> <p>For cloud-hosted installations, we handle backups automatically.</p>"},{"location":"faq/#how-can-i-upgrade-to-a-new-version","title":"How can I upgrade to a new version?","text":"<p>For self-hosted installations, you can upgrade by:</p> <ol> <li>Docker Compose: Pull the latest images and restart the containers.</li> <li>Kubernetes: Update the Helm chart or manifests to use the new version.</li> <li>Manual Installation: Follow the upgrade instructions in the release notes.</li> </ol> <p>For cloud-hosted installations, we handle upgrades automatically.</p>"},{"location":"faq/#security-questions","title":"Security Questions","text":""},{"location":"faq/#is-my-data-secure-with-halooid","title":"Is my data secure with Halooid?","text":"<p>Yes, we take security seriously. The Halooid platform implements multiple layers of security:</p> <ol> <li>Authentication: JWT-based authentication for all API requests</li> <li>Authorization: Role-based access control for fine-grained permissions</li> <li>Data Encryption: Encryption of sensitive data at rest and in transit</li> <li>Input Validation: Thorough validation of all user inputs</li> <li>Rate Limiting: Protection against abuse and DoS attacks</li> <li>Audit Logging: Comprehensive logging of security-relevant events</li> </ol>"},{"location":"faq/#how-does-halooid-handle-user-authentication","title":"How does Halooid handle user authentication?","text":"<p>Halooid uses JWT (JSON Web Tokens) for authentication. Users can authenticate using:</p> <ol> <li>Username and Password: Traditional username and password authentication</li> <li>OAuth: Authentication through providers like Google, GitHub, etc.</li> <li>SAML: Authentication through enterprise identity providers</li> <li>Two-Factor Authentication: Additional security with 2FA</li> </ol>"},{"location":"faq/#can-i-integrate-halooid-with-my-existing-authentication-system","title":"Can I integrate Halooid with my existing authentication system?","text":"<p>Yes, Halooid can integrate with existing authentication systems through:</p> <ol> <li>OAuth: Integration with OAuth providers</li> <li>SAML: Integration with SAML providers</li> <li>LDAP: Integration with LDAP directories</li> <li>Custom Authentication: Development of custom authentication providers</li> </ol>"},{"location":"faq/#support-questions","title":"Support Questions","text":""},{"location":"faq/#how-can-i-get-help-with-halooid","title":"How can I get help with Halooid?","text":"<p>If you need help with the Halooid platform, there are several resources available:</p> <ul> <li>Documentation: This documentation provides comprehensive information about the platform.</li> <li>Community Forum: Join our Community Forum to ask questions and share ideas.</li> <li>GitHub Issues: Report bugs and request features on our GitHub repository.</li> <li>Support: Contact our support team at support@halooid.com.</li> </ul>"},{"location":"faq/#how-can-i-report-a-bug","title":"How can I report a bug?","text":"<p>If you find a bug in the Halooid platform, please report it by:</p> <ol> <li>GitHub Issues: Create an issue on our GitHub repository.</li> <li>Support: Contact our support team at support@halooid.com.</li> </ol> <p>Please include as much information as possible, including steps to reproduce the bug, expected behavior, actual behavior, and any error messages or screenshots.</p>"},{"location":"faq/#how-can-i-request-a-feature","title":"How can I request a feature?","text":"<p>If you have an idea for a new feature, please suggest it by:</p> <ol> <li>GitHub Issues: Create an issue on our GitHub repository.</li> <li>Community Forum: Share your idea on our Community Forum.</li> <li>Support: Contact our support team at support@halooid.com.</li> </ol> <p>Please include a detailed description of the feature, why it would be useful, and any relevant examples or mockups.</p>"},{"location":"roadmap/","title":"Roadmap","text":"<p>This page outlines the future development plans for the Halooid platform. Please note that this roadmap is subject to change based on user feedback and project priorities.</p>"},{"location":"roadmap/#short-term-goals-next-3-months","title":"Short-Term Goals (Next 3 Months)","text":""},{"location":"roadmap/#q2-2023","title":"Q2 2023","text":""},{"location":"roadmap/#platform-core","title":"Platform Core","text":"<ul> <li> Initial project setup</li> <li> Documentation structure</li> <li> Architecture design</li> <li> Core authentication and authorization system</li> <li> Basic API infrastructure</li> <li> Database schema design</li> <li> Development environment setup</li> </ul>"},{"location":"roadmap/#taskake","title":"Taskake","text":"<ul> <li> Basic task management functionality</li> <li> Project management features</li> <li> Task assignment and tracking</li> <li> Basic reporting</li> </ul>"},{"location":"roadmap/#qultrix","title":"Qultrix","text":"<ul> <li> Employee record management</li> <li> Basic HR processes</li> <li> Time-off management</li> <li> Employee directory</li> </ul>"},{"location":"roadmap/#adminhub","title":"AdminHub","text":"<ul> <li> Basic monitoring dashboard</li> <li> User management</li> <li> System health monitoring</li> <li> Basic reporting</li> </ul>"},{"location":"roadmap/#customerconnect","title":"CustomerConnect","text":"<ul> <li> Contact management</li> <li> Basic CRM functionality</li> <li> Customer communication tools</li> <li> Lead tracking</li> </ul>"},{"location":"roadmap/#invantray","title":"Invantray","text":"<ul> <li> Basic inventory management</li> <li> Asset tracking</li> <li> Inventory reporting</li> <li> Stock level monitoring</li> </ul>"},{"location":"roadmap/#medium-term-goals-3-6-months","title":"Medium-Term Goals (3-6 Months)","text":""},{"location":"roadmap/#q3-2023","title":"Q3 2023","text":""},{"location":"roadmap/#platform-core_1","title":"Platform Core","text":"<ul> <li> Advanced authentication features (OAuth, SAML)</li> <li> Enhanced API capabilities</li> <li> Performance optimizations</li> <li> Security enhancements</li> <li> Integration framework</li> </ul>"},{"location":"roadmap/#taskake_1","title":"Taskake","text":"<ul> <li> Advanced task management</li> <li> Time tracking</li> <li> Task dependencies</li> <li> Custom workflows</li> <li> Advanced reporting</li> </ul>"},{"location":"roadmap/#qultrix_1","title":"Qultrix","text":"<ul> <li> Performance management</li> <li> Recruitment tools</li> <li> Onboarding workflows</li> <li> HR analytics</li> <li> Employee self-service portal</li> </ul>"},{"location":"roadmap/#adminhub_1","title":"AdminHub","text":"<ul> <li> Advanced monitoring</li> <li> Alerting system</li> <li> Audit logging</li> <li> System configuration</li> <li> Advanced reporting</li> </ul>"},{"location":"roadmap/#customerconnect_1","title":"CustomerConnect","text":"<ul> <li> Opportunity management</li> <li> Sales pipeline</li> <li> Customer support integration</li> <li> Marketing automation</li> <li> Customer analytics</li> </ul>"},{"location":"roadmap/#invantray_1","title":"Invantray","text":"<ul> <li> Barcode/QR code scanning</li> <li> Procurement management</li> <li> Supplier management</li> <li> Inventory forecasting</li> <li> Advanced reporting</li> </ul>"},{"location":"roadmap/#long-term-goals-6-12-months","title":"Long-Term Goals (6-12 Months)","text":""},{"location":"roadmap/#q4-2023-q1-2024","title":"Q4 2023 - Q1 2024","text":""},{"location":"roadmap/#platform-core_2","title":"Platform Core","text":"<ul> <li> AI and machine learning integration</li> <li> Advanced analytics</li> <li> Workflow automation</li> <li> Mobile app enhancements</li> <li> Enterprise features</li> </ul>"},{"location":"roadmap/#taskake_2","title":"Taskake","text":"<ul> <li> AI-powered task suggestions</li> <li> Resource management</li> <li> Advanced project planning</li> <li> Integration with external tools</li> <li> Gantt charts and timelines</li> </ul>"},{"location":"roadmap/#qultrix_2","title":"Qultrix","text":"<ul> <li> Payroll integration</li> <li> Advanced HR analytics</li> <li> Learning management</li> <li> Talent management</li> <li> Compliance management</li> </ul>"},{"location":"roadmap/#adminhub_2","title":"AdminHub","text":"<ul> <li> Predictive monitoring</li> <li> Advanced security features</li> <li> Multi-tenant support</li> <li> Custom dashboards</li> <li> Advanced analytics</li> </ul>"},{"location":"roadmap/#customerconnect_2","title":"CustomerConnect","text":"<ul> <li> AI-powered customer insights</li> <li> Advanced marketing automation</li> <li> Customer journey mapping</li> <li> Social media integration</li> <li> Advanced analytics</li> </ul>"},{"location":"roadmap/#invantray_2","title":"Invantray","text":"<ul> <li> IoT integration for real-time tracking</li> <li> Advanced forecasting</li> <li> Supply chain management</li> <li> Multi-location support</li> <li> Advanced analytics</li> </ul>"},{"location":"roadmap/#feature-requests-and-feedback","title":"Feature Requests and Feedback","text":"<p>We welcome feature requests and feedback from the community. If you have ideas for new features or improvements, please:</p> <ol> <li>Check the roadmap to see if your idea is already planned</li> <li>Submit a feature request on our GitHub repository</li> <li>Join the discussion on our Community Forum</li> </ol>"},{"location":"roadmap/#release-schedule","title":"Release Schedule","text":"<p>We aim to release new versions of the Halooid platform according to the following schedule:</p> <ul> <li>Minor Releases: Monthly</li> <li>Major Releases: Quarterly</li> </ul> <p>Please note that this schedule is subject to change based on development progress and priorities.</p>"},{"location":"roadmap/#prioritization-criteria","title":"Prioritization Criteria","text":"<p>When prioritizing features and improvements, we consider the following criteria:</p> <ol> <li>User Impact: How many users will benefit from the feature?</li> <li>Strategic Alignment: How well does the feature align with our vision?</li> <li>Complexity: How complex is the feature to implement?</li> <li>Dependencies: Does the feature depend on other features or components?</li> <li>Community Interest: How much interest has the community shown in the feature?</li> </ol>"},{"location":"roadmap/#contributing-to-the-roadmap","title":"Contributing to the Roadmap","text":"<p>If you're interested in contributing to the development of features on our roadmap, please check our Contributing Guide for more information.</p>"},{"location":"api-reference/","title":"API Reference","text":"<p>The Halooid platform provides a comprehensive set of APIs that allow you to interact with the platform programmatically. This reference documentation provides detailed information about the available APIs, including endpoints, request and response formats, authentication, and examples.</p>"},{"location":"api-reference/#api-overview","title":"API Overview","text":"<p>The Halooid platform offers two types of APIs:</p> <ol> <li>REST APIs: HTTP-based APIs that follow REST principles, documented using OpenAPI specifications.</li> <li>gRPC APIs: High-performance RPC APIs used primarily for internal service-to-service communication.</li> </ol> <pre><code>graph LR\n    Client[Client Applications] --&gt; REST[REST APIs]\n    Service1[Internal Service 1] --&gt; gRPC[gRPC APIs]\n    Service2[Internal Service 2] --&gt; gRPC\n\n    subgraph \"External APIs\"\n        REST\n    end\n\n    subgraph \"Internal APIs\"\n        gRPC\n    end</code></pre>"},{"location":"api-reference/#authentication","title":"Authentication","text":"<p>All API requests must be authenticated using JWT (JSON Web Tokens). To authenticate your requests:</p> <ol> <li>Obtain a JWT token by calling the authentication endpoint with valid credentials.</li> <li>Include the token in the <code>Authorization</code> header of your requests:    <pre><code>Authorization: Bearer &lt;your_token&gt;\n</code></pre></li> </ol> <p>For more information about authentication, see the Authentication Guide.</p>"},{"location":"api-reference/#rate-limiting","title":"Rate Limiting","text":"<p>To ensure the stability and availability of our APIs, we implement rate limiting. The current rate limits are:</p> <ul> <li>REST APIs: 100 requests per minute per user</li> <li>gRPC APIs: 1000 requests per minute per service</li> </ul> <p>If you exceed these limits, you will receive a <code>429 Too Many Requests</code> response. The response will include a <code>Retry-After</code> header indicating how long you should wait before making another request.</p>"},{"location":"api-reference/#error-handling","title":"Error Handling","text":"<p>All APIs use standard HTTP status codes to indicate the success or failure of a request. In addition, error responses include a JSON body with more detailed information:</p> <pre><code>{\n  \"error\": {\n    \"code\": \"RESOURCE_NOT_FOUND\",\n    \"message\": \"The requested resource was not found\",\n    \"details\": {\n      \"resource_type\": \"Task\",\n      \"resource_id\": \"123\"\n    }\n  }\n}\n</code></pre> <p>For more information about error handling, see the Error Handling Guide.</p>"},{"location":"api-reference/#api-versioning","title":"API Versioning","text":"<p>All APIs are versioned to ensure backward compatibility. The version is included in the URL path:</p> <pre><code>https://api.halooid.com/v1/tasks\n</code></pre> <p>We follow semantic versioning for our APIs:</p> <ul> <li>Major version changes (v1, v2, etc.): Breaking changes that require client updates.</li> <li>Minor version changes (v1.1, v1.2, etc.): Non-breaking additions or changes.</li> <li>Patch version changes (v1.1.1, v1.1.2, etc.): Bug fixes and minor improvements.</li> </ul>"},{"location":"api-reference/#product-apis","title":"Product APIs","text":"<p>Each product in the Halooid platform has its own set of APIs:</p>"},{"location":"api-reference/#taskake-api","title":"Taskake API","text":"<p>The Taskake API allows you to manage tasks, projects, and teams programmatically. For more information, see the Taskake API Reference.</p>"},{"location":"api-reference/#qultrix-api","title":"Qultrix API","text":"<p>The Qultrix API allows you to manage HR processes, including employee records, time off, and performance reviews. For more information, see the Qultrix API Reference.</p>"},{"location":"api-reference/#adminhub-api","title":"AdminHub API","text":"<p>The AdminHub API allows you to monitor and administer the Halooid platform. For more information, see the AdminHub API Reference.</p>"},{"location":"api-reference/#customerconnect-api","title":"CustomerConnect API","text":"<p>The CustomerConnect API allows you to manage customer relationships, including contacts, opportunities, and interactions. For more information, see the CustomerConnect API Reference.</p>"},{"location":"api-reference/#invantray-api","title":"Invantray API","text":"<p>The Invantray API allows you to manage inventory and assets. For more information, see the Invantray API Reference.</p>"},{"location":"api-reference/#api-specifications","title":"API Specifications","text":""},{"location":"api-reference/#rest-api","title":"REST API","text":"<p>The REST API is documented using OpenAPI specifications. You can view the full specification here:</p> <ul> <li>OpenAPI Specification</li> </ul>"},{"location":"api-reference/#grpc-api","title":"gRPC API","text":"<p>The gRPC API is documented using Protocol Buffers. You can view the full specification here:</p> <ul> <li>gRPC Specification</li> </ul>"},{"location":"api-reference/#api-client-libraries","title":"API Client Libraries","text":"<p>We provide client libraries for popular programming languages to make it easier to integrate with the Halooid platform:</p> <ul> <li>Go: halooid-go</li> <li>JavaScript/TypeScript: halooid-js</li> <li>Python: halooid-python</li> <li>Java: halooid-java</li> </ul>"},{"location":"api-reference/#api-examples","title":"API Examples","text":""},{"location":"api-reference/#rest-api-example","title":"REST API Example","text":"<pre><code># Get a list of tasks\ncurl -X GET \\\n  https://api.halooid.com/v1/tasks \\\n  -H 'Authorization: Bearer &lt;your_token&gt;' \\\n  -H 'Content-Type: application/json'\n\n# Create a new task\ncurl -X POST \\\n  https://api.halooid.com/v1/tasks \\\n  -H 'Authorization: Bearer &lt;your_token&gt;' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"title\": \"Complete API documentation\",\n    \"description\": \"Write comprehensive API documentation for the Halooid platform\",\n    \"due_date\": \"2023-12-31T23:59:59Z\",\n    \"assignee_id\": \"user123\",\n    \"project_id\": \"project456\",\n    \"priority\": \"high\"\n  }'\n</code></pre>"},{"location":"api-reference/#grpc-api-example","title":"gRPC API Example","text":"<pre><code>// Connect to the gRPC server\nconn, err := grpc.Dial(\"api.halooid.com:50051\", grpc.WithTransportCredentials(credentials))\nif err != nil {\n    log.Fatalf(\"Failed to connect: %v\", err)\n}\ndefer conn.Close()\n\n// Create a client\nclient := pb.NewTaskServiceClient(conn)\n\n// Create a new task\ntask, err := client.CreateTask(context.Background(), &amp;pb.CreateTaskRequest{\n    Title: \"Complete API documentation\",\n    Description: \"Write comprehensive API documentation for the Halooid platform\",\n    DueDate: timestamppb.New(time.Date(2023, 12, 31, 23, 59, 59, 0, time.UTC)),\n    AssigneeId: \"user123\",\n    ProjectId: \"project456\",\n    Priority: pb.TaskPriority_HIGH,\n})\nif err != nil {\n    log.Fatalf(\"Failed to create task: %v\", err)\n}\nlog.Printf(\"Created task: %v\", task)\n</code></pre>"},{"location":"api-reference/#next-steps","title":"Next Steps","text":"<p>To learn more about specific APIs, check out the following pages:</p> <ul> <li>REST API Reference</li> <li>gRPC API Reference</li> <li>Product-specific API References</li> </ul>"},{"location":"api-reference/grpc/","title":"gRPC API Reference","text":"<p>This page will contain detailed reference documentation for the gRPC APIs of the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"api-reference/notification/","title":"Notification API Reference","text":"<p>The Notification API allows you to manage notifications in the system.</p>"},{"location":"api-reference/notification/#base-url","title":"Base URL","text":"<pre><code>/api/v1/notifications\n</code></pre>"},{"location":"api-reference/notification/#authentication","title":"Authentication","text":"<p>All endpoints require authentication using a JWT token. The token should be included in the <code>Authorization</code> header as a Bearer token.</p> <pre><code>Authorization: Bearer &lt;token&gt;\n</code></pre>"},{"location":"api-reference/notification/#endpoints","title":"Endpoints","text":""},{"location":"api-reference/notification/#list-notifications","title":"List Notifications","text":"<p>Retrieves a list of notifications for the authenticated user.</p> <p>URL: <code>GET /api/v1/notifications</code></p> <p>Query Parameters:</p> <ul> <li><code>type</code> (optional) - Filter by notification type (task_assigned, task_status_update, task_due_soon, task_overdue, task_comment, task_mention)</li> <li><code>is_read</code> (optional) - Filter by read status (true/false)</li> <li><code>sort_by</code> (optional) - Sort by field (created_at, type, is_read)</li> <li><code>sort_order</code> (optional) - Sort order (asc/desc)</li> <li><code>page</code> (optional) - Page number (default: 1)</li> <li><code>page_size</code> (optional) - Page size (default: 20, max: 100)</li> </ul> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"notifications\": [\n    {\n      \"id\": \"uuid\",\n      \"user_id\": \"uuid\",\n      \"type\": \"task_assigned | task_status_update | task_due_soon | task_overdue | task_comment | task_mention\",\n      \"title\": \"string\",\n      \"message\": \"string\",\n      \"resource_type\": \"string\",\n      \"resource_id\": \"uuid\",\n      \"is_read\": \"boolean\",\n      \"created_at\": \"datetime\",\n      \"read_at\": \"datetime (optional)\"\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"number\",\n    \"page\": \"number\",\n    \"page_size\": \"number\",\n    \"total_pages\": \"number\"\n  }\n}\n</code></pre>"},{"location":"api-reference/notification/#get-notification-by-id","title":"Get Notification by ID","text":"<p>Retrieves a notification by ID.</p> <p>URL: <code>GET /api/v1/notifications/{id}</code></p> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"type\": \"task_assigned | task_status_update | task_due_soon | task_overdue | task_comment | task_mention\",\n  \"title\": \"string\",\n  \"message\": \"string\",\n  \"resource_type\": \"string\",\n  \"resource_id\": \"uuid\",\n  \"is_read\": \"boolean\",\n  \"created_at\": \"datetime\",\n  \"read_at\": \"datetime (optional)\"\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Notification not found</li> <li><code>403 Forbidden</code> - You don't have permission to access this notification</li> </ul>"},{"location":"api-reference/notification/#mark-notification-as-read","title":"Mark Notification as Read","text":"<p>Marks a notification as read.</p> <p>URL: <code>PUT /api/v1/notifications/{id}/read</code></p> <p>Response: <code>204 No Content</code></p> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Notification not found</li> <li><code>403 Forbidden</code> - You don't have permission to access this notification</li> </ul>"},{"location":"api-reference/notification/#mark-all-notifications-as-read","title":"Mark All Notifications as Read","text":"<p>Marks all notifications for the authenticated user as read.</p> <p>URL: <code>PUT /api/v1/notifications/read-all</code></p> <p>Response: <code>204 No Content</code></p>"},{"location":"api-reference/notification/#delete-notification","title":"Delete Notification","text":"<p>Deletes a notification.</p> <p>URL: <code>DELETE /api/v1/notifications/{id}</code></p> <p>Response: <code>204 No Content</code></p> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Notification not found</li> <li><code>403 Forbidden</code> - You don't have permission to access this notification</li> </ul>"},{"location":"api-reference/notification/#delete-all-notifications","title":"Delete All Notifications","text":"<p>Deletes all notifications for the authenticated user.</p> <p>URL: <code>DELETE /api/v1/notifications</code></p> <p>Response: <code>204 No Content</code></p>"},{"location":"api-reference/notification/#data-models","title":"Data Models","text":""},{"location":"api-reference/notification/#notification","title":"Notification","text":"<pre><code>{\n  \"id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"type\": \"task_assigned | task_status_update | task_due_soon | task_overdue | task_comment | task_mention\",\n  \"title\": \"string\",\n  \"message\": \"string\",\n  \"resource_type\": \"string\",\n  \"resource_id\": \"uuid\",\n  \"is_read\": \"boolean\",\n  \"created_at\": \"datetime\",\n  \"read_at\": \"datetime (optional)\"\n}\n</code></pre>"},{"location":"api-reference/rest/","title":"REST API Reference","text":"<p>This page will contain detailed reference documentation for the REST APIs of the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"api-reference/qultrix/employee/","title":"Employee API Reference","text":"<p>The Employee API allows you to manage employee records in the Qultrix product.</p>"},{"location":"api-reference/qultrix/employee/#base-url","title":"Base URL","text":"<pre><code>/api/v1/organizations/{org_id}/qultrix/employees\n</code></pre>"},{"location":"api-reference/qultrix/employee/#authentication","title":"Authentication","text":"<p>All endpoints require authentication using a JWT token. The token should be included in the <code>Authorization</code> header as a Bearer token.</p> <pre><code>Authorization: Bearer &lt;token&gt;\n</code></pre>"},{"location":"api-reference/qultrix/employee/#permissions","title":"Permissions","text":"<p>The following permissions are required to access the Employee API:</p> <ul> <li><code>employee:read</code> - Required to read employee records</li> <li><code>employee:write</code> - Required to create and update employee records</li> <li><code>employee:delete</code> - Required to delete employee records</li> </ul>"},{"location":"api-reference/qultrix/employee/#endpoints","title":"Endpoints","text":""},{"location":"api-reference/qultrix/employee/#create-employee","title":"Create Employee","text":"<p>Creates a new employee record.</p> <p>URL: <code>POST /api/v1/organizations/{org_id}/qultrix/employees</code></p> <p>Permissions: <code>employee:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"user_id\": \"uuid\",\n  \"employee_id\": \"string\",\n  \"department\": \"string\",\n  \"position\": \"string\",\n  \"hire_date\": \"date\",\n  \"manager_id\": \"uuid (optional)\",\n  \"salary\": \"number\"\n}\n</code></pre> <p>Response: <code>201 Created</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"organization_id\": \"uuid\",\n  \"employee_id\": \"string\",\n  \"department\": \"string\",\n  \"position\": \"string\",\n  \"hire_date\": \"date\",\n  \"manager_id\": \"uuid (optional)\",\n  \"salary\": \"number\",\n  \"is_active\": true,\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"manager\": {\n    \"id\": \"uuid\",\n    \"employee_id\": \"string\",\n    \"department\": \"string\",\n    \"position\": \"string\",\n    \"user\": {\n      \"id\": \"uuid\",\n      \"email\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\"\n    }\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>404 Not Found</code> - User or manager not found</li> <li><code>409 Conflict</code> - Employee ID already exists or user is already an employee</li> </ul>"},{"location":"api-reference/qultrix/employee/#get-employee-by-id","title":"Get Employee by ID","text":"<p>Retrieves an employee record by ID.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/qultrix/employees/{id}</code></p> <p>Permissions: <code>employee:read</code></p> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"organization_id\": \"uuid\",\n  \"employee_id\": \"string\",\n  \"department\": \"string\",\n  \"position\": \"string\",\n  \"hire_date\": \"date\",\n  \"manager_id\": \"uuid (optional)\",\n  \"salary\": \"number\",\n  \"is_active\": true,\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"manager\": {\n    \"id\": \"uuid\",\n    \"employee_id\": \"string\",\n    \"department\": \"string\",\n    \"position\": \"string\",\n    \"user\": {\n      \"id\": \"uuid\",\n      \"email\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\"\n    }\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Employee not found</li> </ul>"},{"location":"api-reference/qultrix/employee/#get-employee-by-employee-id","title":"Get Employee by Employee ID","text":"<p>Retrieves an employee record by employee ID.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/qultrix/employees/by-employee-id/{employee_id}</code></p> <p>Permissions: <code>employee:read</code></p> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"organization_id\": \"uuid\",\n  \"employee_id\": \"string\",\n  \"department\": \"string\",\n  \"position\": \"string\",\n  \"hire_date\": \"date\",\n  \"manager_id\": \"uuid (optional)\",\n  \"salary\": \"number\",\n  \"is_active\": true,\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"manager\": {\n    \"id\": \"uuid\",\n    \"employee_id\": \"string\",\n    \"department\": \"string\",\n    \"position\": \"string\",\n    \"user\": {\n      \"id\": \"uuid\",\n      \"email\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\"\n    }\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Employee not found</li> </ul>"},{"location":"api-reference/qultrix/employee/#list-employees","title":"List Employees","text":"<p>Retrieves a list of employees based on filter parameters.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/qultrix/employees</code></p> <p>Permissions: <code>employee:read</code></p> <p>Query Parameters:</p> <ul> <li><code>department</code> (optional) - Filter by department</li> <li><code>position</code> (optional) - Filter by position</li> <li><code>is_active</code> (optional) - Filter by active status (true/false)</li> <li><code>sort_by</code> (optional) - Sort by field (employee_id, department, position, hire_date, salary)</li> <li><code>sort_order</code> (optional) - Sort order (asc/desc)</li> <li><code>page</code> (optional) - Page number (default: 1)</li> <li><code>page_size</code> (optional) - Page size (default: 10, max: 100)</li> </ul> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"employees\": [\n    {\n      \"id\": \"uuid\",\n      \"organization_id\": \"uuid\",\n      \"employee_id\": \"string\",\n      \"department\": \"string\",\n      \"position\": \"string\",\n      \"hire_date\": \"date\",\n      \"manager_id\": \"uuid (optional)\",\n      \"salary\": \"number\",\n      \"is_active\": true,\n      \"created_at\": \"datetime\",\n      \"updated_at\": \"datetime\",\n      \"user\": {\n        \"id\": \"uuid\",\n        \"email\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"number\",\n    \"page\": \"number\",\n    \"page_size\": \"number\",\n    \"total_pages\": \"number\"\n  }\n}\n</code></pre>"},{"location":"api-reference/qultrix/employee/#update-employee","title":"Update Employee","text":"<p>Updates an employee record.</p> <p>URL: <code>PUT /api/v1/organizations/{org_id}/qultrix/employees/{id}</code></p> <p>Permissions: <code>employee:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"user_id\": \"uuid\",\n  \"employee_id\": \"string\",\n  \"department\": \"string\",\n  \"position\": \"string\",\n  \"hire_date\": \"date\",\n  \"manager_id\": \"uuid (optional)\",\n  \"salary\": \"number\"\n}\n</code></pre> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"organization_id\": \"uuid\",\n  \"employee_id\": \"string\",\n  \"department\": \"string\",\n  \"position\": \"string\",\n  \"hire_date\": \"date\",\n  \"manager_id\": \"uuid (optional)\",\n  \"salary\": \"number\",\n  \"is_active\": true,\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"manager\": {\n    \"id\": \"uuid\",\n    \"employee_id\": \"string\",\n    \"department\": \"string\",\n    \"position\": \"string\",\n    \"user\": {\n      \"id\": \"uuid\",\n      \"email\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\"\n    }\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>404 Not Found</code> - Employee or manager not found</li> <li><code>409 Conflict</code> - Employee ID already exists</li> </ul>"},{"location":"api-reference/qultrix/employee/#delete-employee","title":"Delete Employee","text":"<p>Marks an employee record as inactive.</p> <p>URL: <code>DELETE /api/v1/organizations/{org_id}/qultrix/employees/{id}</code></p> <p>Permissions: <code>employee:delete</code></p> <p>Response: <code>204 No Content</code></p> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Employee not found</li> </ul>"},{"location":"api-reference/qultrix/employee/#data-models","title":"Data Models","text":""},{"location":"api-reference/qultrix/employee/#employee","title":"Employee","text":"<pre><code>{\n  \"id\": \"uuid\",\n  \"organization_id\": \"uuid\",\n  \"employee_id\": \"string\",\n  \"department\": \"string\",\n  \"position\": \"string\",\n  \"hire_date\": \"date\",\n  \"manager_id\": \"uuid (optional)\",\n  \"salary\": \"number\",\n  \"is_active\": \"boolean\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"is_active\": \"boolean\",\n    \"created_at\": \"datetime\",\n    \"updated_at\": \"datetime\"\n  },\n  \"manager\": {\n    \"id\": \"uuid\",\n    \"employee_id\": \"string\",\n    \"department\": \"string\",\n    \"position\": \"string\",\n    \"user\": {\n      \"id\": \"uuid\",\n      \"email\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\"\n    }\n  }\n}\n</code></pre>"},{"location":"api-reference/qultrix/employee/#employeerequest","title":"EmployeeRequest","text":"<pre><code>{\n  \"user_id\": \"uuid\",\n  \"employee_id\": \"string\",\n  \"department\": \"string\",\n  \"position\": \"string\",\n  \"hire_date\": \"date\",\n  \"manager_id\": \"uuid (optional)\",\n  \"salary\": \"number\"\n}\n</code></pre>"},{"location":"api-reference/taskodex/comment/","title":"Comment API Reference","text":"<p>The Comment API allows you to manage comments on tasks in the Taskodex product.</p>"},{"location":"api-reference/taskodex/comment/#base-url","title":"Base URL","text":"<pre><code>/api/v1/organizations/{org_id}/taskodex/comments\n</code></pre>"},{"location":"api-reference/taskodex/comment/#authentication","title":"Authentication","text":"<p>All endpoints require authentication using a JWT token. The token should be included in the <code>Authorization</code> header as a Bearer token.</p> <pre><code>Authorization: Bearer &lt;token&gt;\n</code></pre>"},{"location":"api-reference/taskodex/comment/#permissions","title":"Permissions","text":"<p>The following permissions are required to access the Comment API:</p> <ul> <li><code>comment:read</code> - Required to read comments</li> <li><code>comment:write</code> - Required to create and update comments</li> <li><code>comment:delete</code> - Required to delete comments</li> </ul>"},{"location":"api-reference/taskodex/comment/#endpoints","title":"Endpoints","text":""},{"location":"api-reference/taskodex/comment/#create-comment","title":"Create Comment","text":"<p>Creates a new comment on a task.</p> <p>URL: <code>POST /api/v1/organizations/{org_id}/taskodex/comments</code></p> <p>Permissions: <code>comment:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"task_id\": \"uuid\",\n  \"content\": \"string\"\n}\n</code></pre> <p>Response: <code>201 Created</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"content\": \"string\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"mentions\": [\"uuid\"]\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>404 Not Found</code> - Task not found</li> </ul>"},{"location":"api-reference/taskodex/comment/#get-comment-by-id","title":"Get Comment by ID","text":"<p>Retrieves a comment by ID.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/comments/{id}</code></p> <p>Permissions: <code>comment:read</code></p> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"content\": \"string\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"mentions\": [\"uuid\"]\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Comment not found</li> </ul>"},{"location":"api-reference/taskodex/comment/#list-comments","title":"List Comments","text":"<p>Retrieves a list of comments based on filter parameters.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/comments</code></p> <p>Permissions: <code>comment:read</code></p> <p>Query Parameters:</p> <ul> <li><code>task_id</code> (optional) - Filter by task ID</li> <li><code>user_id</code> (optional) - Filter by user ID</li> <li><code>sort_by</code> (optional) - Sort by field (created_at, updated_at)</li> <li><code>sort_order</code> (optional) - Sort order (asc/desc)</li> <li><code>page</code> (optional) - Page number (default: 1)</li> <li><code>page_size</code> (optional) - Page size (default: 20, max: 100)</li> </ul> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"comments\": [\n    {\n      \"id\": \"uuid\",\n      \"task_id\": \"uuid\",\n      \"user_id\": \"uuid\",\n      \"content\": \"string\",\n      \"created_at\": \"datetime\",\n      \"updated_at\": \"datetime\",\n      \"user\": {\n        \"id\": \"uuid\",\n        \"email\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\"\n      },\n      \"mentions\": [\"uuid\"]\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"number\",\n    \"page\": \"number\",\n    \"page_size\": \"number\",\n    \"total_pages\": \"number\"\n  }\n}\n</code></pre>"},{"location":"api-reference/taskodex/comment/#update-comment","title":"Update Comment","text":"<p>Updates a comment.</p> <p>URL: <code>PUT /api/v1/organizations/{org_id}/taskodex/comments/{id}</code></p> <p>Permissions: <code>comment:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"task_id\": \"uuid\",\n  \"content\": \"string\"\n}\n</code></pre> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"content\": \"string\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"mentions\": [\"uuid\"]\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>403 Forbidden</code> - You don't have permission to update this comment</li> <li><code>404 Not Found</code> - Comment or task not found</li> </ul>"},{"location":"api-reference/taskodex/comment/#delete-comment","title":"Delete Comment","text":"<p>Deletes a comment.</p> <p>URL: <code>DELETE /api/v1/organizations/{org_id}/taskodex/comments/{id}</code></p> <p>Permissions: <code>comment:delete</code></p> <p>Response: <code>204 No Content</code></p> <p>Error Responses:</p> <ul> <li><code>403 Forbidden</code> - You don't have permission to delete this comment</li> <li><code>404 Not Found</code> - Comment not found</li> </ul>"},{"location":"api-reference/taskodex/comment/#mentioning-users","title":"Mentioning Users","text":"<p>To mention a user in a comment, include their username with an @ symbol in the comment content. For example:</p> <pre><code>@johndoe Please take a look at this task.\n</code></pre> <p>When a user is mentioned in a comment, they will receive a notification.</p>"},{"location":"api-reference/taskodex/comment/#data-models","title":"Data Models","text":""},{"location":"api-reference/taskodex/comment/#comment","title":"Comment","text":"<pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"content\": \"string\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"mentions\": [\"uuid\"]\n}\n</code></pre>"},{"location":"api-reference/taskodex/comment/#commentrequest","title":"CommentRequest","text":"<pre><code>{\n  \"task_id\": \"uuid\",\n  \"content\": \"string\"\n}\n</code></pre>"},{"location":"api-reference/taskodex/file-attachment/","title":"File Attachment API Reference","text":"<p>The File Attachment API allows you to manage file attachments for tasks in the Taskodex product.</p>"},{"location":"api-reference/taskodex/file-attachment/#base-url","title":"Base URL","text":"<pre><code>/api/v1/organizations/{org_id}/taskodex/files\n</code></pre>"},{"location":"api-reference/taskodex/file-attachment/#authentication","title":"Authentication","text":"<p>All endpoints require authentication using a JWT token. The token should be included in the <code>Authorization</code> header as a Bearer token.</p> <pre><code>Authorization: Bearer &lt;token&gt;\n</code></pre>"},{"location":"api-reference/taskodex/file-attachment/#permissions","title":"Permissions","text":"<p>The following permissions are required to access the File Attachment API:</p> <ul> <li><code>file:read</code> - Required to read file attachments</li> <li><code>file:write</code> - Required to upload file attachments</li> <li><code>file:delete</code> - Required to delete file attachments</li> </ul>"},{"location":"api-reference/taskodex/file-attachment/#endpoints","title":"Endpoints","text":""},{"location":"api-reference/taskodex/file-attachment/#upload-file","title":"Upload File","text":"<p>Uploads a file and creates a file attachment for a task.</p> <p>URL: <code>POST /api/v1/organizations/{org_id}/taskodex/files</code></p> <p>Permissions: <code>file:write</code></p> <p>Content-Type: <code>multipart/form-data</code></p> <p>Form Parameters:</p> <ul> <li><code>task_id</code> - The ID of the task to attach the file to</li> <li><code>file</code> - The file to upload</li> </ul> <p>Response: <code>201 Created</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"file_name\": \"string\",\n  \"file_size\": \"number\",\n  \"content_type\": \"string\",\n  \"download_url\": \"string\",\n  \"created_at\": \"datetime\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body or file size exceeds the limit (10MB)</li> <li><code>404 Not Found</code> - Task not found</li> </ul>"},{"location":"api-reference/taskodex/file-attachment/#get-file-attachment-by-id","title":"Get File Attachment by ID","text":"<p>Retrieves a file attachment by ID.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/files/{id}</code></p> <p>Permissions: <code>file:read</code></p> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"file_name\": \"string\",\n  \"file_size\": \"number\",\n  \"content_type\": \"string\",\n  \"download_url\": \"string\",\n  \"created_at\": \"datetime\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - File attachment not found</li> </ul>"},{"location":"api-reference/taskodex/file-attachment/#list-file-attachments","title":"List File Attachments","text":"<p>Retrieves a list of file attachments based on filter parameters.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/files</code></p> <p>Permissions: <code>file:read</code></p> <p>Query Parameters:</p> <ul> <li><code>task_id</code> (optional) - Filter by task ID</li> <li><code>user_id</code> (optional) - Filter by user ID</li> <li><code>sort_by</code> (optional) - Sort by field (created_at, file_name, file_size)</li> <li><code>sort_order</code> (optional) - Sort order (asc/desc)</li> <li><code>page</code> (optional) - Page number (default: 1)</li> <li><code>page_size</code> (optional) - Page size (default: 20, max: 100)</li> </ul> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"file_attachments\": [\n    {\n      \"id\": \"uuid\",\n      \"task_id\": \"uuid\",\n      \"user_id\": \"uuid\",\n      \"file_name\": \"string\",\n      \"file_size\": \"number\",\n      \"content_type\": \"string\",\n      \"download_url\": \"string\",\n      \"created_at\": \"datetime\",\n      \"user\": {\n        \"id\": \"uuid\",\n        \"email\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"number\",\n    \"page\": \"number\",\n    \"page_size\": \"number\",\n    \"total_pages\": \"number\"\n  }\n}\n</code></pre>"},{"location":"api-reference/taskodex/file-attachment/#download-file","title":"Download File","text":"<p>Downloads a file attachment.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/files/{id}/download</code></p> <p>Permissions: <code>file:read</code></p> <p>Response: The file content with appropriate Content-Type and Content-Disposition headers.</p> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - File attachment not found</li> </ul>"},{"location":"api-reference/taskodex/file-attachment/#delete-file-attachment","title":"Delete File Attachment","text":"<p>Deletes a file attachment.</p> <p>URL: <code>DELETE /api/v1/organizations/{org_id}/taskodex/files/{id}</code></p> <p>Permissions: <code>file:delete</code></p> <p>Response: <code>204 No Content</code></p> <p>Error Responses:</p> <ul> <li><code>403 Forbidden</code> - You don't have permission to delete this file attachment</li> <li><code>404 Not Found</code> - File attachment not found</li> </ul>"},{"location":"api-reference/taskodex/file-attachment/#file-size-limits","title":"File Size Limits","text":"<p>The maximum file size for uploads is 10MB.</p>"},{"location":"api-reference/taskodex/file-attachment/#supported-file-types","title":"Supported File Types","text":"<p>All file types are supported, but the following common file types are recommended:</p> <ul> <li>Documents: PDF, DOC, DOCX, XLS, XLSX, PPT, PPTX, TXT</li> <li>Images: JPG, JPEG, PNG, GIF, SVG</li> <li>Archives: ZIP, RAR, 7Z</li> <li>Code: JS, TS, PY, GO, JAVA, HTML, CSS, JSON, XML</li> </ul>"},{"location":"api-reference/taskodex/file-attachment/#data-models","title":"Data Models","text":""},{"location":"api-reference/taskodex/file-attachment/#fileattachment","title":"FileAttachment","text":"<pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"file_name\": \"string\",\n  \"file_size\": \"number\",\n  \"content_type\": \"string\",\n  \"download_url\": \"string\",\n  \"created_at\": \"datetime\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre>"},{"location":"api-reference/taskodex/project/","title":"Project API Reference","text":"<p>The Project API allows you to manage projects in the Taskodex product.</p>"},{"location":"api-reference/taskodex/project/#base-url","title":"Base URL","text":"<pre><code>/api/v1/organizations/{org_id}/taskodex/projects\n</code></pre>"},{"location":"api-reference/taskodex/project/#authentication","title":"Authentication","text":"<p>All endpoints require authentication using a JWT token. The token should be included in the <code>Authorization</code> header as a Bearer token.</p> <pre><code>Authorization: Bearer &lt;token&gt;\n</code></pre>"},{"location":"api-reference/taskodex/project/#permissions","title":"Permissions","text":"<p>The following permissions are required to access the Project API:</p> <ul> <li><code>project:read</code> - Required to read projects</li> <li><code>project:write</code> - Required to create, update, and manage projects</li> <li><code>project:delete</code> - Required to delete projects</li> </ul>"},{"location":"api-reference/taskodex/project/#endpoints","title":"Endpoints","text":""},{"location":"api-reference/taskodex/project/#create-project","title":"Create Project","text":"<p>Creates a new project.</p> <p>URL: <code>POST /api/v1/organizations/{org_id}/taskodex/projects</code></p> <p>Permissions: <code>project:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"planning | active | on_hold | completed | cancelled\",\n  \"start_date\": \"date (optional)\",\n  \"end_date\": \"date (optional)\"\n}\n</code></pre> <p>Response: <code>201 Created</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"organization_id\": \"uuid\",\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"planning | active | on_hold | completed | cancelled\",\n  \"start_date\": \"date (optional)\",\n  \"end_date\": \"date (optional)\",\n  \"created_by\": \"uuid\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"creator\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>409 Conflict</code> - Project name already exists in this organization</li> </ul>"},{"location":"api-reference/taskodex/project/#get-project-by-id","title":"Get Project by ID","text":"<p>Retrieves a project by ID.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/projects/{id}</code></p> <p>Permissions: <code>project:read</code></p> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"organization_id\": \"uuid\",\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"planning | active | on_hold | completed | cancelled\",\n  \"start_date\": \"date (optional)\",\n  \"end_date\": \"date (optional)\",\n  \"created_by\": \"uuid\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"creator\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Project not found</li> </ul>"},{"location":"api-reference/taskodex/project/#list-projects","title":"List Projects","text":"<p>Retrieves a list of projects based on filter parameters.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/projects</code></p> <p>Permissions: <code>project:read</code></p> <p>Query Parameters:</p> <ul> <li><code>status</code> (optional) - Filter by status (planning, active, on_hold, completed, cancelled)</li> <li><code>created_by</code> (optional) - Filter by creator ID</li> <li><code>search</code> (optional) - Search in name and description</li> <li><code>sort_by</code> (optional) - Sort by field (name, status, start_date, end_date, created_at, updated_at)</li> <li><code>sort_order</code> (optional) - Sort order (asc/desc)</li> <li><code>page</code> (optional) - Page number (default: 1)</li> <li><code>page_size</code> (optional) - Page size (default: 20, max: 100)</li> </ul> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"projects\": [\n    {\n      \"id\": \"uuid\",\n      \"organization_id\": \"uuid\",\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"status\": \"planning | active | on_hold | completed | cancelled\",\n      \"start_date\": \"date (optional)\",\n      \"end_date\": \"date (optional)\",\n      \"created_by\": \"uuid\",\n      \"created_at\": \"datetime\",\n      \"updated_at\": \"datetime\",\n      \"creator\": {\n        \"id\": \"uuid\",\n        \"email\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"number\",\n    \"page\": \"number\",\n    \"page_size\": \"number\",\n    \"total_pages\": \"number\"\n  }\n}\n</code></pre>"},{"location":"api-reference/taskodex/project/#update-project","title":"Update Project","text":"<p>Updates a project.</p> <p>URL: <code>PUT /api/v1/organizations/{org_id}/taskodex/projects/{id}</code></p> <p>Permissions: <code>project:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"planning | active | on_hold | completed | cancelled\",\n  \"start_date\": \"date (optional)\",\n  \"end_date\": \"date (optional)\"\n}\n</code></pre> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"organization_id\": \"uuid\",\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"planning | active | on_hold | completed | cancelled\",\n  \"start_date\": \"date (optional)\",\n  \"end_date\": \"date (optional)\",\n  \"created_by\": \"uuid\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"creator\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>404 Not Found</code> - Project not found</li> <li><code>409 Conflict</code> - Project name already exists in this organization</li> </ul>"},{"location":"api-reference/taskodex/project/#delete-project","title":"Delete Project","text":"<p>Deletes a project.</p> <p>URL: <code>DELETE /api/v1/organizations/{org_id}/taskodex/projects/{id}</code></p> <p>Permissions: <code>project:delete</code></p> <p>Response: <code>204 No Content</code></p> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Cannot delete project with tasks</li> <li><code>404 Not Found</code> - Project not found</li> </ul>"},{"location":"api-reference/taskodex/project/#get-project-tasks","title":"Get Project Tasks","text":"<p>Retrieves all tasks for a project.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/projects/{id}/tasks</code></p> <p>Permissions: <code>project:read</code></p> <p>Query Parameters:</p> <ul> <li><code>status</code> (optional) - Filter by status (todo, in_progress, review, done, cancelled)</li> <li><code>priority</code> (optional) - Filter by priority (low, medium, high, critical)</li> <li><code>assigned_to</code> (optional) - Filter by assignee ID</li> <li><code>due_before</code> (optional) - Filter by due date before (ISO 8601 format)</li> <li><code>due_after</code> (optional) - Filter by due date after (ISO 8601 format)</li> <li><code>search</code> (optional) - Search in title and description</li> <li><code>sort_by</code> (optional) - Sort by field (title, status, priority, due_date, created_at, updated_at)</li> <li><code>sort_order</code> (optional) - Sort order (asc/desc)</li> <li><code>page</code> (optional) - Page number (default: 1)</li> <li><code>page_size</code> (optional) - Page size (default: 20, max: 100)</li> </ul> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"tasks\": [\n    {\n      \"id\": \"uuid\",\n      \"project_id\": \"uuid\",\n      \"title\": \"string\",\n      \"description\": \"string\",\n      \"status\": \"todo | in_progress | review | done | cancelled\",\n      \"priority\": \"low | medium | high | critical\",\n      \"due_date\": \"date (optional)\",\n      \"created_by\": \"uuid\",\n      \"assigned_to\": \"uuid (optional)\",\n      \"estimated_hours\": \"number (optional)\",\n      \"actual_hours\": \"number (optional)\",\n      \"tags\": [\"string\"],\n      \"created_at\": \"datetime\",\n      \"updated_at\": \"datetime\",\n      \"creator\": {\n        \"id\": \"uuid\",\n        \"email\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\"\n      },\n      \"assignee\": {\n        \"id\": \"uuid\",\n        \"email\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"number\",\n    \"page\": \"number\",\n    \"page_size\": \"number\",\n    \"total_pages\": \"number\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Project not found</li> </ul>"},{"location":"api-reference/taskodex/project/#add-task-to-project","title":"Add Task to Project","text":"<p>Adds a task to a project.</p> <p>URL: <code>POST /api/v1/organizations/{org_id}/taskodex/projects/{id}/tasks</code></p> <p>Permissions: <code>project:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"task_id\": \"uuid\"\n}\n</code></pre> <p>Response: <code>204 No Content</code></p> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>404 Not Found</code> - Project or task not found</li> </ul>"},{"location":"api-reference/taskodex/project/#remove-task-from-project","title":"Remove Task from Project","text":"<p>Removes a task from a project.</p> <p>URL: <code>DELETE /api/v1/organizations/{org_id}/taskodex/projects/{id}/tasks/{task_id}</code></p> <p>Permissions: <code>project:write</code></p> <p>Response: <code>204 No Content</code></p> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Task does not belong to the project</li> <li><code>404 Not Found</code> - Project or task not found</li> </ul>"},{"location":"api-reference/taskodex/project/#data-models","title":"Data Models","text":""},{"location":"api-reference/taskodex/project/#project","title":"Project","text":"<pre><code>{\n  \"id\": \"uuid\",\n  \"organization_id\": \"uuid\",\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"planning | active | on_hold | completed | cancelled\",\n  \"start_date\": \"date (optional)\",\n  \"end_date\": \"date (optional)\",\n  \"created_by\": \"uuid\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"creator\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre>"},{"location":"api-reference/taskodex/project/#projectrequest","title":"ProjectRequest","text":"<pre><code>{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"planning | active | on_hold | completed | cancelled\",\n  \"start_date\": \"date (optional)\",\n  \"end_date\": \"date (optional)\"\n}\n</code></pre>"},{"location":"api-reference/taskodex/task-assignment/","title":"Task Assignment and Tracking API Reference","text":"<p>The Task Assignment and Tracking API allows you to manage task assignments and track task progress in the Taskodex product.</p>"},{"location":"api-reference/taskodex/task-assignment/#base-url","title":"Base URL","text":"<pre><code>/api/v1/organizations/{org_id}/taskodex/tasks\n</code></pre>"},{"location":"api-reference/taskodex/task-assignment/#authentication","title":"Authentication","text":"<p>All endpoints require authentication using a JWT token. The token should be included in the <code>Authorization</code> header as a Bearer token.</p> <pre><code>Authorization: Bearer &lt;token&gt;\n</code></pre>"},{"location":"api-reference/taskodex/task-assignment/#permissions","title":"Permissions","text":"<p>The following permissions are required to access the Task Assignment and Tracking API:</p> <ul> <li><code>task:read</code> - Required to read tasks</li> <li><code>task:write</code> - Required to assign, unassign, and update task status</li> </ul>"},{"location":"api-reference/taskodex/task-assignment/#endpoints","title":"Endpoints","text":""},{"location":"api-reference/taskodex/task-assignment/#assign-task","title":"Assign Task","text":"<p>Assigns a task to a user.</p> <p>URL: <code>POST /api/v1/organizations/{org_id}/taskodex/tasks/{id}/assign</code></p> <p>Permissions: <code>task:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"user_id\": \"uuid\"\n}\n</code></pre> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"project_id\": \"uuid (optional)\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"todo | in_progress | review | done | cancelled\",\n  \"priority\": \"low | medium | high | critical\",\n  \"due_date\": \"date (optional)\",\n  \"created_by\": \"uuid\",\n  \"assigned_to\": \"uuid\",\n  \"estimated_hours\": \"number (optional)\",\n  \"actual_hours\": \"number (optional)\",\n  \"tags\": [\"string\"],\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"assignee\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>404 Not Found</code> - Task or user not found</li> </ul>"},{"location":"api-reference/taskodex/task-assignment/#unassign-task","title":"Unassign Task","text":"<p>Removes the assignment of a task.</p> <p>URL: <code>POST /api/v1/organizations/{org_id}/taskodex/tasks/{id}/unassign</code></p> <p>Permissions: <code>task:write</code></p> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"project_id\": \"uuid (optional)\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"todo | in_progress | review | done | cancelled\",\n  \"priority\": \"low | medium | high | critical\",\n  \"due_date\": \"date (optional)\",\n  \"created_by\": \"uuid\",\n  \"assigned_to\": null,\n  \"estimated_hours\": \"number (optional)\",\n  \"actual_hours\": \"number (optional)\",\n  \"tags\": [\"string\"],\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\"\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Task is not assigned to anyone</li> <li><code>404 Not Found</code> - Task not found</li> </ul>"},{"location":"api-reference/taskodex/task-assignment/#update-task-status","title":"Update Task Status","text":"<p>Updates the status of a task.</p> <p>URL: <code>PUT /api/v1/organizations/{org_id}/taskodex/tasks/{id}/status</code></p> <p>Permissions: <code>task:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"status\": \"todo | in_progress | review | done | cancelled\"\n}\n</code></pre> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"project_id\": \"uuid (optional)\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"todo | in_progress | review | done | cancelled\",\n  \"priority\": \"low | medium | high | critical\",\n  \"due_date\": \"date (optional)\",\n  \"created_by\": \"uuid\",\n  \"assigned_to\": \"uuid (optional)\",\n  \"estimated_hours\": \"number (optional)\",\n  \"actual_hours\": \"number (optional)\",\n  \"tags\": [\"string\"],\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\"\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body or invalid task status</li> <li><code>404 Not Found</code> - Task not found</li> </ul>"},{"location":"api-reference/taskodex/task-assignment/#get-tasks-by-assignee","title":"Get Tasks by Assignee","text":"<p>Retrieves tasks assigned to a user.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/tasks/assignee/{user_id}</code></p> <p>Permissions: <code>task:read</code></p> <p>Query Parameters:</p> <ul> <li><code>status</code> (optional) - Filter by status (todo, in_progress, review, done, cancelled)</li> <li><code>priority</code> (optional) - Filter by priority (low, medium, high, critical)</li> <li><code>due_before</code> (optional) - Filter by due date before (ISO 8601 format)</li> <li><code>due_after</code> (optional) - Filter by due date after (ISO 8601 format)</li> <li><code>search</code> (optional) - Search in title and description</li> <li><code>sort_by</code> (optional) - Sort by field (title, status, priority, due_date, created_at, updated_at)</li> <li><code>sort_order</code> (optional) - Sort order (asc/desc)</li> <li><code>page</code> (optional) - Page number (default: 1)</li> <li><code>page_size</code> (optional) - Page size (default: 20, max: 100)</li> </ul> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"tasks\": [\n    {\n      \"id\": \"uuid\",\n      \"project_id\": \"uuid (optional)\",\n      \"title\": \"string\",\n      \"description\": \"string\",\n      \"status\": \"todo | in_progress | review | done | cancelled\",\n      \"priority\": \"low | medium | high | critical\",\n      \"due_date\": \"date (optional)\",\n      \"created_by\": \"uuid\",\n      \"assigned_to\": \"uuid\",\n      \"estimated_hours\": \"number (optional)\",\n      \"actual_hours\": \"number (optional)\",\n      \"tags\": [\"string\"],\n      \"created_at\": \"datetime\",\n      \"updated_at\": \"datetime\"\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"number\",\n    \"page\": \"number\",\n    \"page_size\": \"number\",\n    \"total_pages\": \"number\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - User not found</li> </ul>"},{"location":"api-reference/taskodex/task-assignment/#get-overdue-tasks","title":"Get Overdue Tasks","text":"<p>Retrieves overdue tasks.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/tasks/overdue</code></p> <p>Permissions: <code>task:read</code></p> <p>Query Parameters:</p> <ul> <li><code>project_id</code> (optional) - Filter by project ID</li> <li><code>assigned_to</code> (optional) - Filter by assignee ID</li> <li><code>search</code> (optional) - Search in title and description</li> <li><code>sort_by</code> (optional) - Sort by field (title, status, priority, due_date, created_at, updated_at)</li> <li><code>sort_order</code> (optional) - Sort order (asc/desc)</li> <li><code>page</code> (optional) - Page number (default: 1)</li> <li><code>page_size</code> (optional) - Page size (default: 20, max: 100)</li> </ul> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"tasks\": [\n    {\n      \"id\": \"uuid\",\n      \"project_id\": \"uuid (optional)\",\n      \"title\": \"string\",\n      \"description\": \"string\",\n      \"status\": \"todo | in_progress | review\",\n      \"priority\": \"low | medium | high | critical\",\n      \"due_date\": \"date\",\n      \"created_by\": \"uuid\",\n      \"assigned_to\": \"uuid (optional)\",\n      \"estimated_hours\": \"number (optional)\",\n      \"actual_hours\": \"number (optional)\",\n      \"tags\": [\"string\"],\n      \"created_at\": \"datetime\",\n      \"updated_at\": \"datetime\"\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"number\",\n    \"page\": \"number\",\n    \"page_size\": \"number\",\n    \"total_pages\": \"number\"\n  }\n}\n</code></pre>"},{"location":"api-reference/taskodex/task-assignment/#get-tasks-due-soon","title":"Get Tasks Due Soon","text":"<p>Retrieves tasks due within a specified number of days.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/tasks/due-soon/{days}</code></p> <p>Permissions: <code>task:read</code></p> <p>Path Parameters:</p> <ul> <li><code>days</code> - Number of days to look ahead</li> </ul> <p>Query Parameters:</p> <ul> <li><code>project_id</code> (optional) - Filter by project ID</li> <li><code>assigned_to</code> (optional) - Filter by assignee ID</li> <li><code>search</code> (optional) - Search in title and description</li> <li><code>sort_by</code> (optional) - Sort by field (title, status, priority, due_date, created_at, updated_at)</li> <li><code>sort_order</code> (optional) - Sort order (asc/desc)</li> <li><code>page</code> (optional) - Page number (default: 1)</li> <li><code>page_size</code> (optional) - Page size (default: 20, max: 100)</li> </ul> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"tasks\": [\n    {\n      \"id\": \"uuid\",\n      \"project_id\": \"uuid (optional)\",\n      \"title\": \"string\",\n      \"description\": \"string\",\n      \"status\": \"todo | in_progress | review\",\n      \"priority\": \"low | medium | high | critical\",\n      \"due_date\": \"date\",\n      \"created_by\": \"uuid\",\n      \"assigned_to\": \"uuid (optional)\",\n      \"estimated_hours\": \"number (optional)\",\n      \"actual_hours\": \"number (optional)\",\n      \"tags\": [\"string\"],\n      \"created_at\": \"datetime\",\n      \"updated_at\": \"datetime\"\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"number\",\n    \"page\": \"number\",\n    \"page_size\": \"number\",\n    \"total_pages\": \"number\"\n  }\n}\n</code></pre>"},{"location":"api-reference/taskodex/task/","title":"Task API Reference","text":"<p>The Task API allows you to manage tasks in the Taskodex product.</p>"},{"location":"api-reference/taskodex/task/#base-url","title":"Base URL","text":"<pre><code>/api/v1/organizations/{org_id}/taskodex/tasks\n</code></pre>"},{"location":"api-reference/taskodex/task/#authentication","title":"Authentication","text":"<p>All endpoints require authentication using a JWT token. The token should be included in the <code>Authorization</code> header as a Bearer token.</p> <pre><code>Authorization: Bearer &lt;token&gt;\n</code></pre>"},{"location":"api-reference/taskodex/task/#permissions","title":"Permissions","text":"<p>The following permissions are required to access the Task API:</p> <ul> <li><code>task:read</code> - Required to read tasks</li> <li><code>task:write</code> - Required to create, update, and manage tasks</li> <li><code>task:delete</code> - Required to delete tasks</li> </ul>"},{"location":"api-reference/taskodex/task/#endpoints","title":"Endpoints","text":""},{"location":"api-reference/taskodex/task/#create-task","title":"Create Task","text":"<p>Creates a new task.</p> <p>URL: <code>POST /api/v1/organizations/{org_id}/taskodex/tasks</code></p> <p>Permissions: <code>task:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"project_id\": \"uuid (optional)\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"todo | in_progress | review | done | cancelled\",\n  \"priority\": \"low | medium | high | critical\",\n  \"due_date\": \"date (optional)\",\n  \"assigned_to\": \"uuid (optional)\",\n  \"estimated_hours\": \"number (optional)\",\n  \"tags\": [\"string\"] (optional)\n}\n</code></pre> <p>Response: <code>201 Created</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"project_id\": \"uuid (optional)\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"todo | in_progress | review | done | cancelled\",\n  \"priority\": \"low | medium | high | critical\",\n  \"due_date\": \"date (optional)\",\n  \"created_by\": \"uuid\",\n  \"assigned_to\": \"uuid (optional)\",\n  \"estimated_hours\": \"number (optional)\",\n  \"actual_hours\": \"number (optional)\",\n  \"tags\": [\"string\"],\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"project\": {\n    \"id\": \"uuid\",\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"status\": \"string\"\n  },\n  \"creator\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"assignee\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>404 Not Found</code> - Project or user not found</li> </ul>"},{"location":"api-reference/taskodex/task/#get-task-by-id","title":"Get Task by ID","text":"<p>Retrieves a task by ID.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/tasks/{id}</code></p> <p>Permissions: <code>task:read</code></p> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"project_id\": \"uuid (optional)\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"todo | in_progress | review | done | cancelled\",\n  \"priority\": \"low | medium | high | critical\",\n  \"due_date\": \"date (optional)\",\n  \"created_by\": \"uuid\",\n  \"assigned_to\": \"uuid (optional)\",\n  \"estimated_hours\": \"number (optional)\",\n  \"actual_hours\": \"number (optional)\",\n  \"tags\": [\"string\"],\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"project\": {\n    \"id\": \"uuid\",\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"status\": \"string\"\n  },\n  \"creator\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"assignee\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Task not found</li> </ul>"},{"location":"api-reference/taskodex/task/#list-tasks","title":"List Tasks","text":"<p>Retrieves a list of tasks based on filter parameters.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/tasks</code></p> <p>Permissions: <code>task:read</code></p> <p>Query Parameters:</p> <ul> <li><code>project_id</code> (optional) - Filter by project ID</li> <li><code>status</code> (optional) - Filter by status (todo, in_progress, review, done, cancelled)</li> <li><code>priority</code> (optional) - Filter by priority (low, medium, high, critical)</li> <li><code>created_by</code> (optional) - Filter by creator ID</li> <li><code>assigned_to</code> (optional) - Filter by assignee ID</li> <li><code>due_before</code> (optional) - Filter by due date before (ISO 8601 format)</li> <li><code>due_after</code> (optional) - Filter by due date after (ISO 8601 format)</li> <li><code>search</code> (optional) - Search in title and description</li> <li><code>sort_by</code> (optional) - Sort by field (title, status, priority, due_date, created_at, updated_at)</li> <li><code>sort_order</code> (optional) - Sort order (asc/desc)</li> <li><code>page</code> (optional) - Page number (default: 1)</li> <li><code>page_size</code> (optional) - Page size (default: 20, max: 100)</li> </ul> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"tasks\": [\n    {\n      \"id\": \"uuid\",\n      \"project_id\": \"uuid (optional)\",\n      \"title\": \"string\",\n      \"description\": \"string\",\n      \"status\": \"todo | in_progress | review | done | cancelled\",\n      \"priority\": \"low | medium | high | critical\",\n      \"due_date\": \"date (optional)\",\n      \"created_by\": \"uuid\",\n      \"assigned_to\": \"uuid (optional)\",\n      \"estimated_hours\": \"number (optional)\",\n      \"actual_hours\": \"number (optional)\",\n      \"tags\": [\"string\"],\n      \"created_at\": \"datetime\",\n      \"updated_at\": \"datetime\",\n      \"creator\": {\n        \"id\": \"uuid\",\n        \"email\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\"\n      },\n      \"assignee\": {\n        \"id\": \"uuid\",\n        \"email\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"number\",\n    \"page\": \"number\",\n    \"page_size\": \"number\",\n    \"total_pages\": \"number\"\n  }\n}\n</code></pre>"},{"location":"api-reference/taskodex/task/#update-task","title":"Update Task","text":"<p>Updates a task.</p> <p>URL: <code>PUT /api/v1/organizations/{org_id}/taskodex/tasks/{id}</code></p> <p>Permissions: <code>task:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"project_id\": \"uuid (optional)\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"todo | in_progress | review | done | cancelled\",\n  \"priority\": \"low | medium | high | critical\",\n  \"due_date\": \"date (optional)\",\n  \"assigned_to\": \"uuid (optional)\",\n  \"estimated_hours\": \"number (optional)\",\n  \"tags\": [\"string\"] (optional)\n}\n</code></pre> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"project_id\": \"uuid (optional)\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"todo | in_progress | review | done | cancelled\",\n  \"priority\": \"low | medium | high | critical\",\n  \"due_date\": \"date (optional)\",\n  \"created_by\": \"uuid\",\n  \"assigned_to\": \"uuid (optional)\",\n  \"estimated_hours\": \"number (optional)\",\n  \"actual_hours\": \"number (optional)\",\n  \"tags\": [\"string\"],\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"project\": {\n    \"id\": \"uuid\",\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"status\": \"string\"\n  },\n  \"creator\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"assignee\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>404 Not Found</code> - Task, project, or user not found</li> </ul>"},{"location":"api-reference/taskodex/task/#delete-task","title":"Delete Task","text":"<p>Deletes a task.</p> <p>URL: <code>DELETE /api/v1/organizations/{org_id}/taskodex/tasks/{id}</code></p> <p>Permissions: <code>task:delete</code></p> <p>Response: <code>204 No Content</code></p> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Task not found</li> </ul>"},{"location":"api-reference/taskodex/task/#add-tag-to-task","title":"Add Tag to Task","text":"<p>Adds a tag to a task.</p> <p>URL: <code>POST /api/v1/organizations/{org_id}/taskodex/tasks/{id}/tags</code></p> <p>Permissions: <code>task:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"tag\": \"string\"\n}\n</code></pre> <p>Response: <code>204 No Content</code></p> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>404 Not Found</code> - Task not found</li> </ul>"},{"location":"api-reference/taskodex/task/#remove-tag-from-task","title":"Remove Tag from Task","text":"<p>Removes a tag from a task.</p> <p>URL: <code>DELETE /api/v1/organizations/{org_id}/taskodex/tasks/{id}/tags/{tag}</code></p> <p>Permissions: <code>task:write</code></p> <p>Response: <code>204 No Content</code></p> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Task not found</li> </ul>"},{"location":"api-reference/taskodex/task/#data-models","title":"Data Models","text":""},{"location":"api-reference/taskodex/task/#task","title":"Task","text":"<pre><code>{\n  \"id\": \"uuid\",\n  \"project_id\": \"uuid (optional)\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"todo | in_progress | review | done | cancelled\",\n  \"priority\": \"low | medium | high | critical\",\n  \"due_date\": \"date (optional)\",\n  \"created_by\": \"uuid\",\n  \"assigned_to\": \"uuid (optional)\",\n  \"estimated_hours\": \"number (optional)\",\n  \"actual_hours\": \"number (optional)\",\n  \"tags\": [\"string\"],\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"project\": {\n    \"id\": \"uuid\",\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"status\": \"string\"\n  },\n  \"creator\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"assignee\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre>"},{"location":"api-reference/taskodex/task/#taskrequest","title":"TaskRequest","text":"<pre><code>{\n  \"project_id\": \"uuid (optional)\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"status\": \"todo | in_progress | review | done | cancelled\",\n  \"priority\": \"low | medium | high | critical\",\n  \"due_date\": \"date (optional)\",\n  \"assigned_to\": \"uuid (optional)\",\n  \"estimated_hours\": \"number (optional)\",\n  \"tags\": [\"string\"] (optional)\n}\n</code></pre>"},{"location":"api-reference/taskodex/time-entry/","title":"Time Entry API Reference","text":"<p>The Time Entry API allows you to manage time entries for tasks in the Taskodex product.</p>"},{"location":"api-reference/taskodex/time-entry/#base-url","title":"Base URL","text":"<pre><code>/api/v1/organizations/{org_id}/taskodex/time-entries\n</code></pre>"},{"location":"api-reference/taskodex/time-entry/#authentication","title":"Authentication","text":"<p>All endpoints require authentication using a JWT token. The token should be included in the <code>Authorization</code> header as a Bearer token.</p> <pre><code>Authorization: Bearer &lt;token&gt;\n</code></pre>"},{"location":"api-reference/taskodex/time-entry/#permissions","title":"Permissions","text":"<p>The following permissions are required to access the Time Entry API:</p> <ul> <li><code>time_entry:read</code> - Required to read time entries</li> <li><code>time_entry:write</code> - Required to create, update, and manage time entries</li> <li><code>time_entry:delete</code> - Required to delete time entries</li> </ul>"},{"location":"api-reference/taskodex/time-entry/#endpoints","title":"Endpoints","text":""},{"location":"api-reference/taskodex/time-entry/#create-time-entry","title":"Create Time Entry","text":"<p>Creates a new time entry.</p> <p>URL: <code>POST /api/v1/organizations/{org_id}/taskodex/time-entries</code></p> <p>Permissions: <code>time_entry:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"task_id\": \"uuid\",\n  \"start_time\": \"datetime\",\n  \"end_time\": \"datetime (optional)\",\n  \"duration_minutes\": \"number (optional)\",\n  \"description\": \"string (optional)\"\n}\n</code></pre> <p>Response: <code>201 Created</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"start_time\": \"datetime\",\n  \"end_time\": \"datetime (optional)\",\n  \"duration_minutes\": \"number (optional)\",\n  \"description\": \"string\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"task\": {\n    \"id\": \"uuid\",\n    \"title\": \"string\",\n    \"status\": \"todo | in_progress | review | done | cancelled\"\n  },\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body or end time cannot be before start time</li> <li><code>404 Not Found</code> - Task not found</li> <li><code>409 Conflict</code> - You already have a running timer for this task</li> </ul>"},{"location":"api-reference/taskodex/time-entry/#get-time-entry-by-id","title":"Get Time Entry by ID","text":"<p>Retrieves a time entry by ID.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/time-entries/{id}</code></p> <p>Permissions: <code>time_entry:read</code></p> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"start_time\": \"datetime\",\n  \"end_time\": \"datetime (optional)\",\n  \"duration_minutes\": \"number (optional)\",\n  \"description\": \"string\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"task\": {\n    \"id\": \"uuid\",\n    \"title\": \"string\",\n    \"status\": \"todo | in_progress | review | done | cancelled\"\n  },\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Time entry not found</li> </ul>"},{"location":"api-reference/taskodex/time-entry/#list-time-entries","title":"List Time Entries","text":"<p>Retrieves a list of time entries based on filter parameters.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/time-entries</code></p> <p>Permissions: <code>time_entry:read</code></p> <p>Query Parameters:</p> <ul> <li><code>task_id</code> (optional) - Filter by task ID</li> <li><code>user_id</code> (optional) - Filter by user ID</li> <li><code>start_after</code> (optional) - Filter by start time after (ISO 8601 format)</li> <li><code>start_before</code> (optional) - Filter by start time before (ISO 8601 format)</li> <li><code>is_running</code> (optional) - Filter by running status (true/false)</li> <li><code>sort_by</code> (optional) - Sort by field (start_time, end_time, created_at, updated_at)</li> <li><code>sort_order</code> (optional) - Sort order (asc/desc)</li> <li><code>page</code> (optional) - Page number (default: 1)</li> <li><code>page_size</code> (optional) - Page size (default: 20, max: 100)</li> </ul> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"time_entries\": [\n    {\n      \"id\": \"uuid\",\n      \"task_id\": \"uuid\",\n      \"user_id\": \"uuid\",\n      \"start_time\": \"datetime\",\n      \"end_time\": \"datetime (optional)\",\n      \"duration_minutes\": \"number (optional)\",\n      \"description\": \"string\",\n      \"created_at\": \"datetime\",\n      \"updated_at\": \"datetime\",\n      \"task\": {\n        \"id\": \"uuid\",\n        \"title\": \"string\",\n        \"status\": \"todo | in_progress | review | done | cancelled\"\n      },\n      \"user\": {\n        \"id\": \"uuid\",\n        \"email\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"number\",\n    \"page\": \"number\",\n    \"page_size\": \"number\",\n    \"total_pages\": \"number\"\n  }\n}\n</code></pre>"},{"location":"api-reference/taskodex/time-entry/#update-time-entry","title":"Update Time Entry","text":"<p>Updates a time entry.</p> <p>URL: <code>PUT /api/v1/organizations/{org_id}/taskodex/time-entries/{id}</code></p> <p>Permissions: <code>time_entry:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"task_id\": \"uuid\",\n  \"start_time\": \"datetime\",\n  \"end_time\": \"datetime (optional)\",\n  \"duration_minutes\": \"number (optional)\",\n  \"description\": \"string (optional)\"\n}\n</code></pre> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"start_time\": \"datetime\",\n  \"end_time\": \"datetime (optional)\",\n  \"duration_minutes\": \"number (optional)\",\n  \"description\": \"string\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"task\": {\n    \"id\": \"uuid\",\n    \"title\": \"string\",\n    \"status\": \"todo | in_progress | review | done | cancelled\"\n  },\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body or end time cannot be before start time</li> <li><code>404 Not Found</code> - Time entry or task not found</li> </ul>"},{"location":"api-reference/taskodex/time-entry/#delete-time-entry","title":"Delete Time Entry","text":"<p>Deletes a time entry.</p> <p>URL: <code>DELETE /api/v1/organizations/{org_id}/taskodex/time-entries/{id}</code></p> <p>Permissions: <code>time_entry:delete</code></p> <p>Response: <code>204 No Content</code></p> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - Time entry not found</li> </ul>"},{"location":"api-reference/taskodex/time-entry/#start-timer","title":"Start Timer","text":"<p>Starts a timer for a task.</p> <p>URL: <code>POST /api/v1/organizations/{org_id}/taskodex/time-entries/start</code></p> <p>Permissions: <code>time_entry:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"task_id\": \"uuid\",\n  \"description\": \"string (optional)\"\n}\n</code></pre> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"start_time\": \"datetime\",\n  \"end_time\": null,\n  \"duration_minutes\": null,\n  \"description\": \"string\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"task\": {\n    \"id\": \"uuid\",\n    \"title\": \"string\",\n    \"status\": \"todo | in_progress | review | done | cancelled\"\n  },\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>404 Not Found</code> - Task not found</li> <li><code>409 Conflict</code> - You already have a running timer for this task</li> </ul>"},{"location":"api-reference/taskodex/time-entry/#stop-timer","title":"Stop Timer","text":"<p>Stops a running timer for a task.</p> <p>URL: <code>POST /api/v1/organizations/{org_id}/taskodex/time-entries/stop</code></p> <p>Permissions: <code>time_entry:write</code></p> <p>Request Body:</p> <pre><code>{\n  \"task_id\": \"uuid\"\n}\n</code></pre> <p>Response: <code>200 OK</code></p> <pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"start_time\": \"datetime\",\n  \"end_time\": \"datetime\",\n  \"duration_minutes\": \"number\",\n  \"description\": \"string\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"task\": {\n    \"id\": \"uuid\",\n    \"title\": \"string\",\n    \"status\": \"todo | in_progress | review | done | cancelled\"\n  },\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid request body</li> <li><code>404 Not Found</code> - No running timer found for this task</li> </ul>"},{"location":"api-reference/taskodex/time-entry/#get-running-timers","title":"Get Running Timers","text":"<p>Retrieves all running timers for the authenticated user.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/time-entries/running</code></p> <p>Permissions: <code>time_entry:read</code></p> <p>Response: <code>200 OK</code></p> <pre><code>[\n  {\n    \"id\": \"uuid\",\n    \"task_id\": \"uuid\",\n    \"user_id\": \"uuid\",\n    \"start_time\": \"datetime\",\n    \"end_time\": null,\n    \"duration_minutes\": null,\n    \"description\": \"string\",\n    \"created_at\": \"datetime\",\n    \"updated_at\": \"datetime\",\n    \"task\": {\n      \"id\": \"uuid\",\n      \"title\": \"string\",\n      \"status\": \"todo | in_progress | review | done | cancelled\"\n    },\n    \"user\": {\n      \"id\": \"uuid\",\n      \"email\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\"\n    }\n  }\n]\n</code></pre> <p>Error Responses:</p> <ul> <li><code>404 Not Found</code> - User not found</li> </ul>"},{"location":"api-reference/taskodex/time-entry/#aggregate-time-entries","title":"Aggregate Time Entries","text":"<p>Aggregates time entries based on parameters.</p> <p>URL: <code>GET /api/v1/organizations/{org_id}/taskodex/time-entries/aggregate</code></p> <p>Permissions: <code>time_entry:read</code></p> <p>Query Parameters:</p> <ul> <li><code>task_id</code> (optional) - Filter by task ID</li> <li><code>user_id</code> (optional) - Filter by user ID</li> <li><code>project_id</code> (optional) - Filter by project ID</li> <li><code>start_after</code> (optional) - Filter by start time after (ISO 8601 format)</li> <li><code>start_before</code> (optional) - Filter by start time before (ISO 8601 format)</li> <li><code>group_by</code> (optional) - Group by field (day, week, month, year, task, user) (default: day)</li> </ul> <p>Response: <code>200 OK</code></p> <pre><code>[\n  {\n    \"total_duration_minutes\": \"number\",\n    \"task_id\": \"uuid (if group_by=task)\",\n    \"user_id\": \"uuid (if group_by=user)\",\n    \"date\": \"date (if group_by=day)\",\n    \"week\": \"number (if group_by=week)\",\n    \"month\": \"number (if group_by=month)\",\n    \"year\": \"number (if group_by=week, month, or year)\"\n  }\n]\n</code></pre> <p>Error Responses:</p> <ul> <li><code>400 Bad Request</code> - Invalid group_by parameter</li> </ul>"},{"location":"api-reference/taskodex/time-entry/#data-models","title":"Data Models","text":""},{"location":"api-reference/taskodex/time-entry/#timeentry","title":"TimeEntry","text":"<pre><code>{\n  \"id\": \"uuid\",\n  \"task_id\": \"uuid\",\n  \"user_id\": \"uuid\",\n  \"start_time\": \"datetime\",\n  \"end_time\": \"datetime (optional)\",\n  \"duration_minutes\": \"number (optional)\",\n  \"description\": \"string\",\n  \"created_at\": \"datetime\",\n  \"updated_at\": \"datetime\",\n  \"task\": {\n    \"id\": \"uuid\",\n    \"title\": \"string\",\n    \"status\": \"todo | in_progress | review | done | cancelled\"\n  },\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  }\n}\n</code></pre>"},{"location":"api-reference/taskodex/time-entry/#timeentryrequest","title":"TimeEntryRequest","text":"<pre><code>{\n  \"task_id\": \"uuid\",\n  \"start_time\": \"datetime\",\n  \"end_time\": \"datetime (optional)\",\n  \"duration_minutes\": \"number (optional)\",\n  \"description\": \"string (optional)\"\n}\n</code></pre>"},{"location":"api-reference/taskodex/time-entry/#timeentryaggregation","title":"TimeEntryAggregation","text":"<pre><code>{\n  \"total_duration_minutes\": \"number\",\n  \"task_id\": \"uuid (if group_by=task)\",\n  \"user_id\": \"uuid (if group_by=user)\",\n  \"date\": \"date (if group_by=day)\",\n  \"week\": \"number (if group_by=week)\",\n  \"month\": \"number (if group_by=month)\",\n  \"year\": \"number (if group_by=week, month, or year)\"\n}\n</code></pre>"},{"location":"architecture/","title":"Architecture Overview","text":"<p>The Halooid platform is designed with a modern, scalable architecture that enables efficient development and maintenance of multiple products within a single ecosystem. This document provides a high-level overview of the platform's architecture.</p>"},{"location":"architecture/#system-architecture","title":"System Architecture","text":"<p>The Halooid platform follows a microservices architecture pattern, with clear separation between different products while sharing common infrastructure and libraries.</p> <pre><code>graph TD\n    Client[Client Applications] --&gt; API[API Gateway]\n    API --&gt; Auth[Authentication Service]\n    API --&gt; TS[Taskake Service]\n    API --&gt; QS[Qultrix Service]\n    API --&gt; AS[AdminHub Service]\n    API --&gt; CS[CustomerConnect Service]\n    API --&gt; IS[Invantray Service]\n\n    TS --&gt; DB[(PostgreSQL)]\n    QS --&gt; DB\n    AS --&gt; DB\n    CS --&gt; DB\n    IS --&gt; DB\n\n    TS --&gt; Cache[(Redis)]\n    QS --&gt; Cache\n    AS --&gt; Cache\n    CS --&gt; Cache\n    IS --&gt; Cache\n\n    subgraph \"Backend Services\"\n        Auth\n        TS\n        QS\n        AS\n        CS\n        IS\n    end\n\n    subgraph \"Data Layer\"\n        DB\n        Cache\n    end</code></pre>"},{"location":"architecture/#key-components","title":"Key Components","text":""},{"location":"architecture/#api-gateway","title":"API Gateway","text":"<p>The API Gateway serves as the entry point for all client applications, handling request routing, composition, and protocol translation. It provides a unified interface for clients to interact with the various backend services.</p>"},{"location":"architecture/#authentication-service","title":"Authentication Service","text":"<p>The Authentication Service manages user authentication and authorization across all products. It implements JWT-based authentication with role-based access control to ensure secure access to resources.</p>"},{"location":"architecture/#product-services","title":"Product Services","text":"<p>Each product (Taskake, Qultrix, AdminHub, CustomerConnect, and Invantray) has its own dedicated service that implements the business logic specific to that product. These services are implemented in Go and expose both REST and gRPC APIs.</p>"},{"location":"architecture/#data-layer","title":"Data Layer","text":"<p>The data layer consists of PostgreSQL for persistent storage and Redis for caching. PostgreSQL stores all application data with proper schema design for each product, while Redis improves performance by caching frequently accessed data.</p>"},{"location":"architecture/#communication-patterns","title":"Communication Patterns","text":""},{"location":"architecture/#external-communication","title":"External Communication","text":"<p>External clients (web and mobile applications) communicate with the backend services through REST APIs, which are documented using OpenAPI specifications. This provides a standardized, easy-to-use interface for client applications.</p>"},{"location":"architecture/#internal-communication","title":"Internal Communication","text":"<p>For internal communication between services, gRPC is used for its efficiency and strong typing. This enables high-performance, low-latency communication between backend services.</p> <pre><code>sequenceDiagram\n    participant Client\n    participant Gateway as API Gateway\n    participant Auth as Authentication Service\n    participant Service as Product Service\n    participant DB as Database\n\n    Client-&gt;&gt;Gateway: HTTP Request\n    Gateway-&gt;&gt;Auth: Validate Token (gRPC)\n    Auth--&gt;&gt;Gateway: Token Valid\n    Gateway-&gt;&gt;Service: Forward Request (gRPC)\n    Service-&gt;&gt;DB: Query Data\n    DB--&gt;&gt;Service: Return Data\n    Service--&gt;&gt;Gateway: Response\n    Gateway--&gt;&gt;Client: HTTP Response</code></pre>"},{"location":"architecture/#frontend-architecture","title":"Frontend Architecture","text":""},{"location":"architecture/#web-frontend","title":"Web Frontend","text":"<p>The web frontend is built using Svelte with SvelteKit, providing a modern, reactive user interface. Each product has its own SvelteKit application, but they share common UI components, stores, and utilities.</p> <pre><code>graph TD\n    SvelteKit[SvelteKit] --&gt; Router[Router]\n    SvelteKit --&gt; Store[Svelte Stores]\n    SvelteKit --&gt; Components[UI Components]\n\n    Router --&gt; Pages[Pages]\n    Store --&gt; State[Application State]\n    Components --&gt; SharedUI[Shared UI Library]\n\n    Pages --&gt; ProductPages[Product-Specific Pages]\n    State --&gt; ProductState[Product-Specific State]\n    SharedUI --&gt; ProductUI[Product-Specific UI]</code></pre>"},{"location":"architecture/#mobile-frontend","title":"Mobile Frontend","text":"<p>The mobile applications are built using Flutter, providing a native-like experience on both iOS and Android. The mobile apps follow a similar architecture to the web frontend, with shared components and services.</p> <pre><code>graph TD\n    Flutter[Flutter] --&gt; Widgets[Widgets]\n    Flutter --&gt; Providers[Providers/Riverpod]\n    Flutter --&gt; Services[Services]\n\n    Widgets --&gt; SharedWidgets[Shared Widgets]\n    Providers --&gt; AppState[Application State]\n    Services --&gt; APIServices[API Services]\n\n    SharedWidgets --&gt; ProductWidgets[Product-Specific Widgets]\n    AppState --&gt; ProductState[Product-Specific State]\n    APIServices --&gt; ProductAPI[Product-Specific API]</code></pre>"},{"location":"architecture/#database-design","title":"Database Design","text":"<p>The database is designed to support all products while maintaining proper separation of concerns. Each product has its own schema, but common entities like users and organizations are shared across products.</p> <pre><code>erDiagram\n    USERS ||--o{ USER_ROLES : has\n    USERS ||--o{ ORGANIZATIONS : belongs_to\n    ORGANIZATIONS ||--o{ PROJECTS : has\n\n    PROJECTS ||--o{ TASKS : contains\n    TASKS ||--o{ TASK_ASSIGNMENTS : has\n    USERS ||--o{ TASK_ASSIGNMENTS : assigned_to\n\n    ORGANIZATIONS ||--o{ EMPLOYEES : employs\n    USERS ||--o{ EMPLOYEES : is\n\n    ORGANIZATIONS ||--o{ CUSTOMERS : has\n    USERS ||--o{ CUSTOMERS : is\n\n    ORGANIZATIONS ||--o{ INVENTORY_ITEMS : owns\n    INVENTORY_ITEMS ||--o{ INVENTORY_TRANSACTIONS : has</code></pre>"},{"location":"architecture/#security-architecture","title":"Security Architecture","text":"<p>Security is a fundamental aspect of the Halooid platform. The platform implements multiple layers of security:</p> <ol> <li>Authentication: JWT-based authentication for all API requests</li> <li>Authorization: Role-based access control for fine-grained permissions</li> <li>Data Encryption: Encryption of sensitive data at rest and in transit</li> <li>Input Validation: Thorough validation of all user inputs</li> <li>Rate Limiting: Protection against abuse and DoS attacks</li> <li>Audit Logging: Comprehensive logging of security-relevant events</li> </ol>"},{"location":"architecture/#deployment-architecture","title":"Deployment Architecture","text":"<p>The Halooid platform is designed to be deployed in a containerized environment using Docker and Kubernetes, enabling scalability and resilience.</p> <pre><code>graph TD\n    Internet[Internet] --&gt; LB[Load Balancer]\n    LB --&gt; API[API Gateway]\n\n    API --&gt; AuthPod[Auth Service Pods]\n    API --&gt; TaskakePod[Taskake Service Pods]\n    API --&gt; QultrixPod[Qultrix Service Pods]\n    API --&gt; AdminPod[AdminHub Service Pods]\n    API --&gt; CRMPod[CustomerConnect Service Pods]\n    API --&gt; InvPod[Invantray Service Pods]\n\n    AuthPod --&gt; DB[(PostgreSQL Cluster)]\n    TaskakePod --&gt; DB\n    QultrixPod --&gt; DB\n    AdminPod --&gt; DB\n    CRMPod --&gt; DB\n    InvPod --&gt; DB\n\n    AuthPod --&gt; Cache[(Redis Cluster)]\n    TaskakePod --&gt; Cache\n    QultrixPod --&gt; Cache\n    AdminPod --&gt; Cache\n    CRMPod --&gt; Cache\n    InvPod --&gt; Cache\n\n    subgraph \"Kubernetes Cluster\"\n        API\n        AuthPod\n        TaskakePod\n        QultrixPod\n        AdminPod\n        CRMPod\n        InvPod\n    end</code></pre>"},{"location":"architecture/#next-steps","title":"Next Steps","text":"<p>For more detailed information about specific aspects of the architecture, please refer to the following pages:</p> <ul> <li>Backend Architecture</li> <li>Frontend Architecture</li> <li>Mobile Architecture</li> <li>Database Design</li> <li>API Architecture</li> </ul>"},{"location":"architecture/api/","title":"API Architecture","text":"<p>This page will contain detailed information about the API architecture of the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"architecture/backend/","title":"Backend Architecture","text":"<p>This page will contain detailed information about the backend architecture of the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"architecture/database-schema/","title":"Database Schema","text":"<p>This document describes the database schema for the Halooid platform.</p>"},{"location":"architecture/database-schema/#overview","title":"Overview","text":"<p>The Halooid platform uses PostgreSQL as its primary database. The schema is organized into several parts:</p> <ol> <li>Core Schema: Contains shared tables used across all products</li> <li>Product-Specific Schemas: Each product has its own schema with tables specific to that product</li> </ol>"},{"location":"architecture/database-schema/#core-schema","title":"Core Schema","text":"<p>The core schema contains tables that are shared across all products.</p>"},{"location":"architecture/database-schema/#users","title":"Users","text":"<p>The <code>users</code> table stores information about users of the platform.</p> Column Type Description id UUID Primary key email VARCHAR(255) User's email address (unique) password_hash VARCHAR(255) Hashed password first_name VARCHAR(100) User's first name last_name VARCHAR(100) User's last name is_active BOOLEAN Whether the user is active created_at TIMESTAMP When the user was created updated_at TIMESTAMP When the user was last updated"},{"location":"architecture/database-schema/#organizations","title":"Organizations","text":"<p>The <code>organizations</code> table stores information about organizations.</p> Column Type Description id UUID Primary key name VARCHAR(255) Organization name description TEXT Organization description is_active BOOLEAN Whether the organization is active created_at TIMESTAMP When the organization was created updated_at TIMESTAMP When the organization was last updated"},{"location":"architecture/database-schema/#organization-users","title":"Organization Users","text":"<p>The <code>organization_users</code> table maps users to organizations.</p> Column Type Description organization_id UUID Foreign key to organizations user_id UUID Foreign key to users"},{"location":"architecture/database-schema/#roles","title":"Roles","text":"<p>The <code>roles</code> table defines roles that can be assigned to users.</p> Column Type Description id UUID Primary key name VARCHAR(100) Role name description TEXT Role description created_at TIMESTAMP When the role was created updated_at TIMESTAMP When the role was last updated"},{"location":"architecture/database-schema/#permissions","title":"Permissions","text":"<p>The <code>permissions</code> table defines permissions that can be assigned to roles.</p> Column Type Description id UUID Primary key name VARCHAR(100) Permission name description TEXT Permission description created_at TIMESTAMP When the permission was created updated_at TIMESTAMP When the permission was last updated"},{"location":"architecture/database-schema/#role-permissions","title":"Role Permissions","text":"<p>The <code>role_permissions</code> table maps permissions to roles.</p> Column Type Description role_id UUID Foreign key to roles permission_id UUID Foreign key to permissions"},{"location":"architecture/database-schema/#user-roles","title":"User Roles","text":"<p>The <code>user_roles</code> table maps roles to users within an organization context.</p> Column Type Description user_id UUID Foreign key to users role_id UUID Foreign key to roles organization_id UUID Foreign key to organizations"},{"location":"architecture/database-schema/#product-specific-schemas","title":"Product-Specific Schemas","text":""},{"location":"architecture/database-schema/#taskodex-schema","title":"Taskodex Schema","text":"<p>The Taskodex schema contains tables related to task and project management.</p>"},{"location":"architecture/database-schema/#projects","title":"Projects","text":"<p>The <code>taskodex.projects</code> table stores information about projects.</p> Column Type Description id UUID Primary key organization_id UUID Foreign key to organizations name VARCHAR(255) Project name description TEXT Project description status VARCHAR(50) Project status start_date DATE Project start date end_date DATE Project end date created_by UUID Foreign key to users created_at TIMESTAMP When the project was created updated_at TIMESTAMP When the project was last updated"},{"location":"architecture/database-schema/#tasks","title":"Tasks","text":"<p>The <code>taskodex.tasks</code> table stores information about tasks.</p> Column Type Description id UUID Primary key project_id UUID Foreign key to projects title VARCHAR(255) Task title description TEXT Task description status VARCHAR(50) Task status priority VARCHAR(50) Task priority due_date TIMESTAMP Task due date created_by UUID Foreign key to users assigned_to UUID Foreign key to users created_at TIMESTAMP When the task was created updated_at TIMESTAMP When the task was last updated"},{"location":"architecture/database-schema/#task-comments","title":"Task Comments","text":"<p>The <code>taskodex.task_comments</code> table stores comments on tasks.</p> Column Type Description id UUID Primary key task_id UUID Foreign key to tasks user_id UUID Foreign key to users content TEXT Comment content created_at TIMESTAMP When the comment was created updated_at TIMESTAMP When the comment was last updated"},{"location":"architecture/database-schema/#qultrix-schema","title":"Qultrix Schema","text":"<p>The Qultrix schema contains tables related to HR and employee management.</p>"},{"location":"architecture/database-schema/#employees","title":"Employees","text":"<p>The <code>qultrix.employees</code> table stores information about employees.</p> Column Type Description id UUID Primary key organization_id UUID Foreign key to organizations user_id UUID Foreign key to users employee_id VARCHAR(50) Employee ID department VARCHAR(100) Employee department position VARCHAR(100) Employee position hire_date DATE Employee hire date manager_id UUID Foreign key to employees salary DECIMAL(12, 2) Employee salary is_active BOOLEAN Whether the employee is active created_at TIMESTAMP When the employee was created updated_at TIMESTAMP When the employee was last updated"},{"location":"architecture/database-schema/#time-off-requests","title":"Time Off Requests","text":"<p>The <code>qultrix.time_off_requests</code> table stores time off requests.</p> Column Type Description id UUID Primary key employee_id UUID Foreign key to employees start_date DATE Start date of time off end_date DATE End date of time off type VARCHAR(50) Type of time off status VARCHAR(50) Status of the request reason TEXT Reason for the request approved_by UUID Foreign key to employees created_at TIMESTAMP When the request was created updated_at TIMESTAMP When the request was last updated"},{"location":"architecture/database-schema/#performance-reviews","title":"Performance Reviews","text":"<p>The <code>qultrix.performance_reviews</code> table stores performance reviews.</p> Column Type Description id UUID Primary key employee_id UUID Foreign key to employees reviewer_id UUID Foreign key to employees review_date DATE Date of the review rating INTEGER Review rating comments TEXT Review comments created_at TIMESTAMP When the review was created updated_at TIMESTAMP When the review was last updated"},{"location":"architecture/database-schema/#adminhub-schema","title":"AdminHub Schema","text":"<p>The AdminHub schema contains tables related to administration and system management.</p>"},{"location":"architecture/database-schema/#system-logs","title":"System Logs","text":"<p>The <code>adminhub.system_logs</code> table stores system logs.</p> Column Type Description id UUID Primary key organization_id UUID Foreign key to organizations user_id UUID Foreign key to users action VARCHAR(100) Action performed resource_type VARCHAR(100) Type of resource resource_id UUID ID of the resource details JSONB Additional details ip_address VARCHAR(45) IP address created_at TIMESTAMP When the log was created"},{"location":"architecture/database-schema/#system-settings","title":"System Settings","text":"<p>The <code>adminhub.system_settings</code> table stores system settings.</p> Column Type Description id UUID Primary key organization_id UUID Foreign key to organizations key VARCHAR(100) Setting key value TEXT Setting value created_at TIMESTAMP When the setting was created updated_at TIMESTAMP When the setting was last updated"},{"location":"architecture/database-schema/#customerconnect-schema","title":"CustomerConnect Schema","text":"<p>The CustomerConnect schema contains tables related to CRM and customer engagement.</p>"},{"location":"architecture/database-schema/#contacts","title":"Contacts","text":"<p>The <code>customerconnect.contacts</code> table stores contact information.</p> Column Type Description id UUID Primary key organization_id UUID Foreign key to organizations first_name VARCHAR(100) Contact's first name last_name VARCHAR(100) Contact's last name email VARCHAR(255) Contact's email phone VARCHAR(50) Contact's phone company VARCHAR(100) Contact's company title VARCHAR(100) Contact's title address TEXT Contact's address notes TEXT Notes about the contact created_by UUID Foreign key to users created_at TIMESTAMP When the contact was created updated_at TIMESTAMP When the contact was last updated"},{"location":"architecture/database-schema/#leads","title":"Leads","text":"<p>The <code>customerconnect.leads</code> table stores lead information.</p> Column Type Description id UUID Primary key organization_id UUID Foreign key to organizations contact_id UUID Foreign key to contacts status VARCHAR(50) Lead status source VARCHAR(100) Lead source estimated_value DECIMAL(12, 2) Estimated value assigned_to UUID Foreign key to users notes TEXT Notes about the lead created_at TIMESTAMP When the lead was created updated_at TIMESTAMP When the lead was last updated"},{"location":"architecture/database-schema/#opportunities","title":"Opportunities","text":"<p>The <code>customerconnect.opportunities</code> table stores opportunity information.</p> Column Type Description id UUID Primary key organization_id UUID Foreign key to organizations contact_id UUID Foreign key to contacts name VARCHAR(255) Opportunity name stage VARCHAR(50) Opportunity stage amount DECIMAL(12, 2) Opportunity amount close_date DATE Expected close date probability INTEGER Probability of closing assigned_to UUID Foreign key to users notes TEXT Notes about the opportunity created_at TIMESTAMP When the opportunity was created updated_at TIMESTAMP When the opportunity was last updated"},{"location":"architecture/database-schema/#invantray-schema","title":"Invantray Schema","text":"<p>The Invantray schema contains tables related to inventory and asset management.</p>"},{"location":"architecture/database-schema/#inventory-items","title":"Inventory Items","text":"<p>The <code>invantray.inventory_items</code> table stores inventory item information.</p> Column Type Description id UUID Primary key organization_id UUID Foreign key to organizations name VARCHAR(255) Item name description TEXT Item description sku VARCHAR(100) Stock keeping unit category VARCHAR(100) Item category quantity INTEGER Item quantity unit_price DECIMAL(12, 2) Unit price reorder_level INTEGER Reorder level created_at TIMESTAMP When the item was created updated_at TIMESTAMP When the item was last updated"},{"location":"architecture/database-schema/#warehouses","title":"Warehouses","text":"<p>The <code>invantray.warehouses</code> table stores warehouse information.</p> Column Type Description id UUID Primary key organization_id UUID Foreign key to organizations name VARCHAR(255) Warehouse name address TEXT Warehouse address manager_id UUID Foreign key to users created_at TIMESTAMP When the warehouse was created updated_at TIMESTAMP When the warehouse was last updated"},{"location":"architecture/database-schema/#inventory-transactions","title":"Inventory Transactions","text":"<p>The <code>invantray.inventory_transactions</code> table stores inventory transactions.</p> Column Type Description id UUID Primary key organization_id UUID Foreign key to organizations item_id UUID Foreign key to inventory items warehouse_id UUID Foreign key to warehouses transaction_type VARCHAR(50) Type of transaction quantity INTEGER Transaction quantity reference_id UUID Reference ID notes TEXT Transaction notes created_by UUID Foreign key to users created_at TIMESTAMP When the transaction was created"},{"location":"architecture/database/","title":"Database Design","text":"<p>This page will contain detailed information about the database design of the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"architecture/frontend/","title":"Frontend Architecture","text":"<p>This page will contain detailed information about the frontend architecture of the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"architecture/mobile/","title":"Mobile Architecture","text":"<p>This page will contain detailed information about the mobile architecture of the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"architecture/overview/","title":"Halooid Platform Architecture Overview","text":""},{"location":"architecture/overview/#introduction","title":"Introduction","text":"<p>The Halooid platform is a multi-product platform consisting of several integrated applications:</p> <ul> <li>Taskodex: Task and project management</li> <li>Qultrix: HR and employee management</li> <li>AdminHub: Administration and system management</li> <li>CustomerConnect: CRM and customer engagement</li> <li>Invantray: Inventory and asset management</li> </ul> <p>This document provides an overview of the platform's architecture, components, and design decisions.</p>"},{"location":"architecture/overview/#architecture-principles","title":"Architecture Principles","text":"<p>The Halooid platform follows these key architectural principles:</p> <ol> <li>Microservices Architecture: Each product and major functionality is implemented as a separate microservice.</li> <li>API-First Design: All services expose well-defined APIs that other services can consume.</li> <li>Single Responsibility: Each service has a clear, focused responsibility.</li> <li>Loose Coupling: Services are designed to be independent and communicate through well-defined interfaces.</li> <li>High Cohesion: Related functionality is grouped together within services.</li> <li>Scalability: Services can be scaled independently based on demand.</li> <li>Resilience: The system is designed to handle failures gracefully.</li> <li>Security by Design: Security is built into the architecture from the ground up.</li> </ol>"},{"location":"architecture/overview/#technology-stack","title":"Technology Stack","text":""},{"location":"architecture/overview/#backend","title":"Backend","text":"<ul> <li>Programming Language: Go (Golang)</li> <li>API Style: REST and gRPC</li> <li>Database: PostgreSQL (primary data store)</li> <li>Caching: Redis</li> <li>Authentication: JWT-based authentication service</li> <li>Authorization: Role-based access control (RBAC)</li> <li>API Gateway: Custom implementation using Go</li> </ul>"},{"location":"architecture/overview/#frontend","title":"Frontend","text":"<ul> <li>Web: Svelte with TypeScript</li> <li>Mobile: Flutter</li> <li>Component Libraries: </li> <li>Custom UI component library for web</li> <li>Custom widget library for mobile</li> </ul>"},{"location":"architecture/overview/#devops","title":"DevOps","text":"<ul> <li>Containerization: Docker</li> <li>Orchestration: Kubernetes</li> <li>CI/CD: GitHub Actions</li> <li>Monitoring: Prometheus and Grafana</li> <li>Logging: ELK Stack (Elasticsearch, Logstash, Kibana)</li> </ul>"},{"location":"architecture/overview/#system-components","title":"System Components","text":""},{"location":"architecture/overview/#core-services","title":"Core Services","text":"<ol> <li>Authentication Service</li> <li>Handles user registration, login, and token management</li> <li>Provides JWT tokens for authenticated requests</li> <li> <p>Manages password reset and email verification</p> </li> <li> <p>RBAC Service</p> </li> <li>Manages roles and permissions</li> <li>Provides authorization checks for protected resources</li> <li> <p>Handles role assignments to users</p> </li> <li> <p>API Gateway</p> </li> <li>Routes requests to appropriate services</li> <li>Handles authentication and rate limiting</li> <li>Provides a unified API interface for clients</li> </ol>"},{"location":"architecture/overview/#product-services","title":"Product Services","text":"<p>Each product in the platform has its own set of microservices:</p> <ol> <li>Taskodex Services</li> <li>Task Management Service</li> <li>Project Management Service</li> <li> <p>Time Tracking Service</p> </li> <li> <p>Qultrix Services</p> </li> <li>Employee Record Management Service</li> <li>Time-Off Management Service</li> <li>Performance Management Service</li> <li> <p>Recruitment Service</p> </li> <li> <p>AdminHub Services</p> </li> <li>System Monitoring Service</li> <li>User Administration Service</li> <li>Organization Management Service</li> <li> <p>Security Management Service</p> </li> <li> <p>CustomerConnect Services</p> </li> <li>Contact Management Service</li> <li>Lead Management Service</li> <li>Opportunity Management Service</li> <li> <p>Customer Service Case Management Service</p> </li> <li> <p>Invantray Services</p> </li> <li>Inventory Management Service</li> <li>Warehouse Management Service</li> <li>Asset Management Service</li> <li>Procurement Management Service</li> </ol>"},{"location":"architecture/overview/#data-flow","title":"Data Flow","text":"<ol> <li>Client Request Flow</li> <li>Client sends a request to the API Gateway</li> <li>API Gateway authenticates the request using the Authentication Service</li> <li>API Gateway routes the request to the appropriate service</li> <li>Service processes the request and returns a response</li> <li> <p>API Gateway returns the response to the client</p> </li> <li> <p>Inter-Service Communication</p> </li> <li>Services communicate with each other through REST or gRPC APIs</li> <li>Authentication between services is handled using service accounts</li> <li>Service discovery is managed through Kubernetes</li> </ol>"},{"location":"architecture/overview/#security-architecture","title":"Security Architecture","text":"<ol> <li>Authentication</li> <li>JWT-based authentication</li> <li>Token refresh mechanism</li> <li>Password hashing using bcrypt</li> <li> <p>Rate limiting for authentication endpoints</p> </li> <li> <p>Authorization</p> </li> <li>Role-based access control (RBAC)</li> <li>Permission checks at the service level</li> <li> <p>API Gateway level authorization</p> </li> <li> <p>Data Protection</p> </li> <li>Encryption of sensitive data at rest</li> <li>TLS for all communications</li> <li>Input validation and sanitization</li> </ol>"},{"location":"architecture/overview/#deployment-architecture","title":"Deployment Architecture","text":"<ol> <li>Development Environment</li> <li>Local Docker Compose setup</li> <li> <p>Mock services for external dependencies</p> </li> <li> <p>Testing Environment</p> </li> <li>Kubernetes cluster with test data</li> <li> <p>Automated testing through CI/CD pipeline</p> </li> <li> <p>Production Environment</p> </li> <li>Kubernetes cluster with high availability</li> <li>Auto-scaling based on demand</li> <li>Regular backups and disaster recovery</li> </ol>"},{"location":"architecture/overview/#monitoring-and-observability","title":"Monitoring and Observability","text":"<ol> <li>Metrics Collection</li> <li>Service-level metrics</li> <li>Infrastructure metrics</li> <li> <p>Business metrics</p> </li> <li> <p>Logging</p> </li> <li>Centralized logging with ELK Stack</li> <li> <p>Structured logs for easier analysis</p> </li> <li> <p>Alerting</p> </li> <li>Threshold-based alerts</li> <li>Anomaly detection</li> <li>On-call rotation</li> </ol>"},{"location":"architecture/overview/#future-considerations","title":"Future Considerations","text":"<ol> <li>Event-Driven Architecture</li> <li>Implement event sourcing for certain services</li> <li> <p>Use message queues for asynchronous processing</p> </li> <li> <p>GraphQL API</p> </li> <li> <p>Consider GraphQL for more flexible client-server interactions</p> </li> <li> <p>Machine Learning Integration</p> </li> <li>Recommendation systems</li> <li>Predictive analytics</li> <li>Anomaly detection</li> </ol>"},{"location":"architecture/rbac/","title":"Role-Based Access Control (RBAC)","text":"<p>The Halooid platform implements a comprehensive Role-Based Access Control (RBAC) system to manage user permissions across all products. This document describes the architecture and usage of the RBAC system.</p>"},{"location":"architecture/rbac/#overview","title":"Overview","text":"<p>The RBAC system is based on three main entities:</p> <ol> <li>Users: Individuals who access the system</li> <li>Roles: Named collections of permissions</li> <li>Permissions: Fine-grained access controls for specific actions</li> </ol> <p>Users are assigned roles, and roles are assigned permissions. This creates a flexible system where permissions can be managed at scale by grouping them into roles.</p>"},{"location":"architecture/rbac/#database-schema","title":"Database Schema","text":"<p>The RBAC system uses the following database tables:</p> <ul> <li><code>roles</code>: Defines roles in the system</li> <li><code>permissions</code>: Defines permissions in the system</li> <li><code>role_permissions</code>: Maps permissions to roles</li> <li><code>user_roles</code>: Maps roles to users within an organization context</li> </ul>"},{"location":"architecture/rbac/#core-components","title":"Core Components","text":""},{"location":"architecture/rbac/#rbac-service","title":"RBAC Service","text":"<p>The RBAC service (<code>backend/internal/rbac/service.go</code>) provides the core functionality:</p> <ul> <li>Creating, retrieving, updating, and deleting roles</li> <li>Creating, retrieving, updating, and deleting permissions</li> <li>Assigning permissions to roles</li> <li>Assigning roles to users</li> <li>Checking if a user has a specific permission</li> </ul>"},{"location":"architecture/rbac/#rbac-middleware","title":"RBAC Middleware","text":"<p>The RBAC middleware (<code>backend/pkg/middleware/rbac.go</code>) provides HTTP handlers for permission checking:</p> <ul> <li><code>RequirePermission</code>: Requires a specific permission</li> <li><code>RequireAnyPermission</code>: Requires any of a set of permissions</li> <li><code>RequireAllPermissions</code>: Requires all of a set of permissions</li> </ul>"},{"location":"architecture/rbac/#jwt-integration","title":"JWT Integration","text":"<p>The RBAC system is integrated with the JWT authentication system:</p> <ol> <li>When a user logs in, their roles and permissions are included in the JWT token</li> <li>The RBAC middleware first checks the token for permissions before making database calls</li> <li>If permissions are updated after a token is issued, the system falls back to database checks</li> </ol>"},{"location":"architecture/rbac/#permission-naming-convention","title":"Permission Naming Convention","text":"<p>Permissions follow a <code>resource:action</code> naming convention:</p> <ul> <li><code>read:users</code> - Permission to read user data</li> <li><code>write:users</code> - Permission to create or update user data</li> <li><code>delete:users</code> - Permission to delete user data</li> </ul> <p>Product-specific permissions include a product prefix:</p> <ul> <li><code>taskodex:access</code> - Permission to access the Taskodex product</li> <li><code>qultrix:access</code> - Permission to access the Qultrix product</li> </ul>"},{"location":"architecture/rbac/#standard-roles","title":"Standard Roles","text":"<p>The system includes several standard roles:</p> <ul> <li><code>admin</code>: Has all permissions</li> <li><code>user</code>: Basic user with limited permissions</li> <li>Product-specific roles (e.g., <code>taskodex_user</code>, <code>qultrix_manager</code>)</li> </ul>"},{"location":"architecture/rbac/#usage-examples","title":"Usage Examples","text":""},{"location":"architecture/rbac/#protecting-an-api-endpoint","title":"Protecting an API Endpoint","text":"<pre><code>// Require a specific permission\nrouter.GET(\"/users\", userHandler.GetUsers, rbacMiddleware.RequirePermission(\"read:users\"))\n\n// Require any of a set of permissions\nrouter.PUT(\"/users/:id\", userHandler.UpdateUser, rbacMiddleware.RequireAnyPermission(\"write:users\", \"admin:access\"))\n\n// Require all of a set of permissions\nrouter.DELETE(\"/users/:id\", userHandler.DeleteUser, rbacMiddleware.RequireAllPermissions(\"delete:users\", \"admin:access\"))\n</code></pre>"},{"location":"architecture/rbac/#checking-permissions-in-business-logic","title":"Checking Permissions in Business Logic","text":"<pre><code>// Check if a user has a permission\nhasPermission, err := rbacService.HasPermission(ctx, userID, orgID, \"read:users\")\nif err != nil {\n    // Handle error\n}\n\nif !hasPermission {\n    // Handle permission denied\n}\n</code></pre>"},{"location":"architecture/rbac/#best-practices","title":"Best Practices","text":"<ol> <li>Least Privilege: Assign the minimum permissions necessary</li> <li>Role Hierarchy: Create a hierarchy of roles for easier management</li> <li>Regular Audits: Regularly review role assignments</li> <li>Permission Granularity: Create fine-grained permissions for better control</li> <li>Context-Aware Permissions: Consider the organization context when checking permissions</li> </ol>"},{"location":"architecture/rbac/#future-enhancements","title":"Future Enhancements","text":"<ol> <li>Resource-Level Permissions: Add support for permissions on specific resources</li> <li>Permission Inheritance: Implement a permission inheritance system</li> <li>Dynamic Permissions: Support for dynamically calculated permissions</li> <li>Delegation: Allow users to delegate permissions to others</li> <li>Audit Logging: Log all permission checks for audit purposes</li> </ol>"},{"location":"components/mobile-widgets/","title":"Mobile Widget Library","text":""},{"location":"components/mobile-widgets/#overview","title":"Overview","text":"<p>The Halooid platform includes a shared widget library for mobile applications. This library provides a consistent look and feel across all mobile interfaces in the platform.</p>"},{"location":"components/mobile-widgets/#technology-stack","title":"Technology Stack","text":"<ul> <li>Flutter: UI framework</li> <li>Dart: Programming language</li> <li>Provider: State management</li> <li>Material Design: Design system</li> </ul>"},{"location":"components/mobile-widgets/#installation","title":"Installation","text":"<p>Add the package to your <code>pubspec.yaml</code>:</p> <pre><code>dependencies:\n  halooid_widgets:\n    path: ../packages/widgets\n</code></pre> <p>Then run:</p> <pre><code>flutter pub get\n</code></pre>"},{"location":"components/mobile-widgets/#widgets","title":"Widgets","text":""},{"location":"components/mobile-widgets/#appbutton","title":"AppButton","text":"<p>A customizable button widget with various styles and states.</p> <pre><code>import 'package:halooid_widgets/halooid_widgets.dart';\n\n// Primary button\nAppButton(\n  onPressed: () =&gt; print('Button pressed'),\n  child: Text('Click Me'),\n);\n\n// Secondary button\nAppButton(\n  onPressed: () =&gt; print('Button pressed'),\n  variant: AppButtonVariant.secondary,\n  child: Text('Secondary Button'),\n);\n\n// Outlined button\nAppButton(\n  onPressed: () =&gt; print('Button pressed'),\n  outlined: true,\n  child: Text('Outlined Button'),\n);\n\n// Disabled button\nAppButton(\n  onPressed: null,\n  child: Text('Disabled Button'),\n);\n\n// Loading button\nAppButton(\n  onPressed: () =&gt; print('Button pressed'),\n  loading: true,\n  child: Text('Loading...'),\n);\n\n// Button with icon\nAppButton(\n  onPressed: () =&gt; print('Button pressed'),\n  icon: Icon(Icons.add),\n  child: Text('Add Item'),\n);\n</code></pre>"},{"location":"components/mobile-widgets/#properties","title":"Properties","text":"<ul> <li><code>onPressed</code>: Button press callback</li> <li><code>child</code>: Button content</li> <li><code>variant</code>: Button style variant (<code>primary</code>, <code>secondary</code>, <code>success</code>, <code>danger</code>, <code>warning</code>, <code>info</code>)</li> <li><code>size</code>: Button size (<code>small</code>, <code>medium</code>, <code>large</code>)</li> <li><code>outlined</code>: Whether the button is outlined</li> <li><code>rounded</code>: Whether the button is rounded</li> <li><code>disabled</code>: Whether the button is disabled</li> <li><code>fullWidth</code>: Whether the button is full width</li> <li><code>loading</code>: Whether the button is in a loading state</li> <li><code>icon</code>: Optional icon to display</li> <li><code>iconPosition</code>: Position of the icon (<code>left</code>, <code>right</code>)</li> </ul>"},{"location":"components/mobile-widgets/#apptextfield","title":"AppTextField","text":"<p>A text input widget with various styles and states.</p> <pre><code>import 'package:halooid_widgets/halooid_widgets.dart';\n\n// Basic text field\nAppTextField(\n  label: 'Email',\n  hint: 'Enter your email',\n);\n\n// Text field with error\nAppTextField(\n  label: 'Email',\n  hint: 'Enter your email',\n  errorText: 'Please enter a valid email address',\n);\n\n// Text field with helper text\nAppTextField(\n  label: 'Email',\n  hint: 'Enter your email',\n  helperText: 'We\\'ll never share your email with anyone else',\n);\n\n// Text field with icon\nAppTextField(\n  label: 'Email',\n  hint: 'Enter your email',\n  prefixIcon: Icon(Icons.email),\n);\n</code></pre>"},{"location":"components/mobile-widgets/#properties_1","title":"Properties","text":"<ul> <li><code>controller</code>: Text editing controller</li> <li><code>focusNode</code>: Focus node</li> <li><code>decoration</code>: Input decoration</li> <li><code>label</code>: Field label</li> <li><code>hint</code>: Field hint</li> <li><code>helperText</code>: Helper text</li> <li><code>errorText</code>: Error text</li> <li><code>prefixIcon</code>: Icon to display at the start of the input</li> <li><code>suffixIcon</code>: Icon to display at the end of the input</li> <li><code>obscureText</code>: Whether to obscure text (for passwords)</li> <li><code>keyboardType</code>: Keyboard type</li> <li><code>textInputAction</code>: Text input action</li> <li><code>onChanged</code>: Change handler function</li> <li><code>onSubmitted</code>: Submit handler function</li> <li><code>enabled</code>: Whether the text field is enabled</li> <li><code>borderRadius</code>: Border radius</li> <li><code>filled</code>: Whether the field is filled</li> <li><code>fillColor</code>: Fill color</li> <li><code>borderColor</code>: Border color</li> <li><code>focusedBorderColor</code>: Focused border color</li> <li><code>errorBorderColor</code>: Error border color</li> </ul>"},{"location":"components/mobile-widgets/#appcard","title":"AppCard","text":"<p>A container widget for displaying content in a contained format.</p> <pre><code>import 'package:halooid_widgets/halooid_widgets.dart';\n\nAppCard(\n  elevation: 2,\n  borderRadius: 12,\n  onTap: () =&gt; print('Card tapped'),\n  child: Column(\n    children: [\n      AppCardHeader(\n        title: Text('Card Title'),\n        subtitle: Text('Card Subtitle'),\n        leading: Icon(Icons.info),\n        trailing: Icon(Icons.more_vert),\n      ),\n      AppCardContent(\n        child: Text('This is the card content.'),\n      ),\n      AppCardFooter(\n        child: Row(\n          children: [\n            AppButton(\n              onPressed: () {},\n              variant: AppButtonVariant.primary,\n              size: AppButtonSize.small,\n              child: Text('Action'),\n            ),\n            SizedBox(width: 8),\n            AppButton(\n              onPressed: () {},\n              variant: AppButtonVariant.secondary,\n              size: AppButtonSize.small,\n              outlined: true,\n              child: Text('Cancel'),\n            ),\n          ],\n        ),\n      ),\n    ],\n  ),\n);\n</code></pre>"},{"location":"components/mobile-widgets/#properties_2","title":"Properties","text":"<ul> <li><code>child</code>: Card content</li> <li><code>elevation</code>: Card elevation</li> <li><code>color</code>: Card color</li> <li><code>shadowColor</code>: Shadow color</li> <li><code>borderRadius</code>: Border radius</li> <li><code>borderColor</code>: Border color</li> <li><code>margin</code>: Card margin</li> <li><code>padding</code>: Card padding</li> <li><code>clipBehavior</code>: Clip behavior</li> <li><code>onTap</code>: Callback when card is tapped</li> <li><code>onLongPress</code>: Callback when card is long pressed</li> <li><code>hoverable</code>: Whether the card is hoverable</li> </ul>"},{"location":"components/mobile-widgets/#theme","title":"Theme","text":"<p>The widget library includes a theme system that provides consistent colors, typography, and styling across all widgets.</p> <pre><code>import 'package:flutter/material.dart';\nimport 'package:halooid_widgets/halooid_widgets.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Halooid App',\n      theme: AppTheme.lightTheme(),\n      darkTheme: AppTheme.darkTheme(),\n      themeMode: ThemeMode.system,\n      home: MyHomePage(),\n    );\n  }\n}\n</code></pre>"},{"location":"components/mobile-widgets/#theme-properties","title":"Theme Properties","text":"<ul> <li><code>colorScheme</code>: Color scheme</li> <li><code>textTheme</code>: Typography settings</li> <li><code>appBarTheme</code>: App bar styling</li> <li><code>cardTheme</code>: Card styling</li> <li><code>elevatedButtonTheme</code>: Elevated button styling</li> <li><code>outlinedButtonTheme</code>: Outlined button styling</li> <li><code>textButtonTheme</code>: Text button styling</li> <li><code>inputDecorationTheme</code>: Input decoration styling</li> </ul>"},{"location":"components/mobile-widgets/#utilities","title":"Utilities","text":""},{"location":"components/mobile-widgets/#screenutils","title":"ScreenUtils","text":"<p>Utility functions for responsive design.</p> <pre><code>import 'package:halooid_widgets/halooid_widgets.dart';\n\n// Check if the device is a mobile\nif (ScreenUtils.isMobile(context)) {\n  // Show mobile layout\n}\n\n// Check if the device is a tablet\nif (ScreenUtils.isTablet(context)) {\n  // Show tablet layout\n}\n\n// Get responsive value based on screen size\ndouble fontSize = ScreenUtils.responsiveValue(\n  context,\n  mobile: 14,\n  tablet: 16,\n  desktop: 18,\n);\n\n// Get screen width\ndouble width = ScreenUtils.screenWidth(context);\n\n// Get screen height\ndouble height = ScreenUtils.screenHeight(context);\n\n// Check orientation\nif (ScreenUtils.isPortrait(context)) {\n  // Portrait layout\n} else {\n  // Landscape layout\n}\n</code></pre>"},{"location":"components/mobile-widgets/#datetimeutils","title":"DateTimeUtils","text":"<p>Utility functions for date and time operations.</p> <pre><code>import 'package:halooid_widgets/halooid_widgets.dart';\n\n// Format a date\nString formattedDate = DateTimeUtils.formatDate(\n  DateTime.now(),\n  format: 'MMM d, yyyy',\n);\n\n// Format a time\nString formattedTime = DateTimeUtils.formatTime(\n  DateTime.now(),\n  format: 'h:mm a',\n);\n\n// Format a date and time\nString formattedDateTime = DateTimeUtils.formatDateTime(\n  DateTime.now(),\n  format: 'MMM d, yyyy h:mm a',\n);\n\n// Get relative time\nString relativeTime = DateTimeUtils.getRelativeTime(\n  DateTime.now().subtract(Duration(hours: 2)),\n);\n\n// Check if a date is today\nbool isToday = DateTimeUtils.isToday(DateTime.now());\n\n// Check if a date is yesterday\nbool isYesterday = DateTimeUtils.isYesterday(\n  DateTime.now().subtract(Duration(days: 1)),\n);\n</code></pre>"},{"location":"components/mobile-widgets/#development","title":"Development","text":""},{"location":"components/mobile-widgets/#adding-a-new-widget","title":"Adding a New Widget","text":"<ol> <li>Create a new file in <code>lib/src/widgets</code> with the widget name</li> <li>Implement the widget</li> <li>Add tests in the <code>test</code> directory</li> <li>Export the widget in <code>lib/src/widgets/index.dart</code></li> <li>Update the main library file if necessary</li> </ol>"},{"location":"components/mobile-widgets/#running-tests","title":"Running Tests","text":"<pre><code># Run tests\nflutter test\n\n# Run tests with coverage\nflutter test --coverage\n</code></pre>"},{"location":"components/mobile-widgets/#building-the-library","title":"Building the Library","text":"<pre><code># Build the library\nflutter pub run build_runner build\n</code></pre>"},{"location":"components/mobile-widgets/#best-practices","title":"Best Practices","text":"<ol> <li>Consistency: Follow the established patterns and styles</li> <li>Accessibility: Ensure widgets are accessible</li> <li>Performance: Keep widgets lightweight and efficient</li> <li>Documentation: Document all properties and usage examples</li> <li>Testing: Write tests for all widgets</li> </ol>"},{"location":"components/ui-components/","title":"Web UI Component Library","text":""},{"location":"components/ui-components/#overview","title":"Overview","text":"<p>The Halooid platform includes a shared UI component library for web applications. This library provides a consistent look and feel across all web interfaces in the platform.</p>"},{"location":"components/ui-components/#technology-stack","title":"Technology Stack","text":"<ul> <li>React: UI library</li> <li>TypeScript: Type-safe JavaScript</li> <li>Styled Components: CSS-in-JS styling</li> <li>Storybook: Component documentation and testing</li> <li>Rollup: Module bundling</li> </ul>"},{"location":"components/ui-components/#installation","title":"Installation","text":"<pre><code># From the project root\ncd web/packages/ui-components\n\n# Install dependencies\nnpm install\n\n# Build the library\nnpm run build\n\n# Run Storybook\nnpm run storybook\n</code></pre>"},{"location":"components/ui-components/#components","title":"Components","text":""},{"location":"components/ui-components/#button","title":"Button","text":"<p>A versatile button component with various styles and states.</p> <pre><code>import { Button } from '@halooid/ui-components';\n\n// Primary button\n&lt;Button variant=\"primary\" onClick={() =&gt; console.log('Clicked!')}&gt;\n  Click Me\n&lt;/Button&gt;\n\n// Secondary button\n&lt;Button variant=\"secondary\" outlined&gt;\n  Secondary Button\n&lt;/Button&gt;\n\n// Disabled button\n&lt;Button variant=\"primary\" disabled&gt;\n  Disabled Button\n&lt;/Button&gt;\n\n// Loading button\n&lt;Button variant=\"primary\" loading&gt;\n  Loading...\n&lt;/Button&gt;\n\n// Button with icon\n&lt;Button \n  variant=\"primary\" \n  startIcon={&lt;Icon name=\"plus\" /&gt;}\n&gt;\n  Add Item\n&lt;/Button&gt;\n</code></pre>"},{"location":"components/ui-components/#props","title":"Props","text":"<ul> <li><code>variant</code>: Button style variant (<code>primary</code>, <code>secondary</code>, <code>success</code>, <code>danger</code>, <code>warning</code>, <code>info</code>)</li> <li><code>size</code>: Button size (<code>sm</code>, <code>md</code>, <code>lg</code>)</li> <li><code>outlined</code>: Whether the button is outlined</li> <li><code>rounded</code>: Whether the button is rounded</li> <li><code>disabled</code>: Whether the button is disabled</li> <li><code>fullWidth</code>: Whether the button is full width</li> <li><code>loading</code>: Whether the button is in a loading state</li> <li><code>startIcon</code>: Icon to display before the button text</li> <li><code>endIcon</code>: Icon to display after the button text</li> <li><code>onClick</code>: Click handler function</li> </ul>"},{"location":"components/ui-components/#input","title":"Input","text":"<p>A customizable text input component with various styles and states.</p> <pre><code>import { Input } from '@halooid/ui-components';\n\n// Basic input\n&lt;Input \n  label=\"Email\" \n  placeholder=\"Enter your email\"\n/&gt;\n\n// Input with error\n&lt;Input \n  label=\"Email\" \n  placeholder=\"Enter your email\"\n  error=\"Please enter a valid email address\"\n/&gt;\n\n// Input with helper text\n&lt;Input \n  label=\"Email\" \n  placeholder=\"Enter your email\"\n  helperText=\"We'll never share your email with anyone else\"\n/&gt;\n\n// Input with icon\n&lt;Input \n  label=\"Email\" \n  placeholder=\"Enter your email\"\n  startIcon={&lt;Icon name=\"mail\" /&gt;}\n/&gt;\n</code></pre>"},{"location":"components/ui-components/#props_1","title":"Props","text":"<ul> <li><code>label</code>: Input label</li> <li><code>placeholder</code>: Input placeholder</li> <li><code>value</code>: Input value</li> <li><code>onChange</code>: Change handler function</li> <li><code>error</code>: Error message</li> <li><code>helperText</code>: Helper text</li> <li><code>disabled</code>: Whether the input is disabled</li> <li><code>fullWidth</code>: Whether the input is full width</li> <li><code>startIcon</code>: Icon to display at the start of the input</li> <li><code>endIcon</code>: Icon to display at the end of the input</li> <li><code>type</code>: Input type (<code>text</code>, <code>password</code>, <code>email</code>, etc.)</li> <li><code>variant</code>: Input variant (<code>outlined</code>, <code>filled</code>, <code>standard</code>)</li> <li><code>size</code>: Input size (<code>sm</code>, <code>md</code>, <code>lg</code>)</li> </ul>"},{"location":"components/ui-components/#card","title":"Card","text":"<p>A container component for displaying content in a contained format.</p> <pre><code>import { Card, CardHeader, CardContent, CardFooter } from '@halooid/ui-components';\n\n&lt;Card elevation=\"md\" hoverable&gt;\n  &lt;CardHeader&gt;\n    &lt;h3 className=\"card-title\"&gt;Card Title&lt;/h3&gt;\n    &lt;p className=\"card-subtitle\"&gt;Card Subtitle&lt;/p&gt;\n  &lt;/CardHeader&gt;\n  &lt;CardContent&gt;\n    &lt;p&gt;This is the card content.&lt;/p&gt;\n  &lt;/CardContent&gt;\n  &lt;CardFooter&gt;\n    &lt;Button variant=\"primary\"&gt;Action&lt;/Button&gt;\n  &lt;/CardFooter&gt;\n&lt;/Card&gt;\n</code></pre>"},{"location":"components/ui-components/#props_2","title":"Props","text":"<ul> <li><code>elevation</code>: Card elevation (<code>none</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, <code>xl</code>, <code>2xl</code>)</li> <li><code>bordered</code>: Whether the card has a border</li> <li><code>rounded</code>: Border radius (<code>none</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, <code>xl</code>, <code>2xl</code>, <code>full</code>)</li> <li><code>hoverable</code>: Whether the card is hoverable</li> <li><code>onTap</code>: Callback when card is tapped</li> </ul>"},{"location":"components/ui-components/#theme","title":"Theme","text":"<p>The component library includes a theme system that provides consistent colors, typography, and spacing across all components.</p> <pre><code>import { ThemeProvider } from 'styled-components';\nimport { theme } from '@halooid/ui-components';\n\n// Use the default theme\n&lt;ThemeProvider theme={theme}&gt;\n  &lt;App /&gt;\n&lt;/ThemeProvider&gt;\n\n// Customize the theme\nconst customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary: {\n      main: '#ff0000',\n      light: '#ff3333',\n      dark: '#cc0000',\n      contrastText: '#ffffff',\n    },\n  },\n};\n\n&lt;ThemeProvider theme={customTheme}&gt;\n  &lt;App /&gt;\n&lt;/ThemeProvider&gt;\n</code></pre>"},{"location":"components/ui-components/#theme-properties","title":"Theme Properties","text":"<ul> <li><code>colors</code>: Color palette</li> <li><code>typography</code>: Typography settings</li> <li><code>spacing</code>: Spacing function</li> <li><code>breakpoints</code>: Responsive breakpoints</li> <li><code>shadows</code>: Box shadow definitions</li> <li><code>borderRadius</code>: Border radius definitions</li> <li><code>transitions</code>: Animation transitions</li> <li><code>zIndex</code>: Z-index values</li> </ul>"},{"location":"components/ui-components/#utilities","title":"Utilities","text":""},{"location":"components/ui-components/#hooks","title":"Hooks","text":"<ul> <li><code>useMediaQuery</code>: Hook for responsive design</li> <li><code>useOutsideClick</code>: Hook for detecting clicks outside an element</li> </ul>"},{"location":"components/ui-components/#functions","title":"Functions","text":"<ul> <li><code>classNames</code>: Utility for combining class names</li> </ul>"},{"location":"components/ui-components/#development","title":"Development","text":""},{"location":"components/ui-components/#adding-a-new-component","title":"Adding a New Component","text":"<ol> <li>Create a new directory in <code>src/components</code> with the component name</li> <li>Create the component file (e.g., <code>ComponentName.tsx</code>)</li> <li>Create a stories file (e.g., <code>ComponentName.stories.tsx</code>)</li> <li>Export the component in <code>src/components/index.ts</code></li> <li>Document the component in Storybook</li> </ol>"},{"location":"components/ui-components/#running-tests","title":"Running Tests","text":"<pre><code># Run tests\nnpm test\n\n# Run tests with coverage\nnpm test -- --coverage\n</code></pre>"},{"location":"components/ui-components/#building-the-library","title":"Building the Library","text":"<pre><code># Build the library\nnpm run build\n\n# Watch for changes and rebuild\nnpm run dev\n</code></pre>"},{"location":"components/ui-components/#best-practices","title":"Best Practices","text":"<ol> <li>Consistency: Follow the established patterns and styles</li> <li>Accessibility: Ensure components are accessible</li> <li>Performance: Keep components lightweight and efficient</li> <li>Documentation: Document all props and usage examples</li> <li>Testing: Write tests for all components</li> </ol>"},{"location":"contributing/","title":"Contributing to Halooid","text":"<p>Thank you for your interest in contributing to the Halooid platform! This guide will help you get started with contributing to the project.</p>"},{"location":"contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>Please read our Code of Conduct before contributing to the project. We expect all contributors to adhere to this code of conduct.</p>"},{"location":"contributing/#how-to-contribute","title":"How to Contribute","text":"<p>There are many ways to contribute to the Halooid platform:</p> <ol> <li>Report bugs: If you find a bug, please report it by creating an issue in our GitHub repository.</li> <li>Suggest features: If you have an idea for a new feature, please suggest it by creating an issue in our GitHub repository.</li> <li>Improve documentation: If you find errors or omissions in the documentation, please help us improve it by creating a pull request.</li> <li>Write code: If you want to contribute code, please read the Development Guide and follow the Pull Request Guidelines.</li> </ol>"},{"location":"contributing/#getting-started","title":"Getting Started","text":""},{"location":"contributing/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have the following installed:</p> <ul> <li>Go (version 1.20 or later)</li> <li>Node.js (version 18 or later)</li> <li>Flutter (version 3.0 or later)</li> <li>Docker and Docker Compose</li> <li>PostgreSQL (version 14 or later)</li> <li>Redis (version 6 or later)</li> <li>Git</li> </ul>"},{"location":"contributing/#setting-up-your-development-environment","title":"Setting Up Your Development Environment","text":"<p>Follow these steps to set up your development environment:</p> <ol> <li>Fork the repository on GitHub.</li> <li>Clone your fork:    <pre><code>git clone https://github.com/yourusername/halooid.git\ncd halooid\n</code></pre></li> <li>Add the original repository as a remote:    <pre><code>git remote add upstream https://github.com/originalusername/halooid.git\n</code></pre></li> <li>Install dependencies and set up the development environment as described in the Development Guide.</li> </ol>"},{"location":"contributing/#contribution-workflow","title":"Contribution Workflow","text":"<ol> <li>Create a branch: Create a new branch for your contribution:    <pre><code>git checkout -b feature/your-feature-name\n</code></pre></li> <li>Make changes: Make your changes to the codebase.</li> <li>Write tests: Write tests for your changes.</li> <li>Update documentation: Update the documentation to reflect your changes.</li> <li>Commit changes: Commit your changes with a clear and descriptive commit message:    <pre><code>git add .\ngit commit -m \"Add feature X\"\n</code></pre></li> <li>Push changes: Push your changes to your fork:    <pre><code>git push origin feature/your-feature-name\n</code></pre></li> <li>Create a pull request: Create a pull request from your fork to the original repository.</li> </ol> <p>For more information about the contribution workflow, see the Pull Request Guidelines.</p>"},{"location":"contributing/#reporting-issues","title":"Reporting Issues","text":"<p>If you find a bug or have a suggestion for a new feature, please create an issue in our GitHub repository. When reporting issues, please include:</p> <ol> <li>Bug reports:</li> <li>A clear and descriptive title</li> <li>Steps to reproduce the issue</li> <li>Expected behavior</li> <li>Actual behavior</li> <li>Screenshots or error messages (if applicable)</li> <li> <p>Environment information (OS, browser, etc.)</p> </li> <li> <p>Feature requests:</p> </li> <li>A clear and descriptive title</li> <li>A detailed description of the feature</li> <li>Why the feature would be useful</li> <li>Any relevant examples or mockups</li> </ol> <p>For more information about reporting issues, see the Issue Reporting Guidelines.</p>"},{"location":"contributing/#code-style-and-standards","title":"Code Style and Standards","text":"<p>We follow specific code style and standards for each language and framework used in the Halooid platform:</p> <ul> <li>Go: Follow the Go Code Review Comments and Effective Go guidelines.</li> <li>Svelte: Follow the Svelte Style Guide.</li> <li>Flutter: Follow the Flutter Style Guide.</li> </ul> <p>For more information about code style and standards, see the Coding Standards Guide.</p>"},{"location":"contributing/#testing","title":"Testing","text":"<p>All contributions should include appropriate tests:</p> <ul> <li>Backend: Write unit tests for all business logic and integration tests for API endpoints.</li> <li>Frontend: Write unit tests for components and stores.</li> <li>Mobile: Write unit tests for widgets and services.</li> </ul> <p>For more information about testing, see the Testing Guide.</p>"},{"location":"contributing/#documentation","title":"Documentation","text":"<p>All contributions should include appropriate documentation:</p> <ul> <li>Code Documentation: Document all public APIs and explain complex logic with comments.</li> <li>User Documentation: Update user guides to reflect new features or changes.</li> <li>API Documentation: Update API documentation to reflect new endpoints or changes.</li> </ul>"},{"location":"contributing/#community","title":"Community","text":"<p>Join our community to get help, share ideas, and collaborate with other contributors:</p> <ul> <li>GitHub Discussions: Halooid Discussions</li> <li>Discord: Halooid Discord Server</li> <li>Twitter: @HalooidPlatform</li> </ul>"},{"location":"contributing/#recognition","title":"Recognition","text":"<p>We recognize all contributors to the Halooid platform. Your name will be added to the Contributors List when your contribution is merged.</p>"},{"location":"contributing/#license","title":"License","text":"<p>By contributing to the Halooid platform, you agree that your contributions will be licensed under the project's MIT License.</p>"},{"location":"contributing/#next-steps","title":"Next Steps","text":"<p>To learn more about contributing to the Halooid platform, check out the following guides:</p> <ul> <li>Code of Conduct</li> <li>Pull Request Guidelines</li> <li>Issue Reporting Guidelines</li> </ul>"},{"location":"contributing/code-of-conduct/","title":"Code of Conduct","text":"<p>This page will contain the code of conduct for contributors to the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"contributing/issue-reporting/","title":"Issue Reporting Guidelines","text":"<p>This page will contain guidelines for reporting issues with the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"contributing/pull-requests/","title":"Pull Request Guidelines","text":"<p>This page will contain guidelines for submitting pull requests to the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"deployment/","title":"Deployment Overview","text":"<p>This page will contain an overview of deployment options for the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"deployment/backend/","title":"Backend Deployment","text":"<p>This page will contain detailed information about deploying the backend of the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"deployment/frontend/","title":"Frontend Deployment","text":"<p>This page will contain detailed information about deploying the frontend of the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"deployment/mobile/","title":"Mobile Deployment","text":"<p>This page will contain detailed information about deploying the mobile applications of the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"development/","title":"Development Guide","text":"<p>This guide provides comprehensive information for developers working on the Halooid platform. Whether you're a new developer joining the project or an experienced contributor, this guide will help you understand the development process, tools, and best practices.</p>"},{"location":"development/#development-philosophy","title":"Development Philosophy","text":"<p>The Halooid platform follows these core development principles:</p> <ol> <li>Code Quality: We prioritize clean, maintainable code over quick solutions.</li> <li>Reusability: We identify opportunities for shared components and libraries.</li> <li>Simplicity: We keep implementations as simple as possible for solo development.</li> <li>Documentation: We ensure thorough documentation for future reference.</li> <li>Testing: We include appropriate tests for critical functionality.</li> </ol>"},{"location":"development/#development-environment","title":"Development Environment","text":""},{"location":"development/#prerequisites","title":"Prerequisites","text":"<p>Before you begin development, ensure you have the following installed:</p> <ul> <li>Go (version 1.20 or later)</li> <li>Node.js (version 18 or later)</li> <li>Flutter (version 3.0 or later)</li> <li>Docker and Docker Compose</li> <li>PostgreSQL (version 14 or later)</li> <li>Redis (version 6 or later)</li> <li>Git</li> </ul>"},{"location":"development/#setting-up-your-development-environment","title":"Setting Up Your Development Environment","text":"<p>We provide a setup script that will check for required tools and help set up your development environment.</p> <ol> <li> <p>Clone the repository:    <pre><code>git clone https://github.com/Jerinji2016/halooid.git\ncd halooid\n</code></pre></p> </li> <li> <p>Run the setup script:    <pre><code>./scripts/setup-dev-env.sh\n</code></pre></p> </li> <li> <p>Start the development environment:    <pre><code>docker-compose up -d\n</code></pre></p> </li> <li> <p>Install backend dependencies:    <pre><code>cd backend\ngo mod download\n</code></pre></p> </li> <li> <p>Install frontend dependencies:    <pre><code>cd ../web\nnpm install\n</code></pre></p> </li> <li> <p>Install mobile dependencies:    <pre><code>cd ../mobile\nflutter pub get\n</code></pre></p> </li> </ol> <p>For more detailed instructions, see the Setup Guide.</p>"},{"location":"development/#project-structure","title":"Project Structure","text":"<p>The Halooid platform follows a monorepo approach with the following structure:</p> <pre><code>/\n\u251c\u2500\u2500 backend/                # Backend services\n\u2502   \u251c\u2500\u2500 cmd/                # Application entry points\n\u2502   \u251c\u2500\u2500 internal/           # Private application code\n\u2502   \u251c\u2500\u2500 pkg/                # Reusable packages\n\u2502   \u251c\u2500\u2500 api/                # API definitions\n\u2502   \u251c\u2500\u2500 scripts/            # Build and deployment scripts\n\u2502   \u2514\u2500\u2500 configs/            # Configuration files\n\u251c\u2500\u2500 web/                    # Web frontend\n\u2502   \u251c\u2500\u2500 packages/           # Shared packages\n\u2502   \u2514\u2500\u2500 apps/               # SvelteKit applications\n\u251c\u2500\u2500 mobile/                 # Mobile applications\n\u2502   \u251c\u2500\u2500 packages/           # Shared packages\n\u2502   \u2514\u2500\u2500 apps/               # Flutter applications\n\u2514\u2500\u2500 docs/                   # Documentation\n</code></pre> <p>For more information about the project structure, see the Architecture Overview.</p>"},{"location":"development/#development-workflow","title":"Development Workflow","text":""},{"location":"development/#feature-development-process","title":"Feature Development Process","text":"<ol> <li>Planning: Define the feature requirements and design.</li> <li>Implementation: Develop the feature according to the design.</li> <li>Testing: Write and run tests to ensure the feature works as expected.</li> <li>Documentation: Update documentation to reflect the new feature.</li> <li>Review: Submit a pull request for review.</li> <li>Deployment: Deploy the feature to production.</li> </ol>"},{"location":"development/#branch-strategy","title":"Branch Strategy","text":"<p>We follow a feature branch workflow:</p> <ol> <li> <p>Create a new branch for each feature or bug fix:    <pre><code>git checkout -b feature/feature-name\n</code></pre></p> </li> <li> <p>Make your changes and commit them:    <pre><code>git add .\ngit commit -m \"Add feature X\"\n</code></pre></p> </li> <li> <p>Push your branch to the remote repository:    <pre><code>git push origin feature/feature-name\n</code></pre></p> </li> <li> <p>Create a pull request for review.</p> </li> </ol>"},{"location":"development/#code-review-process","title":"Code Review Process","text":"<p>All code changes must go through a code review process before being merged into the main branch. The code review process ensures that:</p> <ol> <li>The code meets our quality standards.</li> <li>The code follows our coding conventions.</li> <li>The code is well-tested.</li> <li>The code is well-documented.</li> </ol> <p>For more information about the development workflow, see the Workflow Guide.</p>"},{"location":"development/#coding-standards","title":"Coding Standards","text":""},{"location":"development/#go","title":"Go","text":"<ul> <li>Follow the Go Code Review Comments.</li> <li>Use gofmt to format your code.</li> <li>Follow the Effective Go guidelines.</li> </ul>"},{"location":"development/#svelte","title":"Svelte","text":"<ul> <li>Follow the Svelte Style Guide.</li> <li>Use ESLint and Prettier for code formatting.</li> </ul>"},{"location":"development/#flutter","title":"Flutter","text":"<ul> <li>Follow the Flutter Style Guide.</li> <li>Use the Flutter formatter (<code>flutter format</code>).</li> </ul> <p>For more information about coding standards, see the Coding Standards Guide.</p>"},{"location":"development/#testing","title":"Testing","text":""},{"location":"development/#backend-testing","title":"Backend Testing","text":"<ul> <li>Write unit tests for all business logic.</li> <li>Write integration tests for API endpoints.</li> <li>Use Go's built-in testing framework.</li> </ul>"},{"location":"development/#frontend-testing","title":"Frontend Testing","text":"<ul> <li>Write unit tests for components and stores.</li> <li>Use Jest and Testing Library for testing.</li> </ul>"},{"location":"development/#mobile-testing","title":"Mobile Testing","text":"<ul> <li>Write unit tests for widgets and services.</li> <li>Use Flutter's built-in testing framework.</li> </ul> <p>For more information about testing, see the Testing Guide.</p>"},{"location":"development/#documentation","title":"Documentation","text":""},{"location":"development/#code-documentation","title":"Code Documentation","text":"<ul> <li>Document all public APIs.</li> <li>Use comments to explain complex logic.</li> <li>Keep documentation up-to-date with code changes.</li> </ul>"},{"location":"development/#user-documentation","title":"User Documentation","text":"<ul> <li>Write clear and concise user guides.</li> <li>Include screenshots and examples.</li> <li>Update documentation when features change.</li> </ul>"},{"location":"development/#api-documentation","title":"API Documentation","text":"<ul> <li>Document all API endpoints.</li> <li>Include request and response examples.</li> <li>Specify error codes and messages.</li> </ul>"},{"location":"development/#troubleshooting","title":"Troubleshooting","text":""},{"location":"development/#common-issues","title":"Common Issues","text":"<ul> <li>Database Connection Issues: Check that PostgreSQL is running and the connection string is correct.</li> <li>Redis Connection Issues: Check that Redis is running and the connection string is correct.</li> <li>Build Errors: Check that all dependencies are installed and up-to-date.</li> </ul>"},{"location":"development/#getting-help","title":"Getting Help","text":"<p>If you encounter issues that are not covered in this guide, you can:</p> <ol> <li>Check the FAQ for common questions and answers.</li> <li>Search for similar issues in the GitHub Issues.</li> <li>Ask for help in the GitHub Discussions.</li> </ol>"},{"location":"development/#next-steps","title":"Next Steps","text":"<p>To learn more about specific aspects of development, check out the following guides:</p> <ul> <li>Setup Guide</li> <li>Workflow Guide</li> <li>Coding Standards Guide</li> <li>Testing Guide</li> </ul>"},{"location":"development/coding-standards/","title":"Coding Standards","text":"<p>This page will contain coding standards for the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"development/setup/","title":"Development Environment Setup","text":"<p>This page will contain instructions for setting up a development environment for the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"development/testing/","title":"Testing Guidelines","text":"<p>This page will contain guidelines for testing the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"development/workflow/","title":"Development Workflow","text":"<p>This page will contain information about the development workflow for the Halooid platform.</p> <p>Content coming soon</p>"},{"location":"devops/ci-cd/","title":"CI/CD Pipeline","text":""},{"location":"devops/ci-cd/#overview","title":"Overview","text":"<p>The Halooid platform uses a comprehensive CI/CD pipeline to automate the building, testing, and deployment of all components. This document describes the CI/CD pipeline setup and workflow.</p>"},{"location":"devops/ci-cd/#technology-stack","title":"Technology Stack","text":"<ul> <li>GitHub Actions: CI/CD platform</li> <li>Docker: Containerization</li> <li>Kubernetes: Container orchestration</li> <li>AWS EKS: Managed Kubernetes service</li> <li>GitHub Container Registry: Container registry</li> </ul>"},{"location":"devops/ci-cd/#pipeline-components","title":"Pipeline Components","text":""},{"location":"devops/ci-cd/#backend-cicd","title":"Backend CI/CD","text":"<p>The backend CI/CD pipeline is responsible for building, testing, and deploying the Go microservices.</p>"},{"location":"devops/ci-cd/#ci-workflow-backend-ciyml","title":"CI Workflow (<code>backend-ci.yml</code>)","text":"<p>This workflow runs on every push to the <code>main</code> branch and on pull requests targeting the <code>main</code> branch that affect backend code.</p> <p>Steps: 1. Lint: Runs <code>golangci-lint</code> to check code quality 2. Test: Runs unit and integration tests with coverage reporting 3. Build: Builds the backend services</p>"},{"location":"devops/ci-cd/#cd-workflow-backend-cdyml","title":"CD Workflow (<code>backend-cd.yml</code>)","text":"<p>This workflow runs on every push to the <code>main</code> branch and when tags are pushed.</p> <p>Steps: 1. Build and Push Docker Images: Builds Docker images for each service and pushes them to GitHub Container Registry 2. Deploy to Kubernetes: When a tag is pushed, deploys the services to the Kubernetes cluster</p>"},{"location":"devops/ci-cd/#web-frontend-cicd","title":"Web Frontend CI/CD","text":"<p>The web frontend CI/CD pipeline is responsible for building, testing, and deploying the web application.</p>"},{"location":"devops/ci-cd/#ci-workflow-web-ciyml","title":"CI Workflow (<code>web-ci.yml</code>)","text":"<p>This workflow runs on every push to the <code>main</code> branch and on pull requests targeting the <code>main</code> branch that affect web code.</p> <p>Steps: 1. Lint: Runs ESLint to check code quality 2. Test: Runs unit and integration tests with coverage reporting 3. Build: Builds the web application</p>"},{"location":"devops/ci-cd/#cd-workflow-web-cdyml","title":"CD Workflow (<code>web-cd.yml</code>)","text":"<p>This workflow runs on every push to the <code>main</code> branch and when tags are pushed.</p> <p>Steps: 1. Build and Push Docker Image: Builds a Docker image for the web frontend and pushes it to GitHub Container Registry 2. Deploy to Kubernetes: When a tag is pushed, deploys the web frontend to the Kubernetes cluster</p>"},{"location":"devops/ci-cd/#mobile-cicd","title":"Mobile CI/CD","text":"<p>The mobile CI/CD pipeline is responsible for building, testing, and releasing the mobile application.</p>"},{"location":"devops/ci-cd/#ci-workflow-mobile-ciyml","title":"CI Workflow (<code>mobile-ci.yml</code>)","text":"<p>This workflow runs on every push to the <code>main</code> branch and on pull requests targeting the <code>main</code> branch that affect mobile code.</p> <p>Steps: 1. Lint: Runs Flutter analyze to check code quality 2. Test: Runs unit and widget tests with coverage reporting 3. Build Android: Builds the Android APK 4. Build iOS: Builds the iOS app</p>"},{"location":"devops/ci-cd/#cd-workflow-mobile-cdyml","title":"CD Workflow (<code>mobile-cd.yml</code>)","text":"<p>This workflow runs when tags are pushed.</p> <p>Steps: 1. Build Android: Builds the Android APK and App Bundle 2. Release to Google Play: Uploads the App Bundle to Google Play Store (internal track) 3. Build iOS: Builds the iOS app 4. Release to App Store: Uploads the iOS app to App Store Connect (TestFlight)</p>"},{"location":"devops/ci-cd/#workflow-triggers","title":"Workflow Triggers","text":"<ul> <li>Push to Main: Triggers CI workflows and CD workflows (build and push only)</li> <li>Pull Request: Triggers CI workflows</li> <li>Tag Push: Triggers CD workflows (build, push, and deploy)</li> </ul>"},{"location":"devops/ci-cd/#environments","title":"Environments","text":""},{"location":"devops/ci-cd/#development","title":"Development","text":"<ul> <li>Local development environment</li> <li>Docker Compose for local services</li> <li>Mock services for external dependencies</li> </ul>"},{"location":"devops/ci-cd/#testing","title":"Testing","text":"<ul> <li>Kubernetes namespace: <code>halooid-test</code></li> <li>Automated testing through CI pipeline</li> <li>Test data and configurations</li> </ul>"},{"location":"devops/ci-cd/#staging","title":"Staging","text":"<ul> <li>Kubernetes namespace: <code>halooid-staging</code></li> <li>Mirrors production environment</li> <li>Used for final testing before production deployment</li> </ul>"},{"location":"devops/ci-cd/#production","title":"Production","text":"<ul> <li>Kubernetes namespace: <code>halooid</code></li> <li>High availability configuration</li> <li>Auto-scaling based on demand</li> <li>Regular backups</li> </ul>"},{"location":"devops/ci-cd/#kubernetes-deployment","title":"Kubernetes Deployment","text":"<p>The CD workflows deploy the services to a Kubernetes cluster on AWS EKS.</p>"},{"location":"devops/ci-cd/#kubernetes-manifests","title":"Kubernetes Manifests","text":"<ul> <li>Backend: <code>kubernetes/backend/</code></li> <li>API Gateway</li> <li>Authentication Service</li> <li>RBAC Service</li> <li> <p>Database Services (PostgreSQL, Redis)</p> </li> <li> <p>Web Frontend: <code>kubernetes/web/</code></p> </li> <li>Web Frontend</li> </ul>"},{"location":"devops/ci-cd/#deployment-process","title":"Deployment Process","text":"<ol> <li>Update the Kubernetes manifests with the new image tag</li> <li>Apply the Kubernetes manifests to the cluster</li> <li>Wait for the deployment to complete</li> <li>Verify the deployment</li> </ol>"},{"location":"devops/ci-cd/#required-secrets","title":"Required Secrets","text":"<p>The following secrets need to be configured in the GitHub repository settings:</p>"},{"location":"devops/ci-cd/#aws-secrets-for-kubernetes-deployment","title":"AWS Secrets (for Kubernetes deployment)","text":"<ul> <li><code>AWS_ACCESS_KEY_ID</code>: AWS access key ID</li> <li><code>AWS_SECRET_ACCESS_KEY</code>: AWS secret access key</li> <li><code>AWS_REGION</code>: AWS region</li> </ul>"},{"location":"devops/ci-cd/#android-secrets","title":"Android Secrets","text":"<ul> <li><code>KEYSTORE_BASE64</code>: Base64-encoded Android keystore file</li> <li><code>KEYSTORE_PASSWORD</code>: Password for the keystore</li> <li><code>KEY_PASSWORD</code>: Password for the key</li> <li><code>KEY_ALIAS</code>: Alias of the key</li> <li><code>GOOGLE_PLAY_SERVICE_ACCOUNT_JSON</code>: Google Play service account JSON</li> </ul>"},{"location":"devops/ci-cd/#ios-secrets","title":"iOS Secrets","text":"<ul> <li><code>IOS_P12_CERTIFICATE_BASE64</code>: Base64-encoded iOS P12 certificate</li> <li><code>IOS_P12_CERTIFICATE_PASSWORD</code>: Password for the P12 certificate</li> <li><code>KEYCHAIN_PASSWORD</code>: Password for the keychain</li> <li><code>IOS_PROVISIONING_PROFILE_BASE64</code>: Base64-encoded iOS provisioning profile</li> <li><code>APPLE_ID</code>: Apple ID</li> <li><code>APPLE_APP_SPECIFIC_PASSWORD</code>: App-specific password for the Apple ID</li> <li><code>APPLE_TEAM_ID</code>: Apple team ID</li> </ul>"},{"location":"devops/ci-cd/#monitoring-and-alerting","title":"Monitoring and Alerting","text":"<p>The CI/CD pipeline includes monitoring and alerting for deployment failures:</p> <ol> <li>GitHub Actions Notifications: Email notifications for workflow failures</li> <li>Slack Notifications: Notifications in the development Slack channel</li> <li>Deployment Monitoring: Monitoring of deployment status in Kubernetes</li> </ol>"},{"location":"devops/ci-cd/#best-practices","title":"Best Practices","text":"<ol> <li>Trunk-Based Development: Use short-lived feature branches and merge frequently</li> <li>Automated Testing: Ensure comprehensive test coverage</li> <li>Infrastructure as Code: Manage all infrastructure through code</li> <li>Immutable Deployments: Use immutable containers and avoid in-place updates</li> <li>Rollback Plan: Always have a plan for rolling back deployments</li> <li>Security Scanning: Include security scanning in the pipeline</li> <li>Artifact Versioning: Use semantic versioning for all artifacts</li> </ol>"},{"location":"devops/ci-cd/#troubleshooting","title":"Troubleshooting","text":""},{"location":"devops/ci-cd/#common-issues","title":"Common Issues","text":"<ol> <li>Failed Tests: Check the test logs for details on which tests failed and why</li> <li>Build Failures: Check the build logs for compilation errors or dependency issues</li> <li>Deployment Failures: Check the Kubernetes events and logs for deployment issues</li> <li>Permission Issues: Ensure the service account has the necessary permissions</li> </ol>"},{"location":"devops/ci-cd/#debugging-steps","title":"Debugging Steps","text":"<ol> <li>Check Workflow Logs: Review the GitHub Actions workflow logs</li> <li>Check Container Logs: Review the container logs in Kubernetes</li> <li>Check Kubernetes Events: Review the Kubernetes events for deployment issues</li> <li>Check Service Status: Verify the service status in Kubernetes</li> <li>Check Network Connectivity: Verify network connectivity between services</li> </ol>"},{"location":"getting-started/","title":"Getting Started with Halooid","text":"<p>Welcome to the Halooid platform! This guide will help you get started with using and developing for the Halooid platform.</p>"},{"location":"getting-started/#what-is-halooid","title":"What is Halooid?","text":"<p>Halooid is a multi-product platform consisting of five integrated products:</p> <ol> <li>Taskake: Task management system</li> <li>Qultrix: Human Resource Management Software</li> <li>AdminHub: Internal monitoring and administration</li> <li>CustomerConnect: CRM for customer interactions</li> <li>Invantray: Inventory and asset management software</li> </ol> <p>These products work together to provide a comprehensive solution for businesses of all sizes.</p>"},{"location":"getting-started/#quick-start","title":"Quick Start","text":""},{"location":"getting-started/#for-users","title":"For Users","text":"<p>If you want to use the Halooid platform as an end user, follow these steps:</p> <ol> <li>Sign Up: Create an account at halooid.com.</li> <li>Choose Products: Select the products you want to use.</li> <li>Set Up Your Organization: Create your organization and invite team members.</li> <li>Start Using: Begin using the products you've selected.</li> </ol> <p>For more detailed instructions, see the Installation Guide and Quick Start Guide.</p>"},{"location":"getting-started/#for-developers","title":"For Developers","text":"<p>If you want to develop for the Halooid platform, follow these steps:</p> <ol> <li>Set Up Development Environment: Install the required tools and dependencies.</li> <li>Clone the Repository: Clone the Halooid repository from GitHub.</li> <li>Install Dependencies: Install the required dependencies for the backend, frontend, and mobile applications.</li> <li>Start Development Servers: Start the development servers for the backend, frontend, and mobile applications.</li> </ol> <p>For more detailed instructions, see the Development Setup Guide.</p>"},{"location":"getting-started/#system-requirements","title":"System Requirements","text":""},{"location":"getting-started/#for-users_1","title":"For Users","text":"<ul> <li>Web Browser: Latest version of Chrome, Firefox, Safari, or Edge</li> <li>Mobile Device: iOS 14+ or Android 8+</li> <li>Internet Connection: Broadband connection (1 Mbps or faster)</li> </ul>"},{"location":"getting-started/#for-developers_1","title":"For Developers","text":"<ul> <li>Operating System: macOS, Linux, or Windows 10+</li> <li>Go: Version 1.20 or later</li> <li>Node.js: Version 18 or later</li> <li>Flutter: Version 3.0 or later</li> <li>Docker: Latest version</li> <li>Docker Compose: Latest version</li> <li>PostgreSQL: Version 14 or later</li> <li>Redis: Version 6 or later</li> <li>Git: Latest version</li> </ul>"},{"location":"getting-started/#installation-options","title":"Installation Options","text":"<p>The Halooid platform can be installed in several ways:</p>"},{"location":"getting-started/#cloud-hosted-saas","title":"Cloud Hosted (SaaS)","text":"<p>The easiest way to use Halooid is through our cloud-hosted solution at halooid.com. This option requires no installation or maintenance on your part.</p>"},{"location":"getting-started/#self-hosted","title":"Self-Hosted","text":"<p>If you prefer to host Halooid on your own infrastructure, we provide several options:</p> <ol> <li>Docker Compose: The simplest way to self-host Halooid.</li> <li>Kubernetes: For more advanced deployments with high availability and scalability.</li> <li>Manual Installation: For complete control over the installation process.</li> </ol> <p>For more information about self-hosting, see the Installation Guide.</p>"},{"location":"getting-started/#first-steps","title":"First Steps","text":"<p>After installing Halooid, here are some first steps to get started:</p> <ol> <li>Create Your Organization: Set up your organization and configure basic settings.</li> <li>Invite Team Members: Invite your team members to join your organization.</li> <li>Configure Products: Configure each product according to your needs.</li> <li>Import Data: Import existing data from other systems.</li> <li>Explore Features: Explore the features of each product.</li> </ol>"},{"location":"getting-started/#learning-path","title":"Learning Path","text":"<p>To learn more about the Halooid platform, we recommend following this learning path:</p> <ol> <li>Getting Started: Read the Quick Start Guide to get a basic understanding of the platform.</li> <li>Product Guides: Explore the guides for each product to learn about their features and capabilities.</li> <li>Architecture: Learn about the Architecture of the Halooid platform.</li> <li>Development: If you're a developer, check out the Development Guide.</li> <li>API Reference: If you want to integrate with Halooid, check out the API Reference.</li> </ol>"},{"location":"getting-started/#getting-help","title":"Getting Help","text":"<p>If you need help with the Halooid platform, there are several resources available:</p> <ul> <li>Documentation: This documentation provides comprehensive information about the platform.</li> <li>Community Forum: Join our Community Forum to ask questions and share ideas.</li> <li>GitHub Issues: Report bugs and request features on our GitHub repository.</li> <li>Support: Contact our support team at support@halooid.com.</li> </ul>"},{"location":"getting-started/#next-steps","title":"Next Steps","text":"<p>To continue your journey with the Halooid platform, check out the following resources:</p> <ul> <li>Installation Guide: Detailed instructions for installing Halooid.</li> <li>Quick Start Guide: A quick introduction to using Halooid.</li> <li>Product Guides: Detailed information about each product.</li> <li>Architecture Guide: Information about the architecture of the Halooid platform.</li> <li>Development Guide: Information for developers working on the Halooid platform.</li> </ul>"},{"location":"getting-started/installation/","title":"Installation Guide","text":"<p>This guide provides instructions for installing the Halooid platform in various environments.</p>"},{"location":"getting-started/installation/#installation-options","title":"Installation Options","text":"<p>The Halooid platform can be installed in several ways:</p> <ol> <li>Cloud Hosted (SaaS): Use our cloud-hosted solution at halooid.com.</li> <li>Self-Hosted with Docker Compose: The simplest way to self-host Halooid.</li> <li>Self-Hosted with Kubernetes: For more advanced deployments with high availability and scalability.</li> <li>Manual Installation: For complete control over the installation process.</li> </ol>"},{"location":"getting-started/installation/#cloud-hosted-saas","title":"Cloud Hosted (SaaS)","text":"<p>The easiest way to use Halooid is through our cloud-hosted solution at halooid.com. This option requires no installation or maintenance on your part.</p> <p>To get started with the cloud-hosted version:</p> <ol> <li>Visit halooid.com and sign up for an account.</li> <li>Choose the products you want to use.</li> <li>Set up your organization and invite team members.</li> <li>Start using the platform.</li> </ol>"},{"location":"getting-started/installation/#self-hosted-with-docker-compose","title":"Self-Hosted with Docker Compose","text":"<p>Docker Compose is the simplest way to self-host the Halooid platform. This option is suitable for small to medium-sized deployments.</p>"},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker (version 20.10 or later)</li> <li>Docker Compose (version 2.0 or later)</li> <li>4GB RAM (minimum)</li> <li>20GB disk space (minimum)</li> <li>Internet connection</li> </ul>"},{"location":"getting-started/installation/#installation-steps","title":"Installation Steps","text":"<ol> <li> <p>Clone the Halooid repository:    <pre><code>git clone https://github.com/yourusername/halooid.git\ncd halooid\n</code></pre></p> </li> <li> <p>Configure the environment variables:    <pre><code>cp .env.example .env\n# Edit the .env file with your preferred text editor\n</code></pre></p> </li> <li> <p>Start the services:    <pre><code>docker-compose up -d\n</code></pre></p> </li> <li> <p>Access the platform:    Open your web browser and navigate to <code>http://localhost:8080</code>.</p> </li> <li> <p>Create an admin account:    <pre><code>docker-compose exec backend ./create-admin.sh\n</code></pre></p> </li> </ol>"},{"location":"getting-started/installation/#configuration","title":"Configuration","text":"<p>The Halooid platform can be configured through environment variables in the <code>.env</code> file. Here are some important configuration options:</p> <ul> <li><code>HALOOID_DB_HOST</code>: PostgreSQL host</li> <li><code>HALOOID_DB_PORT</code>: PostgreSQL port</li> <li><code>HALOOID_DB_NAME</code>: PostgreSQL database name</li> <li><code>HALOOID_DB_USER</code>: PostgreSQL username</li> <li><code>HALOOID_DB_PASSWORD</code>: PostgreSQL password</li> <li><code>HALOOID_REDIS_HOST</code>: Redis host</li> <li><code>HALOOID_REDIS_PORT</code>: Redis port</li> <li><code>HALOOID_SECRET_KEY</code>: Secret key for JWT tokens</li> <li><code>HALOOID_ADMIN_EMAIL</code>: Admin email address</li> <li><code>HALOOID_ADMIN_PASSWORD</code>: Admin password</li> </ul> <p>For a complete list of configuration options, see the Configuration Guide.</p>"},{"location":"getting-started/installation/#self-hosted-with-kubernetes","title":"Self-Hosted with Kubernetes","text":"<p>For larger deployments with high availability and scalability requirements, we recommend using Kubernetes.</p>"},{"location":"getting-started/installation/#prerequisites_1","title":"Prerequisites","text":"<ul> <li>Kubernetes cluster (version 1.20 or later)</li> <li>Helm (version 3.0 or later)</li> <li>kubectl (configured to access your cluster)</li> <li>8GB RAM (minimum)</li> <li>40GB disk space (minimum)</li> <li>Internet connection</li> </ul>"},{"location":"getting-started/installation/#installation-steps_1","title":"Installation Steps","text":"<ol> <li> <p>Add the Halooid Helm repository:    <pre><code>helm repo add halooid https://charts.halooid.com\nhelm repo update\n</code></pre></p> </li> <li> <p>Create a values file:    <pre><code>cp values.yaml.example values.yaml\n# Edit the values.yaml file with your preferred text editor\n</code></pre></p> </li> <li> <p>Install the Halooid chart:    <pre><code>helm install halooid halooid/halooid -f values.yaml\n</code></pre></p> </li> <li> <p>Access the platform:    <pre><code>kubectl get svc halooid-frontend\n</code></pre>    Open your web browser and navigate to the external IP address.</p> </li> <li> <p>Create an admin account:    <pre><code>kubectl exec -it $(kubectl get pods -l app=halooid-backend -o jsonpath=\"{.items[0].metadata.name}\") -- ./create-admin.sh\n</code></pre></p> </li> </ol>"},{"location":"getting-started/installation/#configuration_1","title":"Configuration","text":"<p>The Halooid platform can be configured through the <code>values.yaml</code> file. Here are some important configuration options:</p> <ul> <li><code>global.environment</code>: Environment (production, staging, development)</li> <li><code>global.domain</code>: Domain name for the platform</li> <li><code>global.tls.enabled</code>: Enable TLS</li> <li><code>postgresql.enabled</code>: Enable PostgreSQL deployment</li> <li><code>redis.enabled</code>: Enable Redis deployment</li> <li><code>backend.replicas</code>: Number of backend replicas</li> <li><code>frontend.replicas</code>: Number of frontend replicas</li> </ul> <p>For a complete list of configuration options, see the Kubernetes Deployment Guide.</p>"},{"location":"getting-started/installation/#manual-installation","title":"Manual Installation","text":"<p>For complete control over the installation process, you can install the Halooid platform manually.</p>"},{"location":"getting-started/installation/#prerequisites_2","title":"Prerequisites","text":"<ul> <li>Go (version 1.20 or later)</li> <li>Node.js (version 18 or later)</li> <li>PostgreSQL (version 14 or later)</li> <li>Redis (version 6 or later)</li> <li>4GB RAM (minimum)</li> <li>20GB disk space (minimum)</li> <li>Internet connection</li> </ul>"},{"location":"getting-started/installation/#installation-steps_2","title":"Installation Steps","text":"<ol> <li> <p>Clone the Halooid repository:    <pre><code>git clone https://github.com/yourusername/halooid.git\ncd halooid\n</code></pre></p> </li> <li> <p>Install backend dependencies:    <pre><code>cd backend\ngo mod download\n</code></pre></p> </li> <li> <p>Build the backend:    <pre><code>go build -o halooid-backend ./cmd/server\n</code></pre></p> </li> <li> <p>Install frontend dependencies:    <pre><code>cd ../web\nnpm install\n</code></pre></p> </li> <li> <p>Build the frontend:    <pre><code>npm run build\n</code></pre></p> </li> <li> <p>Set up the database:    <pre><code>cd ../scripts\n./setup-database.sh\n</code></pre></p> </li> <li> <p>Configure the environment variables:    <pre><code>cp .env.example .env\n# Edit the .env file with your preferred text editor\n</code></pre></p> </li> <li> <p>Start the backend:    <pre><code>cd ../backend\n./halooid-backend\n</code></pre></p> </li> <li> <p>Start the frontend:    <pre><code>cd ../web\nnpm run start\n</code></pre></p> </li> <li> <p>Access the platform:     Open your web browser and navigate to <code>http://localhost:3000</code>.</p> </li> <li> <p>Create an admin account:     <pre><code>cd ../scripts\n./create-admin.sh\n</code></pre></p> </li> </ol>"},{"location":"getting-started/installation/#configuration_2","title":"Configuration","text":"<p>The Halooid platform can be configured through environment variables. Here are some important configuration options:</p> <ul> <li><code>HALOOID_DB_HOST</code>: PostgreSQL host</li> <li><code>HALOOID_DB_PORT</code>: PostgreSQL port</li> <li><code>HALOOID_DB_NAME</code>: PostgreSQL database name</li> <li><code>HALOOID_DB_USER</code>: PostgreSQL username</li> <li><code>HALOOID_DB_PASSWORD</code>: PostgreSQL password</li> <li><code>HALOOID_REDIS_HOST</code>: Redis host</li> <li><code>HALOOID_REDIS_PORT</code>: Redis port</li> <li><code>HALOOID_SECRET_KEY</code>: Secret key for JWT tokens</li> <li><code>HALOOID_ADMIN_EMAIL</code>: Admin email address</li> <li><code>HALOOID_ADMIN_PASSWORD</code>: Admin password</li> </ul> <p>For a complete list of configuration options, see the Configuration Guide.</p>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#common-issues","title":"Common Issues","text":""},{"location":"getting-started/installation/#database-connection-issues","title":"Database Connection Issues","text":"<p>If you encounter database connection issues, check the following:</p> <ol> <li>Ensure that PostgreSQL is running and accessible.</li> <li>Verify that the database credentials in the configuration are correct.</li> <li>Check that the database has been created and initialized.</li> </ol>"},{"location":"getting-started/installation/#redis-connection-issues","title":"Redis Connection Issues","text":"<p>If you encounter Redis connection issues, check the following:</p> <ol> <li>Ensure that Redis is running and accessible.</li> <li>Verify that the Redis connection details in the configuration are correct.</li> </ol>"},{"location":"getting-started/installation/#web-server-issues","title":"Web Server Issues","text":"<p>If you encounter web server issues, check the following:</p> <ol> <li>Ensure that the backend server is running.</li> <li>Verify that the frontend has been built correctly.</li> <li>Check that the web server port is not being used by another application.</li> </ol>"},{"location":"getting-started/installation/#getting-help","title":"Getting Help","text":"<p>If you encounter issues that are not covered in this guide, you can:</p> <ol> <li>Check the FAQ for common questions and answers.</li> <li>Search for similar issues in the GitHub Issues.</li> <li>Ask for help in the GitHub Discussions.</li> <li>Contact our support team at support@halooid.com.</li> </ol>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>After installing the Halooid platform, you can:</p> <ol> <li>Configure the platform according to your needs.</li> <li>Set up your organization and invite team members.</li> <li>Explore the features of each product.</li> <li>Integrate with other systems using the API.</li> </ol>"},{"location":"getting-started/quick-start/","title":"Quick Start Guide","text":"<p>This guide will help you get started with the Halooid platform quickly. It covers the basic steps to set up your organization, invite team members, and start using the platform.</p>"},{"location":"getting-started/quick-start/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have:</p> <ul> <li>Installed the Halooid platform (see the Installation Guide)</li> <li>Created an admin account</li> <li>Access to the Halooid platform</li> </ul>"},{"location":"getting-started/quick-start/#step-1-log-in-to-the-platform","title":"Step 1: Log In to the Platform","text":"<ol> <li>Open your web browser and navigate to your Halooid instance (e.g., <code>http://localhost:8080</code> for local installations or <code>https://yourdomain.com</code> for production installations).</li> <li>Enter your email address and password.</li> <li>Click \"Log In\".</li> </ol>"},{"location":"getting-started/quick-start/#step-2-set-up-your-organization","title":"Step 2: Set Up Your Organization","text":"<p>After logging in for the first time, you'll be prompted to set up your organization.</p> <ol> <li>Enter your organization name.</li> <li>Upload your organization logo (optional).</li> <li>Select your organization's time zone.</li> <li>Click \"Create Organization\".</li> </ol>"},{"location":"getting-started/quick-start/#step-3-configure-products","title":"Step 3: Configure Products","text":"<p>Next, you'll need to configure the products you want to use.</p> <ol> <li>Go to the \"Products\" page from the main menu.</li> <li>Enable the products you want to use by toggling the switches.</li> <li>Configure each product according to your needs by clicking on the \"Configure\" button.</li> </ol>"},{"location":"getting-started/quick-start/#taskake-configuration","title":"Taskake Configuration","text":"<ol> <li>Create project categories that match your organization's work.</li> <li>Set up task statuses (e.g., \"To Do\", \"In Progress\", \"Done\").</li> <li>Configure task priorities (e.g., \"Low\", \"Medium\", \"High\").</li> <li>Set up task types (e.g., \"Bug\", \"Feature\", \"Task\").</li> </ol>"},{"location":"getting-started/quick-start/#qultrix-configuration","title":"Qultrix Configuration","text":"<ol> <li>Set up departments and teams.</li> <li>Configure employee roles and permissions.</li> <li>Set up time-off policies.</li> <li>Configure performance review cycles.</li> </ol>"},{"location":"getting-started/quick-start/#adminhub-configuration","title":"AdminHub Configuration","text":"<ol> <li>Set up monitoring preferences.</li> <li>Configure alert thresholds.</li> <li>Set up reporting schedules.</li> <li>Configure audit logging.</li> </ol>"},{"location":"getting-started/quick-start/#customerconnect-configuration","title":"CustomerConnect Configuration","text":"<ol> <li>Set up customer categories.</li> <li>Configure lead sources.</li> <li>Set up sales pipeline stages.</li> <li>Configure customer communication templates.</li> </ol>"},{"location":"getting-started/quick-start/#invantray-configuration","title":"Invantray Configuration","text":"<ol> <li>Set up inventory categories.</li> <li>Configure storage locations.</li> <li>Set up supplier information.</li> <li>Configure reorder thresholds.</li> </ol>"},{"location":"getting-started/quick-start/#step-4-invite-team-members","title":"Step 4: Invite Team Members","text":"<p>Now that your organization and products are configured, you can invite team members to join.</p> <ol> <li>Go to the \"Team\" page from the main menu.</li> <li>Click \"Invite Team Member\".</li> <li>Enter the email address of the team member you want to invite.</li> <li>Select the products they should have access to.</li> <li>Assign roles and permissions.</li> <li>Click \"Send Invitation\".</li> </ol> <p>The team member will receive an email invitation with instructions to join your organization.</p>"},{"location":"getting-started/quick-start/#step-5-create-your-first-project-in-taskake","title":"Step 5: Create Your First Project in Taskake","text":"<p>Let's create your first project in Taskake to get started.</p> <ol> <li>Go to the \"Taskake\" product from the main menu.</li> <li>Click \"Create Project\".</li> <li>Enter a project name and description.</li> <li>Select a project category.</li> <li>Set a start date and end date (optional).</li> <li>Assign team members to the project.</li> <li>Click \"Create Project\".</li> </ol>"},{"location":"getting-started/quick-start/#step-6-create-your-first-task","title":"Step 6: Create Your First Task","text":"<p>Now, let's create your first task within the project.</p> <ol> <li>Go to the project you just created.</li> <li>Click \"Create Task\".</li> <li>Enter a task title and description.</li> <li>Select a task type, priority, and status.</li> <li>Set a due date.</li> <li>Assign the task to a team member.</li> <li>Click \"Create Task\".</li> </ol>"},{"location":"getting-started/quick-start/#step-7-explore-other-products","title":"Step 7: Explore Other Products","text":"<p>Now that you've set up your organization, invited team members, and created your first project and task, you can explore the other products in the Halooid platform.</p>"},{"location":"getting-started/quick-start/#qultrix","title":"Qultrix","text":"<ol> <li>Go to the \"Qultrix\" product from the main menu.</li> <li>Add employee information.</li> <li>Set up teams and departments.</li> <li>Configure HR processes.</li> </ol>"},{"location":"getting-started/quick-start/#adminhub","title":"AdminHub","text":"<ol> <li>Go to the \"AdminHub\" product from the main menu.</li> <li>Explore the monitoring dashboard.</li> <li>Configure alerts and notifications.</li> <li>Review system health.</li> </ol>"},{"location":"getting-started/quick-start/#customerconnect","title":"CustomerConnect","text":"<ol> <li>Go to the \"CustomerConnect\" product from the main menu.</li> <li>Add customer information.</li> <li>Create leads and opportunities.</li> <li>Set up customer communication.</li> </ol>"},{"location":"getting-started/quick-start/#invantray","title":"Invantray","text":"<ol> <li>Go to the \"Invantray\" product from the main menu.</li> <li>Add inventory items.</li> <li>Set up storage locations.</li> <li>Configure inventory tracking.</li> </ol>"},{"location":"getting-started/quick-start/#step-8-mobile-access","title":"Step 8: Mobile Access","text":"<p>The Halooid platform is also available on mobile devices.</p> <ol> <li>Download the Halooid mobile app from the App Store (iOS) or Google Play Store (Android).</li> <li>Log in with your email address and password.</li> <li>Access your organization's data on the go.</li> </ol>"},{"location":"getting-started/quick-start/#next-steps","title":"Next Steps","text":"<p>Now that you've completed the quick start guide, you can:</p> <ol> <li>Explore the features of each product in more detail.</li> <li>Configure advanced settings to customize the platform to your needs.</li> <li>Integrate with other systems using the API.</li> <li>Learn about the architecture of the Halooid platform.</li> <li>Contribute to the project if you're interested in helping develop the platform.</li> </ol>"},{"location":"getting-started/quick-start/#tips-and-best-practices","title":"Tips and Best Practices","text":""},{"location":"getting-started/quick-start/#organization-setup","title":"Organization Setup","text":"<ul> <li>Start Small: Begin with a few key team members and gradually add more as needed.</li> <li>Define Clear Roles: Clearly define roles and permissions for team members.</li> <li>Use Templates: Use project and task templates to standardize workflows.</li> </ul>"},{"location":"getting-started/quick-start/#task-management","title":"Task Management","text":"<ul> <li>Break Down Tasks: Break large tasks into smaller, manageable subtasks.</li> <li>Set Realistic Deadlines: Set realistic deadlines for tasks to avoid overloading team members.</li> <li>Use Tags: Use tags to categorize and filter tasks.</li> </ul>"},{"location":"getting-started/quick-start/#team-collaboration","title":"Team Collaboration","text":"<ul> <li>Regular Updates: Encourage team members to provide regular updates on their tasks.</li> <li>Use Comments: Use comments to discuss tasks and provide feedback.</li> <li>Share Documents: Share relevant documents and files within tasks and projects.</li> </ul>"},{"location":"getting-started/quick-start/#data-management","title":"Data Management","text":"<ul> <li>Regular Backups: Regularly back up your data to prevent loss.</li> <li>Clean Up: Regularly clean up completed tasks and projects to keep the system organized.</li> <li>Archive: Archive old data instead of deleting it to maintain a historical record.</li> </ul>"},{"location":"getting-started/quick-start/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/quick-start/#common-issues","title":"Common Issues","text":""},{"location":"getting-started/quick-start/#login-issues","title":"Login Issues","text":"<p>If you're having trouble logging in:</p> <ol> <li>Ensure you're using the correct email address and password.</li> <li>Check if your account has been activated.</li> <li>Try resetting your password.</li> </ol>"},{"location":"getting-started/quick-start/#performance-issues","title":"Performance Issues","text":"<p>If you're experiencing performance issues:</p> <ol> <li>Check your internet connection.</li> <li>Clear your browser cache.</li> <li>Ensure your device meets the minimum system requirements.</li> </ol>"},{"location":"getting-started/quick-start/#data-synchronization-issues","title":"Data Synchronization Issues","text":"<p>If you're experiencing data synchronization issues between devices:</p> <ol> <li>Ensure you have a stable internet connection.</li> <li>Log out and log back in to refresh your session.</li> <li>Check if there are any ongoing system maintenance activities.</li> </ol>"},{"location":"getting-started/quick-start/#getting-help","title":"Getting Help","text":"<p>If you encounter issues that are not covered in this guide, you can:</p> <ol> <li>Check the FAQ for common questions and answers.</li> <li>Search for similar issues in the GitHub Issues.</li> <li>Ask for help in the GitHub Discussions.</li> <li>Contact our support team at support@halooid.com.</li> </ol>"},{"location":"getting-started/setup/","title":"Development Environment Setup","text":"<p>This guide will help you set up your development environment for the Halooid platform.</p>"},{"location":"getting-started/setup/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, make sure you have the following tools installed:</p> <ul> <li>Go (version 1.20 or later)</li> <li>Node.js (version 18 or later)</li> <li>Flutter (version 3.0 or later)</li> <li>Docker and Docker Compose</li> <li>PostgreSQL (version 14 or later)</li> <li>Redis (version 6 or later)</li> <li>Git</li> </ul>"},{"location":"getting-started/setup/#automated-setup","title":"Automated Setup","text":"<p>We provide a setup script that will check for required tools and help set up your development environment.</p> <pre><code># Clone the repository\ngit clone https://github.com/Jerinji2016/halooid.git\ncd halooid\n\n# Run the setup script\n./scripts/setup-dev-env.sh\n\n# Start the development services\ndocker-compose up -d\n</code></pre> <p>The setup script will:</p> <ol> <li>Check if all required tools are installed</li> <li>Set up the Docker Compose environment</li> <li>Prepare the project structure</li> </ol>"},{"location":"getting-started/setup/#manual-setup","title":"Manual Setup","text":"<p>If you prefer to set up your environment manually, follow these steps:</p>"},{"location":"getting-started/setup/#1-clone-the-repository","title":"1. Clone the Repository","text":"<pre><code>git clone https://github.com/Jerinji2016/halooid.git\ncd halooid\n</code></pre>"},{"location":"getting-started/setup/#2-start-the-development-services","title":"2. Start the Development Services","text":"<pre><code>docker-compose up -d\n</code></pre> <p>This will start PostgreSQL and Redis services in Docker containers.</p>"},{"location":"getting-started/setup/#3-set-up-the-backend","title":"3. Set Up the Backend","text":"<pre><code>cd backend\ngo mod download\n</code></pre>"},{"location":"getting-started/setup/#4-set-up-the-web-frontend","title":"4. Set Up the Web Frontend","text":"<pre><code>cd web\nnpm install\n</code></pre>"},{"location":"getting-started/setup/#5-set-up-the-mobile-app","title":"5. Set Up the Mobile App","text":"<pre><code>cd mobile\nflutter pub get\n</code></pre>"},{"location":"getting-started/setup/#verifying-your-setup","title":"Verifying Your Setup","text":"<p>To verify that your development environment is set up correctly:</p> <ol> <li>Check that the Docker containers are running:</li> </ol> <pre><code>docker ps\n</code></pre> <p>You should see containers for PostgreSQL and Redis.</p> <ol> <li>Check that you can connect to the database:</li> </ol> <pre><code>psql -h localhost -p 5432 -U halooid -d halooid\n</code></pre> <p>The password is <code>halooid_password</code>.</p> <ol> <li>Check that you can connect to Redis:</li> </ol> <pre><code>redis-cli -h localhost -p 6379 ping\n</code></pre> <p>You should see <code>PONG</code> as the response.</p>"},{"location":"getting-started/setup/#next-steps","title":"Next Steps","text":"<p>Now that your development environment is set up, you can:</p> <ul> <li>Explore the project structure</li> <li>Learn about the architecture</li> <li>Start working on your first feature</li> </ul>"},{"location":"getting-started/setup/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter any issues during setup, check the following:</p> <ul> <li>Make sure all required tools are installed and in your PATH</li> <li>Check that Docker is running</li> <li>Ensure that ports 5432 (PostgreSQL) and 6379 (Redis) are not already in use</li> <li>Check the Docker logs for any errors:</li> </ul> <pre><code>docker logs halooid-postgres\ndocker logs halooid-redis\n</code></pre> <p>If you still have issues, please open an issue on GitHub.</p>"},{"location":"products/","title":"Products Overview","text":"<p>The Halooid platform consists of five integrated products, each designed to address specific business needs while working together as a cohesive ecosystem.</p>"},{"location":"products/#product-suite","title":"Product Suite","text":"<ul> <li> <p> Taskake</p> <p>A comprehensive task management system designed to help teams organize, track, and complete work efficiently.</p> <p> Learn more</p> </li> <li> <p> Qultrix</p> <p>A Human Resource Management Software that streamlines HR processes, from recruitment to performance management.</p> <p> Learn more</p> </li> <li> <p> AdminHub</p> <p>An internal monitoring and administration tool that provides insights and control over the entire platform.</p> <p> Learn more</p> </li> <li> <p> CustomerConnect</p> <p>A Customer Relationship Management System (CRM) for managing customer interactions and relationships.</p> <p> Learn more</p> </li> <li> <p> Invantray</p> <p>An inventory and asset management software for tracking and managing physical and digital assets.</p> <p> Learn more</p> </li> </ul>"},{"location":"products/#integration-philosophy","title":"Integration Philosophy","text":"<p>While each product in the Halooid platform can function independently, they are designed to work together seamlessly, providing additional value through integration. This integration is achieved through:</p> <ol> <li>Shared User Management: Users can access all products with a single account, with appropriate permissions.</li> <li>Cross-Product Workflows: Actions in one product can trigger workflows in another.</li> <li>Unified Data Model: Common entities like users, organizations, and projects are shared across products.</li> <li>Consistent User Experience: All products follow the same design principles and interaction patterns.</li> </ol>"},{"location":"products/#integration-examples","title":"Integration Examples","text":"<p>Here are some examples of how the products integrate with each other:</p> <pre><code>graph TD\n    T[Taskake] --&gt;|Assigns tasks to| Q[Qultrix]\n    Q --&gt;|Updates employee info in| T\n    T --&gt;|Reports issues to| A[AdminHub]\n    C[CustomerConnect] --&gt;|Creates tasks in| T\n    C --&gt;|Shares customer info with| I[Invantray]\n    I --&gt;|Updates inventory status in| A\n    A --&gt;|Monitors all products|T\n    A --&gt;|Monitors all products|Q\n    A --&gt;|Monitors all products|C\n    A --&gt;|Monitors all products|I</code></pre>"},{"location":"products/#taskake-qultrix","title":"Taskake + Qultrix","text":"<ul> <li>Tasks can be assigned based on employee skills and availability</li> <li>Employee performance can be tracked through task completion metrics</li> </ul>"},{"location":"products/#taskake-customerconnect","title":"Taskake + CustomerConnect","text":"<ul> <li>Customer requests can automatically create tasks</li> <li>Task updates can be communicated to customers</li> </ul>"},{"location":"products/#invantray-customerconnect","title":"Invantray + CustomerConnect","text":"<ul> <li>Product availability can be checked during customer interactions</li> <li>Customer orders can update inventory levels</li> </ul>"},{"location":"products/#adminhub-all-products","title":"AdminHub + All Products","text":"<ul> <li>Centralized monitoring of all platform activities</li> <li>Cross-product reporting and analytics</li> </ul>"},{"location":"products/#product-roadmaps","title":"Product Roadmaps","text":"<p>Each product has its own development roadmap, but they are coordinated to ensure that the platform evolves cohesively. For more information about the roadmap for each product, please visit the respective product pages:</p> <ul> <li>Taskake Roadmap</li> <li>Qultrix Roadmap</li> <li>AdminHub Roadmap</li> <li>CustomerConnect Roadmap</li> <li>Invantray Roadmap</li> </ul>"},{"location":"products/#next-steps","title":"Next Steps","text":"<p>To learn more about each product, click on the links above or navigate to the product-specific sections in the sidebar.</p>"},{"location":"products/adminhub/","title":"AdminHub","text":"<p>AdminHub is an internal monitoring and administration tool that provides insights and control over the entire platform.</p> <p>Detailed content coming soon</p>"},{"location":"products/adminhub/api/","title":"AdminHub API","text":"<p>This page will contain detailed information about the AdminHub API.</p> <p>Content coming soon</p>"},{"location":"products/adminhub/features/","title":"AdminHub Features","text":"<p>AdminHub is an internal monitoring and administration tool that provides insights and control over the entire Halooid platform. This page documents the features available in AdminHub.</p>"},{"location":"products/adminhub/features/#core-features","title":"Core Features","text":""},{"location":"products/adminhub/features/#system-monitoring","title":"System Monitoring","text":"<ul> <li>Dashboard Overview: Real-time overview of system health and performance</li> <li>Resource Monitoring: Monitor CPU, memory, disk, and network usage</li> <li>Service Status: Track the status of all platform services</li> <li>Error Tracking: Identify and track system errors and exceptions</li> <li>Performance Metrics: Monitor key performance indicators for all services</li> <li>Uptime Tracking: Track system uptime and availability</li> <li>Load Balancing: Monitor load distribution across servers</li> <li>Threshold Alerts: Set up alerts for when metrics exceed thresholds</li> </ul>"},{"location":"products/adminhub/features/#user-administration","title":"User Administration","text":"<ul> <li>User Management: Create, update, and deactivate user accounts</li> <li>Role Management: Define and assign user roles and permissions</li> <li>Access Control: Manage access to different parts of the platform</li> <li>User Activity: Monitor user login and activity history</li> <li>Session Management: View and manage active user sessions</li> <li>Password Policies: Configure password complexity and expiration policies</li> <li>Multi-factor Authentication: Manage MFA settings and enforcement</li> <li>User Impersonation: Temporarily access the system as another user for support</li> </ul>"},{"location":"products/adminhub/features/#organization-management","title":"Organization Management","text":"<ul> <li>Organization Setup: Create and configure organizations</li> <li>Organization Hierarchy: Define parent-child relationships between organizations</li> <li>Subscription Management: Manage organization subscriptions and billing</li> <li>Feature Access: Control which features are available to each organization</li> <li>Data Segregation: Ensure proper isolation of organization data</li> <li>Organization Settings: Configure organization-specific settings</li> <li>White Labeling: Customize the platform appearance for each organization</li> <li>Domain Management: Manage custom domains for organizations</li> </ul>"},{"location":"products/adminhub/features/#security-management","title":"Security Management","text":"<ul> <li>Security Dashboard: Overview of security status and potential issues</li> <li>Audit Logs: Comprehensive logs of all system activities</li> <li>Security Alerts: Notifications for suspicious activities or security breaches</li> <li>IP Restrictions: Restrict access based on IP addresses or ranges</li> <li>Data Encryption: Manage encryption settings for sensitive data</li> <li>Compliance Reporting: Generate reports for security compliance</li> <li>Vulnerability Scanning: Identify potential security vulnerabilities</li> <li>Security Policies: Define and enforce security policies</li> </ul>"},{"location":"products/adminhub/features/#advanced-features","title":"Advanced Features","text":""},{"location":"products/adminhub/features/#system-configuration","title":"System Configuration","text":"<ul> <li>Global Settings: Configure platform-wide settings</li> <li>Email Configuration: Set up email servers and templates</li> <li>Integration Settings: Configure third-party integrations</li> <li>Localization: Manage language and regional settings</li> <li>Backup Configuration: Set up automated backup schedules</li> <li>Caching Policies: Configure caching for optimal performance</li> <li>Storage Management: Configure and monitor storage solutions</li> <li>API Configuration: Manage API settings and access tokens</li> </ul>"},{"location":"products/adminhub/features/#data-management","title":"Data Management","text":"<ul> <li>Database Administration: Manage database connections and performance</li> <li>Data Import/Export: Tools for importing and exporting data</li> <li>Data Cleanup: Identify and clean up redundant or obsolete data</li> <li>Data Archiving: Archive old data for compliance and performance</li> <li>Data Validation: Validate data integrity across the platform</li> <li>Schema Management: View and manage database schemas</li> <li>Query Tools: Execute and monitor database queries</li> <li>Data Migration: Tools for migrating data between environments</li> </ul>"},{"location":"products/adminhub/features/#deployment-and-updates","title":"Deployment and Updates","text":"<ul> <li>Version Management: Track and manage software versions</li> <li>Deployment Controls: Control the deployment of new features</li> <li>Feature Flags: Enable or disable specific features</li> <li>Rollback Capability: Roll back to previous versions if needed</li> <li>Update Scheduling: Schedule updates during low-traffic periods</li> <li>Environment Management: Manage development, staging, and production environments</li> <li>Release Notes: Access and distribute release notes for updates</li> <li>Deployment History: View history of all deployments</li> </ul>"},{"location":"products/adminhub/features/#user-interface","title":"User Interface","text":""},{"location":"products/adminhub/features/#admin-dashboard","title":"Admin Dashboard","text":"<ul> <li>System Health: Visual indicators of system health</li> <li>Key Metrics: Display of key performance and usage metrics</li> <li>Recent Activity: Log of recent administrative actions</li> <li>Alert Panel: Display of current alerts and warnings</li> <li>Quick Actions: Access to frequently used administrative functions</li> <li>System News: Announcements and updates for administrators</li> <li>Resource Usage: Graphs showing resource usage over time</li> <li>User Statistics: Overview of user activity and growth</li> </ul>"},{"location":"products/adminhub/features/#monitoring-views","title":"Monitoring Views","text":"<ul> <li>Service Monitor: Detailed view of all services and their status</li> <li>Log Explorer: Search and filter system logs</li> <li>Performance Graphs: Visual representation of performance metrics</li> <li>Network Monitor: View network traffic and connectivity</li> <li>Database Monitor: Monitor database performance and queries</li> <li>Cache Monitor: Track cache hit rates and performance</li> <li>Job Monitor: View scheduled and running background jobs</li> <li>API Monitor: Track API usage and performance</li> </ul>"},{"location":"products/adminhub/features/#administration-tools","title":"Administration Tools","text":"<ul> <li>User Manager: Interface for managing users and permissions</li> <li>Organization Manager: Tools for managing organizations</li> <li>Configuration Editor: Interface for editing system configurations</li> <li>Backup Manager: Tools for managing backups and restores</li> <li>Task Scheduler: Interface for scheduling administrative tasks</li> <li>Report Generator: Tools for generating administrative reports</li> <li>System Cleanup: Interface for cleaning up system resources</li> <li>Notification Manager: Configure and manage system notifications</li> </ul>"},{"location":"products/adminhub/features/#workflows","title":"Workflows","text":""},{"location":"products/adminhub/features/#common-administrative-workflows","title":"Common Administrative Workflows","text":"<ol> <li>User Onboarding: Process for adding new administrative users</li> <li>Incident Response: Steps for responding to system incidents</li> <li>Performance Optimization: Process for identifying and resolving performance issues</li> <li>Security Audit: Regular security review and remediation</li> <li>System Backup: Regular backup and verification process</li> <li>Version Update: Process for updating the platform to new versions</li> </ol>"},{"location":"products/adminhub/features/#use-cases","title":"Use Cases","text":"<ul> <li>System Monitoring: Continuously monitor system health and performance</li> <li>User Support: Assist users with account and access issues</li> <li>Security Management: Ensure the platform remains secure</li> <li>Performance Tuning: Optimize the platform for best performance</li> <li>Compliance Management: Ensure the platform meets regulatory requirements</li> <li>Disaster Recovery: Recover from system failures or data loss</li> </ul>"},{"location":"products/adminhub/features/#integration-points","title":"Integration Points","text":""},{"location":"products/adminhub/features/#integration-with-other-halooid-products","title":"Integration with Other Halooid Products","text":"<ul> <li>Taskake: Monitor task-related performance and usage metrics</li> <li>Qultrix: Manage user access and permissions for HR functions</li> <li>CustomerConnect: Monitor customer-related activities and performance</li> <li>Invantray: Track inventory system performance and usage</li> </ul>"},{"location":"products/adminhub/features/#external-integrations","title":"External Integrations","text":"<ul> <li>Monitoring Tools: Integrate with external monitoring solutions</li> <li>Security Tools: Connect with security and vulnerability scanning tools</li> <li>Analytics Platforms: Export data to external analytics platforms</li> <li>Logging Systems: Forward logs to external logging systems</li> <li>Alerting Services: Send alerts to external notification services</li> <li>Identity Providers: Integrate with external identity providers for SSO</li> </ul>"},{"location":"products/adminhub/features/#configuration-options","title":"Configuration Options","text":"<ul> <li>Alert Thresholds: Configure thresholds for various system alerts</li> <li>Logging Levels: Set logging verbosity for different components</li> <li>Retention Policies: Configure data retention periods</li> <li>Authentication Settings: Configure authentication methods and policies</li> <li>Email Notifications: Configure email notifications for administrators</li> <li>Dashboard Layout: Customize the administrative dashboard layout</li> <li>Report Scheduling: Schedule automated administrative reports</li> </ul>"},{"location":"products/adminhub/features/#best-practices","title":"Best Practices","text":"<ul> <li>Regular Monitoring: Regularly check system health and performance</li> <li>Proactive Maintenance: Address potential issues before they become problems</li> <li>Security First: Prioritize security in all administrative actions</li> <li>Documentation: Maintain documentation of system configuration and changes</li> <li>Least Privilege: Grant only the necessary permissions to users</li> <li>Regular Backups: Perform and verify backups regularly</li> <li>Change Management: Follow proper change management procedures</li> <li>Performance Optimization: Regularly review and optimize system performance</li> </ul>"},{"location":"products/adminhub/user-guide/","title":"AdminHub User Guide","text":"<p>This page will contain a comprehensive guide to using AdminHub.</p> <p>Content coming soon</p>"},{"location":"products/customerconnect/","title":"CustomerConnect","text":"<p>CustomerConnect is a Customer Relationship Management System (CRM) for managing customer interactions and relationships.</p> <p>Detailed content coming soon</p>"},{"location":"products/customerconnect/api/","title":"CustomerConnect API","text":"<p>This page will contain detailed information about the CustomerConnect API.</p> <p>Content coming soon</p>"},{"location":"products/customerconnect/features/","title":"CustomerConnect Features","text":"<p>CustomerConnect is a comprehensive Customer Relationship Management (CRM) system for managing customer interactions and relationships. This page documents the features available in CustomerConnect.</p>"},{"location":"products/customerconnect/features/#core-features","title":"Core Features","text":""},{"location":"products/customerconnect/features/#contact-management","title":"Contact Management","text":"<ul> <li>Contact Profiles: Comprehensive customer profiles with contact information</li> <li>Contact Organization: Group contacts by companies, departments, or categories</li> <li>Contact History: View complete history of interactions with each contact</li> <li>Contact Segmentation: Segment contacts based on various criteria</li> <li>Custom Fields: Add custom fields to contact profiles for specific information</li> <li>Contact Import/Export: Import contacts from CSV or other formats</li> <li>Duplicate Detection: Identify and merge duplicate contact records</li> <li>Contact Scoring: Score contacts based on engagement and potential value</li> </ul>"},{"location":"products/customerconnect/features/#lead-management","title":"Lead Management","text":"<ul> <li>Lead Capture: Capture leads from website forms, emails, and other sources</li> <li>Lead Qualification: Qualify leads based on defined criteria</li> <li>Lead Scoring: Score leads based on interest and readiness to purchase</li> <li>Lead Assignment: Automatically assign leads to sales representatives</li> <li>Lead Nurturing: Develop leads through automated nurturing campaigns</li> <li>Lead Conversion: Convert qualified leads to opportunities</li> <li>Lead Source Tracking: Track the source of each lead</li> <li>Lead Analytics: Analyze lead conversion rates and performance</li> </ul>"},{"location":"products/customerconnect/features/#opportunity-management","title":"Opportunity Management","text":"<ul> <li>Opportunity Creation: Create sales opportunities from leads or contacts</li> <li>Sales Pipeline: Visualize and manage the sales pipeline</li> <li>Opportunity Stages: Track opportunities through customizable sales stages</li> <li>Forecasting: Forecast sales based on pipeline and probability</li> <li>Opportunity Assignments: Assign opportunities to sales representatives</li> <li>Opportunity Collaboration: Collaborate on opportunities with team members</li> <li>Win/Loss Analysis: Analyze won and lost opportunities for insights</li> <li>Opportunity Alerts: Receive alerts for stalled or at-risk opportunities</li> </ul>"},{"location":"products/customerconnect/features/#customer-service","title":"Customer Service","text":"<ul> <li>Case Management: Create and track customer service cases</li> <li>Case Routing: Automatically route cases to appropriate agents</li> <li>Service Level Agreements: Define and track SLAs for case resolution</li> <li>Knowledge Base: Access knowledge base articles for case resolution</li> <li>Case Escalation: Escalate cases based on priority or time thresholds</li> <li>Customer Portal: Allow customers to submit and track their cases</li> <li>Case Templates: Use templates for common case types</li> <li>Customer Satisfaction: Measure customer satisfaction with surveys</li> </ul>"},{"location":"products/customerconnect/features/#advanced-features","title":"Advanced Features","text":""},{"location":"products/customerconnect/features/#marketing-automation","title":"Marketing Automation","text":"<ul> <li>Campaign Management: Create and manage marketing campaigns</li> <li>Email Marketing: Send targeted email campaigns to contacts</li> <li>Campaign Tracking: Track campaign performance and ROI</li> <li>Landing Pages: Create and manage landing pages for campaigns</li> <li>Marketing Calendar: Plan and visualize marketing activities</li> <li>A/B Testing: Test different marketing approaches for effectiveness</li> <li>Marketing Analytics: Analyze marketing performance and impact</li> <li>Social Media Integration: Manage social media marketing from within the CRM</li> </ul>"},{"location":"products/customerconnect/features/#sales-automation","title":"Sales Automation","text":"<ul> <li>Quote Generation: Generate quotes and proposals for customers</li> <li>Product Catalog: Manage product information and pricing</li> <li>Order Management: Process and track customer orders</li> <li>Contract Management: Create and manage customer contracts</li> <li>Sales Forecasting: Forecast sales based on pipeline and historical data</li> <li>Territory Management: Define and manage sales territories</li> <li>Commission Calculation: Calculate sales commissions</li> <li>Sales Goals: Set and track sales goals for individuals and teams</li> </ul>"},{"location":"products/customerconnect/features/#customer-analytics","title":"Customer Analytics","text":"<ul> <li>Customer Insights: Gain insights into customer behavior and preferences</li> <li>Customer Segmentation: Segment customers based on various criteria</li> <li>Customer Lifetime Value: Calculate and track customer lifetime value</li> <li>Churn Prediction: Identify customers at risk of churning</li> <li>Customer Journey Mapping: Map and analyze the customer journey</li> <li>Behavioral Analytics: Analyze customer behavior patterns</li> <li>Sentiment Analysis: Analyze customer sentiment from interactions</li> <li>Predictive Analytics: Predict future customer behavior and needs</li> </ul>"},{"location":"products/customerconnect/features/#user-interface","title":"User Interface","text":""},{"location":"products/customerconnect/features/#main-dashboard","title":"Main Dashboard","text":"<ul> <li>Activity Stream: View recent activities and updates</li> <li>Key Metrics: Display of key performance indicators</li> <li>Task List: View and manage upcoming tasks</li> <li>Pipeline View: Visualize the sales pipeline</li> <li>Recent Contacts: Quick access to recently viewed contacts</li> <li>Calendar: View upcoming meetings and events</li> <li>Notifications: Receive important notifications</li> <li>Quick Actions: Access frequently used functions</li> </ul>"},{"location":"products/customerconnect/features/#contact-views","title":"Contact Views","text":"<ul> <li>List View: Traditional list view of contacts</li> <li>Card View: Visual card-based view of contacts</li> <li>Map View: Geographic view of contacts</li> <li>Timeline View: Chronological view of contact interactions</li> <li>Relationship View: Visualize relationships between contacts</li> <li>Custom Views: Create custom views based on specific criteria</li> </ul>"},{"location":"products/customerconnect/features/#mobile-interface","title":"Mobile Interface","text":"<ul> <li>Mobile App: Native mobile applications for iOS and Android</li> <li>Responsive Web: Mobile-responsive web interface</li> <li>Offline Access: Access key information offline</li> <li>Mobile Data Entry: Enter data on the go</li> <li>Push Notifications: Receive important updates via push notifications</li> <li>Mobile Calendar: Access and manage your calendar from mobile</li> <li>Business Card Scanning: Scan business cards to create contacts</li> </ul>"},{"location":"products/customerconnect/features/#workflows","title":"Workflows","text":""},{"location":"products/customerconnect/features/#sales-workflows","title":"Sales Workflows","text":"<ol> <li>Lead Generation: Capture and qualify new leads</li> <li>Opportunity Creation: Convert qualified leads to opportunities</li> <li>Proposal Development: Create and present proposals</li> <li>Negotiation: Negotiate terms and address objections</li> <li>Closing: Close the deal and process the order</li> <li>Follow-up: Follow up with customers after the sale</li> </ol>"},{"location":"products/customerconnect/features/#customer-service-workflows","title":"Customer Service Workflows","text":"<ol> <li>Case Creation: Create a new customer service case</li> <li>Case Assignment: Assign the case to an appropriate agent</li> <li>Case Resolution: Resolve the customer's issue</li> <li>Customer Feedback: Collect feedback on the resolution</li> <li>Case Analysis: Analyze case data for improvement opportunities</li> </ol>"},{"location":"products/customerconnect/features/#common-use-cases","title":"Common Use Cases","text":"<ul> <li>Sales Management: Track and manage the sales process</li> <li>Customer Support: Provide timely and effective customer support</li> <li>Marketing Campaigns: Plan and execute targeted marketing campaigns</li> <li>Account Management: Manage ongoing relationships with key accounts</li> <li>Partner Management: Manage relationships with partners and resellers</li> <li>Event Management: Organize and track customer events and webinars</li> </ul>"},{"location":"products/customerconnect/features/#integration-points","title":"Integration Points","text":""},{"location":"products/customerconnect/features/#integration-with-other-halooid-products","title":"Integration with Other Halooid Products","text":"<ul> <li>Taskake: Create tasks related to customer interactions</li> <li>Qultrix: Share employee information for customer-facing roles</li> <li>AdminHub: Administrators can monitor CRM usage and performance</li> <li>Invantray: Check product availability and manage customer orders</li> </ul>"},{"location":"products/customerconnect/features/#external-integrations","title":"External Integrations","text":"<ul> <li>Email Clients: Integrate with email clients for communication tracking</li> <li>Calendar Apps: Sync with calendar applications</li> <li>Phone Systems: Integrate with VoIP and call center systems</li> <li>Marketing Platforms: Connect with external marketing automation platforms</li> <li>E-commerce Platforms: Integrate with online stores</li> <li>Social Media: Connect with social media platforms</li> <li>Document Management: Integrate with document management systems</li> <li>Payment Processors: Connect with payment processing systems</li> </ul>"},{"location":"products/customerconnect/features/#configuration-options","title":"Configuration Options","text":"<ul> <li>Custom Fields: Create custom fields for contacts, leads, and opportunities</li> <li>Sales Stages: Define custom sales stages for your sales process</li> <li>Workflow Rules: Configure automated workflow rules</li> <li>Email Templates: Create templates for common email communications</li> <li>Dashboard Configuration: Customize dashboards for different user roles</li> <li>Access Control: Set up roles and permissions for CRM data</li> <li>Notification Settings: Configure notification preferences</li> <li>Branding: Customize the interface with company branding</li> </ul>"},{"location":"products/customerconnect/features/#best-practices","title":"Best Practices","text":"<ul> <li>Data Quality: Maintain high-quality, up-to-date customer data</li> <li>Regular Follow-up: Follow up with leads and customers in a timely manner</li> <li>Process Adherence: Follow established sales and service processes</li> <li>Activity Logging: Log all customer interactions for a complete history</li> <li>Pipeline Management: Regularly review and update the sales pipeline</li> <li>Customer Feedback: Regularly collect and act on customer feedback</li> <li>Team Collaboration: Collaborate effectively on customer opportunities</li> <li>Performance Analysis: Regularly analyze CRM data for performance insights</li> </ul>"},{"location":"products/customerconnect/user-guide/","title":"CustomerConnect User Guide","text":"<p>This page will contain a comprehensive guide to using CustomerConnect.</p> <p>Content coming soon</p>"},{"location":"products/invantray/","title":"Invantray","text":"<p>Invantray is an inventory and asset management software for tracking and managing physical and digital assets.</p> <p>Detailed content coming soon</p>"},{"location":"products/invantray/api/","title":"Invantray API","text":"<p>This page will contain detailed information about the Invantray API.</p> <p>Content coming soon</p>"},{"location":"products/invantray/features/","title":"Invantray Features","text":"<p>Invantray is a comprehensive inventory and asset management software for tracking and managing physical and digital assets. This page documents the features available in Invantray.</p>"},{"location":"products/invantray/features/#core-features","title":"Core Features","text":""},{"location":"products/invantray/features/#inventory-management","title":"Inventory Management","text":"<ul> <li>Item Catalog: Comprehensive catalog of all inventory items</li> <li>Stock Tracking: Real-time tracking of stock levels</li> <li>Barcode/QR Code Support: Generate and scan barcodes or QR codes</li> <li>Batch/Lot Tracking: Track items by batch or lot numbers</li> <li>Expiration Date Tracking: Monitor items with expiration dates</li> <li>Unit of Measure Conversion: Convert between different units of measure</li> <li>Minimum Stock Levels: Set and monitor minimum stock levels</li> <li>Reorder Alerts: Receive alerts when items need to be reordered</li> </ul>"},{"location":"products/invantray/features/#warehouse-management","title":"Warehouse Management","text":"<ul> <li>Multiple Locations: Manage inventory across multiple locations</li> <li>Bin/Shelf Locations: Track items by specific bin or shelf locations</li> <li>Picking and Packing: Streamline picking and packing processes</li> <li>Receiving: Process and track incoming inventory</li> <li>Put-away: Manage the put-away process for received items</li> <li>Transfer Management: Track transfers between locations</li> <li>Space Optimization: Optimize warehouse space utilization</li> <li>Zone Management: Organize warehouse into zones for efficient operations</li> </ul>"},{"location":"products/invantray/features/#asset-management","title":"Asset Management","text":"<ul> <li>Asset Registry: Comprehensive registry of all assets</li> <li>Asset Categorization: Categorize assets by type, department, etc.</li> <li>Asset Lifecycle: Track assets through their entire lifecycle</li> <li>Depreciation Tracking: Calculate and track asset depreciation</li> <li>Maintenance Scheduling: Schedule and track asset maintenance</li> <li>Warranty Management: Track warranty information for assets</li> <li>Asset Allocation: Assign assets to departments or individuals</li> <li>Asset Audits: Conduct and track asset audits</li> </ul>"},{"location":"products/invantray/features/#procurement","title":"Procurement","text":"<ul> <li>Purchase Orders: Create and manage purchase orders</li> <li>Vendor Management: Manage vendor information and relationships</li> <li>Order Tracking: Track the status of orders</li> <li>Receiving: Process and verify received orders</li> <li>Invoice Matching: Match invoices to purchase orders and receipts</li> <li>Approval Workflows: Configure approval workflows for purchases</li> <li>Cost Tracking: Track and analyze procurement costs</li> <li>Vendor Performance: Evaluate vendor performance</li> </ul>"},{"location":"products/invantray/features/#advanced-features","title":"Advanced Features","text":""},{"location":"products/invantray/features/#demand-planning","title":"Demand Planning","text":"<ul> <li>Demand Forecasting: Forecast future inventory needs</li> <li>Sales Order Management: Manage and fulfill sales orders</li> <li>Backorder Management: Track and manage backorders</li> <li>Seasonal Planning: Plan for seasonal demand fluctuations</li> <li>Safety Stock Calculation: Calculate optimal safety stock levels</li> <li>ABC Analysis: Categorize inventory by importance</li> <li>Demand Patterns: Identify and analyze demand patterns</li> <li>What-If Analysis: Simulate different demand scenarios</li> </ul>"},{"location":"products/invantray/features/#supply-chain-management","title":"Supply Chain Management","text":"<ul> <li>Supply Chain Visibility: End-to-end visibility of the supply chain</li> <li>Supplier Collaboration: Collaborate with suppliers on forecasts and orders</li> <li>Lead Time Management: Track and manage supplier lead times</li> <li>Order Optimization: Optimize order quantities and timing</li> <li>Risk Management: Identify and mitigate supply chain risks</li> <li>Performance Metrics: Track key supply chain performance metrics</li> <li>Cost Analysis: Analyze supply chain costs</li> <li>Sustainability Tracking: Track environmental impact of supply chain</li> </ul>"},{"location":"products/invantray/features/#reporting-and-analytics","title":"Reporting and Analytics","text":"<ul> <li>Inventory Reports: Generate reports on inventory levels and movements</li> <li>Asset Reports: Generate reports on asset status and utilization</li> <li>Financial Reports: Generate reports on inventory value and costs</li> <li>Custom Reports: Create custom reports based on specific criteria</li> <li>Dashboards: Visual dashboards for key metrics</li> <li>Data Export: Export data in various formats (PDF, Excel, CSV)</li> <li>Historical Analysis: Analyze historical inventory and asset data</li> <li>Predictive Analytics: Predict future inventory needs and asset issues</li> </ul>"},{"location":"products/invantray/features/#user-interface","title":"User Interface","text":""},{"location":"products/invantray/features/#main-dashboard","title":"Main Dashboard","text":"<ul> <li>Inventory Overview: Quick view of inventory levels and status</li> <li>Asset Overview: Summary of asset status and allocation</li> <li>Alert Panel: Display of current alerts and warnings</li> <li>Recent Activities: Log of recent inventory and asset activities</li> <li>Quick Actions: Access to frequently used functions</li> <li>Key Metrics: Display of key performance indicators</li> <li>Search Function: Quickly find inventory items or assets</li> <li>Customizable Layout: Arrange dashboard components according to preference</li> </ul>"},{"location":"products/invantray/features/#inventory-views","title":"Inventory Views","text":"<ul> <li>List View: Traditional list view of inventory items</li> <li>Grid View: Tabular view with customizable columns</li> <li>Location View: View inventory by location</li> <li>Category View: View inventory by category</li> <li>Low Stock View: View items with low stock levels</li> <li>Expiring Items View: View items approaching expiration</li> <li>Custom Views: Create custom views based on specific criteria</li> </ul>"},{"location":"products/invantray/features/#mobile-interface","title":"Mobile Interface","text":"<ul> <li>Mobile App: Native mobile applications for iOS and Android</li> <li>Barcode Scanning: Scan barcodes or QR codes with mobile devices</li> <li>Mobile Receiving: Process receiving on mobile devices</li> <li>Mobile Inventory Counts: Conduct inventory counts on mobile devices</li> <li>Asset Tracking: Track assets on the go</li> <li>Offline Mode: Work offline with synchronization when online</li> <li>Push Notifications: Receive important updates via push notifications</li> </ul>"},{"location":"products/invantray/features/#workflows","title":"Workflows","text":""},{"location":"products/invantray/features/#inventory-workflows","title":"Inventory Workflows","text":"<ol> <li>Procurement: Order items from suppliers</li> <li>Receiving: Receive and inspect incoming items</li> <li>Put-away: Store items in appropriate locations</li> <li>Picking: Pick items for orders or internal use</li> <li>Shipping: Pack and ship items to customers</li> <li>Returns: Process returned items</li> <li>Cycle Counting: Regularly count and verify inventory</li> </ol>"},{"location":"products/invantray/features/#asset-workflows","title":"Asset Workflows","text":"<ol> <li>Acquisition: Acquire new assets</li> <li>Deployment: Deploy assets to users or locations</li> <li>Maintenance: Perform regular maintenance</li> <li>Reallocation: Reassign assets as needed</li> <li>Retirement: Retire assets at end of life</li> <li>Disposal: Properly dispose of retired assets</li> </ol>"},{"location":"products/invantray/features/#common-use-cases","title":"Common Use Cases","text":"<ul> <li>Retail Inventory: Manage inventory for retail operations</li> <li>Manufacturing Materials: Track raw materials and finished goods</li> <li>IT Asset Management: Manage IT hardware and software assets</li> <li>Healthcare Supplies: Track medical supplies and equipment</li> <li>Facilities Management: Manage facilities and maintenance equipment</li> <li>Fleet Management: Track vehicles and related assets</li> <li>Educational Resources: Manage educational resources and equipment</li> </ul>"},{"location":"products/invantray/features/#integration-points","title":"Integration Points","text":""},{"location":"products/invantray/features/#integration-with-other-halooid-products","title":"Integration with Other Halooid Products","text":"<ul> <li>Taskake: Create tasks related to inventory or asset management</li> <li>Qultrix: Assign assets to employees</li> <li>AdminHub: Administrators can monitor inventory system performance</li> <li>CustomerConnect: Check product availability for customer orders</li> </ul>"},{"location":"products/invantray/features/#external-integrations","title":"External Integrations","text":"<ul> <li>Accounting Systems: Integrate with accounting software</li> <li>ERP Systems: Connect with enterprise resource planning systems</li> <li>E-commerce Platforms: Integrate with online stores</li> <li>Shipping Carriers: Connect with shipping carriers for logistics</li> <li>Supplier Portals: Integrate with supplier portals for ordering</li> <li>IoT Devices: Connect with IoT devices for real-time tracking</li> <li>RFID Systems: Integrate with RFID systems for automatic tracking</li> <li>Mobile Scanners: Connect with dedicated barcode scanners</li> </ul>"},{"location":"products/invantray/features/#configuration-options","title":"Configuration Options","text":"<ul> <li>Custom Fields: Create custom fields for inventory items and assets</li> <li>Workflow Rules: Configure automated workflow rules</li> <li>Notification Settings: Customize notification preferences</li> <li>Barcode/QR Code Formats: Configure barcode and QR code formats</li> <li>User Roles: Define user roles and permissions</li> <li>Report Templates: Create templates for common reports</li> <li>Label Templates: Design custom label templates</li> <li>System Preferences: Configure general system preferences</li> </ul>"},{"location":"products/invantray/features/#best-practices","title":"Best Practices","text":"<ul> <li>Regular Audits: Conduct regular inventory and asset audits</li> <li>Accurate Data Entry: Ensure accurate data entry for all items</li> <li>Consistent Categorization: Use consistent categories and naming conventions</li> <li>Proper Labeling: Label all items clearly and consistently</li> <li>Cycle Counting: Implement regular cycle counting procedures</li> <li>Documentation: Maintain documentation for all processes</li> <li>Training: Provide thorough training for all users</li> <li>Continuous Improvement: Regularly review and improve processes</li> </ul>"},{"location":"products/invantray/user-guide/","title":"Invantray User Guide","text":"<p>This page will contain a comprehensive guide to using Invantray.</p> <p>Content coming soon</p>"},{"location":"products/qultrix/","title":"Qultrix","text":"<p>Qultrix is a Human Resource Management Software that streamlines HR processes, from recruitment to performance management.</p> <p>Detailed content coming soon</p>"},{"location":"products/qultrix/api/","title":"Qultrix API","text":"<p>This page will contain detailed information about the Qultrix API.</p> <p>Content coming soon</p>"},{"location":"products/qultrix/features/","title":"Qultrix Features","text":"<p>Qultrix is a comprehensive Human Resource Management Software that streamlines HR processes, from recruitment to performance management. This page documents the features available in Qultrix.</p>"},{"location":"products/qultrix/features/#core-features","title":"Core Features","text":""},{"location":"products/qultrix/features/#employee-management","title":"Employee Management","text":"<ul> <li>Employee Profiles: Comprehensive employee profiles with personal and professional information</li> <li>Organization Structure: Define and visualize company hierarchy and reporting relationships</li> <li>Employee Directory: Searchable directory of all employees with contact information</li> <li>Employee Self-Service: Allow employees to update their own information and access HR services</li> <li>Document Management: Store and manage employee documents (contracts, certificates, etc.)</li> <li>Custom Fields: Add custom fields to employee profiles for specific information needs</li> <li>Employee Lifecycle Management: Track and manage the entire employee lifecycle</li> </ul>"},{"location":"products/qultrix/features/#recruitment-and-onboarding","title":"Recruitment and Onboarding","text":"<ul> <li>Job Requisitions: Create and manage job requisitions</li> <li>Career Portal: Customizable career portal for job listings</li> <li>Application Tracking: Track and manage job applications</li> <li>Candidate Evaluation: Evaluate candidates with customizable assessment criteria</li> <li>Interview Scheduling: Schedule and manage interviews</li> <li>Offer Management: Create, send, and track job offers</li> <li>Onboarding Workflows: Streamline the onboarding process with customizable workflows</li> <li>Onboarding Checklists: Ensure all onboarding tasks are completed</li> </ul>"},{"location":"products/qultrix/features/#time-and-attendance","title":"Time and Attendance","text":"<ul> <li>Time Tracking: Track employee work hours</li> <li>Attendance Management: Monitor and manage employee attendance</li> <li>Leave Management: Manage various types of leave (vacation, sick, personal, etc.)</li> <li>Leave Balances: Track and display leave balances for employees</li> <li>Leave Requests: Allow employees to request leave and managers to approve/reject</li> <li>Holiday Calendar: Define and manage company holidays</li> <li>Shift Management: Create and manage work shifts</li> <li>Overtime Tracking: Track and manage overtime hours</li> </ul>"},{"location":"products/qultrix/features/#payroll-and-benefits","title":"Payroll and Benefits","text":"<ul> <li>Payroll Processing: Calculate and process employee payroll</li> <li>Salary Structure: Define and manage salary structures</li> <li>Deductions and Allowances: Configure various deductions and allowances</li> <li>Tax Calculations: Automated tax calculations based on local regulations</li> <li>Benefits Administration: Manage employee benefits (health insurance, retirement plans, etc.)</li> <li>Expense Management: Track and manage employee expenses</li> <li>Payslip Generation: Generate and distribute digital payslips</li> <li>Payroll Reports: Generate various payroll reports for compliance and analysis</li> </ul>"},{"location":"products/qultrix/features/#advanced-features","title":"Advanced Features","text":""},{"location":"products/qultrix/features/#performance-management","title":"Performance Management","text":"<ul> <li>Performance Reviews: Conduct regular performance reviews</li> <li>Goal Setting: Set and track individual and team goals</li> <li>360-Degree Feedback: Collect feedback from peers, subordinates, and managers</li> <li>Competency Assessment: Assess employee competencies against defined frameworks</li> <li>Performance Metrics: Track key performance indicators for employees</li> <li>Performance Improvement Plans: Create and manage performance improvement plans</li> <li>Recognition Programs: Implement employee recognition programs</li> <li>Performance Analytics: Analyze performance data for insights</li> </ul>"},{"location":"products/qultrix/features/#learning-and-development","title":"Learning and Development","text":"<ul> <li>Training Management: Organize and manage training programs</li> <li>Learning Paths: Define learning paths for different roles and career stages</li> <li>Course Catalog: Maintain a catalog of available courses and learning resources</li> <li>Skill Matrix: Track employee skills and identify skill gaps</li> <li>Certification Tracking: Track employee certifications and their expiration dates</li> <li>Learning Analytics: Analyze learning data to improve training effectiveness</li> <li>Mentorship Programs: Facilitate mentorship programs within the organization</li> <li>Career Development Plans: Create and manage career development plans for employees</li> </ul>"},{"location":"products/qultrix/features/#compliance-and-reporting","title":"Compliance and Reporting","text":"<ul> <li>Compliance Management: Ensure compliance with labor laws and regulations</li> <li>Document Expiry Tracking: Track expiry dates of important documents</li> <li>Audit Trails: Maintain detailed audit trails of all HR activities</li> <li>Standard Reports: Access pre-built reports for common HR metrics</li> <li>Custom Reports: Create custom reports based on specific requirements</li> <li>Data Export: Export data in various formats (PDF, Excel, CSV)</li> <li>Compliance Dashboards: Visualize compliance status across the organization</li> <li>Regulatory Updates: Stay updated with changes in labor laws and regulations</li> </ul>"},{"location":"products/qultrix/features/#user-interface","title":"User Interface","text":""},{"location":"products/qultrix/features/#main-dashboard","title":"Main Dashboard","text":"<ul> <li>HR Metrics: View key HR metrics at a glance</li> <li>Employee Statistics: See employee statistics (headcount, turnover, etc.)</li> <li>Recent Activities: View recent HR activities</li> <li>Pending Approvals: See pending approvals requiring attention</li> <li>Calendar View: View upcoming events, birthdays, anniversaries, etc.</li> <li>Quick Actions: Access frequently used functions quickly</li> <li>Customizable Widgets: Arrange dashboard widgets according to preference</li> </ul>"},{"location":"products/qultrix/features/#employee-portal","title":"Employee Portal","text":"<ul> <li>Personal Information: View and update personal information</li> <li>Leave Management: Request and track leave</li> <li>Payroll Information: Access payslips and tax documents</li> <li>Performance Reviews: Participate in performance reviews</li> <li>Learning Portal: Access learning resources and training programs</li> <li>Company Directory: Search and view the company directory</li> <li>Document Access: Access personal and company documents</li> <li>Help Desk: Submit HR-related queries and requests</li> </ul>"},{"location":"products/qultrix/features/#mobile-interface","title":"Mobile Interface","text":"<ul> <li>Mobile App: Native mobile applications for iOS and Android</li> <li>Responsive Web: Mobile-responsive web interface</li> <li>Offline Access: Access certain features offline</li> <li>Push Notifications: Receive important HR updates via push notifications</li> <li>Mobile Approvals: Approve requests on the go</li> <li>Mobile Directory: Access the employee directory from mobile devices</li> </ul>"},{"location":"products/qultrix/features/#workflows","title":"Workflows","text":""},{"location":"products/qultrix/features/#employee-lifecycle-workflows","title":"Employee Lifecycle Workflows","text":"<ol> <li>Recruitment: From job requisition to candidate selection</li> <li>Onboarding: From offer acceptance to full integration</li> <li>Development: Ongoing training and performance management</li> <li>Transition: Role changes, promotions, transfers</li> <li>Offboarding: Exit process and knowledge transfer</li> </ol>"},{"location":"products/qultrix/features/#common-use-cases","title":"Common Use Cases","text":"<ul> <li>New Hire Processing: Streamline the process of bringing new employees onboard</li> <li>Annual Performance Reviews: Conduct organization-wide performance reviews</li> <li>Leave Management: Manage employee leave requests and balances</li> <li>Payroll Processing: Process monthly payroll accurately and efficiently</li> <li>Compliance Reporting: Generate reports for regulatory compliance</li> <li>Employee Development: Plan and track employee learning and development</li> </ul>"},{"location":"products/qultrix/features/#integration-points","title":"Integration Points","text":""},{"location":"products/qultrix/features/#integration-with-other-halooid-products","title":"Integration with Other Halooid Products","text":"<ul> <li>Taskake: Assign HR-related tasks and track their completion</li> <li>AdminHub: Administrators can monitor HR metrics and compliance</li> <li>CustomerConnect: Share employee information for customer-facing roles</li> <li>Invantray: Manage employee assets and equipment</li> </ul>"},{"location":"products/qultrix/features/#external-integrations","title":"External Integrations","text":"<ul> <li>Payroll Systems: Integrate with external payroll systems</li> <li>Accounting Software: Connect with accounting software for financial data</li> <li>Learning Management Systems: Integrate with external LMS platforms</li> <li>Background Check Services: Connect with background verification services</li> <li>Job Boards: Post job openings to external job boards</li> <li>Government Portals: Submit regulatory reports to government portals</li> </ul>"},{"location":"products/qultrix/features/#configuration-options","title":"Configuration Options","text":"<ul> <li>Organizational Structure: Configure company hierarchy and departments</li> <li>Workflow Rules: Define custom workflow rules for HR processes</li> <li>Approval Chains: Set up approval chains for various requests</li> <li>Email Templates: Customize email templates for HR communications</li> <li>Form Templates: Create custom forms for various HR processes</li> <li>Access Control: Set up roles and permissions for HR data access</li> <li>Branding: Customize the interface with company branding</li> </ul>"},{"location":"products/qultrix/features/#best-practices","title":"Best Practices","text":"<ul> <li>Data Privacy: Implement strict data privacy controls for sensitive HR information</li> <li>Regular Audits: Conduct regular audits of HR data and processes</li> <li>Employee Communication: Maintain clear communication about HR policies and changes</li> <li>Documentation: Keep all HR policies and procedures well-documented</li> <li>Training: Provide training for HR staff and managers on using the system</li> <li>Feedback Collection: Regularly collect feedback from users to improve the system</li> <li>Continuous Improvement: Continuously review and improve HR processes</li> </ul>"},{"location":"products/qultrix/user-guide/","title":"Qultrix User Guide","text":"<p>This page will contain a comprehensive guide to using Qultrix.</p> <p>Content coming soon</p>"},{"location":"products/taskake/","title":"Taskake","text":"<p>Taskake is a comprehensive task management system designed to help teams organize, track, and complete work efficiently.</p>"},{"location":"products/taskake/#overview","title":"Overview","text":"<p>Taskake provides a flexible and intuitive platform for managing tasks and projects. It allows teams to create, assign, and track tasks, set priorities and deadlines, and collaborate effectively.</p> <pre><code>graph TD\n    A[Taskake] --&gt; B[Task Management]\n    A --&gt; C[Project Management]\n    A --&gt; D[Team Collaboration]\n    A --&gt; E[Time Tracking]\n    A --&gt; F[Reporting]\n\n    B --&gt; B1[Task Creation]\n    B --&gt; B2[Task Assignment]\n    B --&gt; B3[Task Prioritization]\n    B --&gt; B4[Task Dependencies]\n\n    C --&gt; C1[Project Creation]\n    C --&gt; C2[Project Timeline]\n    C --&gt; C3[Project Templates]\n\n    D --&gt; D1[Comments]\n    D --&gt; D2[File Sharing]\n    D --&gt; D3[Notifications]\n\n    E --&gt; E1[Time Estimates]\n    E --&gt; E2[Time Logging]\n\n    F --&gt; F1[Progress Reports]\n    F --&gt; F2[Team Performance]\n    F --&gt; F3[Custom Dashboards]</code></pre>"},{"location":"products/taskake/#key-features","title":"Key Features","text":""},{"location":"products/taskake/#task-management","title":"Task Management","text":"<ul> <li>Task Creation and Assignment: Create tasks with detailed descriptions, assign them to team members, and set due dates.</li> <li>Task Prioritization: Set priorities for tasks to ensure the most important work gets done first.</li> <li>Task Dependencies: Define dependencies between tasks to ensure they are completed in the right order.</li> <li>Task Status Tracking: Track the status of tasks through customizable workflows.</li> </ul>"},{"location":"products/taskake/#project-management","title":"Project Management","text":"<ul> <li>Project Creation: Organize tasks into projects with clear goals and timelines.</li> <li>Project Templates: Create templates for recurring projects to save time.</li> <li>Project Timeline: Visualize project timelines with Gantt charts.</li> <li>Project Dashboards: Get a quick overview of project status and progress.</li> </ul>"},{"location":"products/taskake/#team-collaboration","title":"Team Collaboration","text":"<ul> <li>Comments and Discussions: Discuss tasks and projects with team members.</li> <li>File Sharing: Attach files to tasks and projects for easy reference.</li> <li>Notifications: Stay informed about task updates and mentions.</li> <li>Activity Feed: See a chronological feed of all activity in your projects.</li> </ul>"},{"location":"products/taskake/#time-tracking","title":"Time Tracking","text":"<ul> <li>Time Estimates: Set time estimates for tasks to help with planning.</li> <li>Time Logging: Log time spent on tasks for accurate reporting.</li> <li>Time Reports: Generate reports on time spent by team members, projects, or tasks.</li> </ul>"},{"location":"products/taskake/#reporting-and-analytics","title":"Reporting and Analytics","text":"<ul> <li>Progress Reports: Track progress against goals and deadlines.</li> <li>Team Performance: Analyze team performance and workload.</li> <li>Custom Dashboards: Create custom dashboards to visualize the metrics that matter to you.</li> </ul>"},{"location":"products/taskake/#use-cases","title":"Use Cases","text":"<p>Taskake is designed to be flexible and can be used for a variety of use cases:</p> <ul> <li>Software Development: Track features, bugs, and sprints.</li> <li>Marketing Campaigns: Plan and execute marketing campaigns.</li> <li>Product Launches: Coordinate all aspects of a product launch.</li> <li>Client Projects: Manage client projects and deliverables.</li> <li>Personal Task Management: Organize personal tasks and to-dos.</li> </ul>"},{"location":"products/taskake/#integration-with-other-products","title":"Integration with Other Products","text":"<p>Taskake integrates with other products in the Halooid platform:</p> <ul> <li>Qultrix: Tasks can be assigned based on employee skills and availability.</li> <li>AdminHub: Administrators can monitor task and project status across the organization.</li> <li>CustomerConnect: Customer requests can automatically create tasks.</li> <li>Invantray: Tasks can be linked to inventory items for maintenance or deployment.</li> </ul>"},{"location":"products/taskake/#getting-started","title":"Getting Started","text":"<p>To get started with Taskake, check out the following resources:</p> <ul> <li>Features: Detailed information about Taskake features.</li> <li>API: Documentation for the Taskake API.</li> <li>User Guide: A comprehensive guide to using Taskake.</li> </ul>"},{"location":"products/taskake/#roadmap","title":"Roadmap","text":"<p>The Taskake roadmap includes the following upcoming features:</p> <ul> <li>Advanced Reporting: More detailed and customizable reports.</li> <li>Resource Management: Better tools for managing team resources and capacity.</li> <li>AI-Powered Task Suggestions: Intelligent suggestions for task assignments and priorities.</li> <li>Mobile App Enhancements: Improved mobile experience with offline capabilities.</li> <li>Integration with External Tools: Connect with popular tools like Slack, GitHub, and more.</li> </ul>"},{"location":"products/taskake/api/","title":"Taskake API","text":"<p>This page will contain detailed information about the Taskake API.</p> <p>Content coming soon</p>"},{"location":"products/taskake/features/","title":"Taskake Features","text":"<p>Taskake is a comprehensive task management system designed to help teams organize, track, and complete work efficiently. This page documents the features available in Taskake.</p>"},{"location":"products/taskake/features/#core-features","title":"Core Features","text":""},{"location":"products/taskake/features/#task-management","title":"Task Management","text":"<ul> <li>Task Creation: Create tasks with titles, descriptions, due dates, and assignees</li> <li>Task Organization: Organize tasks into projects, lists, or categories</li> <li>Task Prioritization: Set priorities (High, Medium, Low) for tasks</li> <li>Task Status: Track task status (To Do, In Progress, Done, etc.)</li> <li>Subtasks: Break down complex tasks into smaller, manageable subtasks</li> <li>Task Dependencies: Set dependencies between tasks to establish workflow</li> <li>Task Templates: Create reusable templates for recurring tasks</li> </ul>"},{"location":"products/taskake/features/#project-management","title":"Project Management","text":"<ul> <li>Project Creation: Create projects to group related tasks</li> <li>Project Hierarchy: Organize projects into portfolios or programs</li> <li>Project Templates: Create reusable templates for recurring projects</li> <li>Project Timeline: Visualize project timelines with Gantt charts</li> <li>Project Dashboards: Get a quick overview of project status and progress</li> <li>Milestones: Set and track important project milestones</li> <li>Project Roles: Assign different roles and permissions within projects</li> </ul>"},{"location":"products/taskake/features/#team-collaboration","title":"Team Collaboration","text":"<ul> <li>Comments and Discussions: Discuss tasks and projects with team members</li> <li>@Mentions: Notify team members using @mentions in comments</li> <li>File Sharing: Attach files to tasks and projects for easy reference</li> <li>Notifications: Stay informed about task updates and mentions</li> <li>Activity Feed: See a chronological feed of all activity in your projects</li> <li>Team Workload: View and balance team member workloads</li> <li>Shared Calendars: Coordinate schedules with shared team calendars</li> </ul>"},{"location":"products/taskake/features/#time-tracking","title":"Time Tracking","text":"<ul> <li>Time Estimates: Set estimated time for task completion</li> <li>Time Logging: Log time spent on tasks</li> <li>Time Reports: Generate reports on time spent by user, project, or task</li> <li>Timers: Use built-in timers to track work in real-time</li> <li>Timesheet Export: Export time data for billing or payroll purposes</li> </ul>"},{"location":"products/taskake/features/#advanced-features","title":"Advanced Features","text":""},{"location":"products/taskake/features/#automation","title":"Automation","text":"<ul> <li>Automated Workflows: Create rules to automate repetitive processes</li> <li>Triggers and Actions: Define triggers (e.g., task status change) and resulting actions</li> <li>Scheduled Tasks: Set up recurring tasks on daily, weekly, or monthly schedules</li> <li>Email Integration: Create tasks from emails or send task updates via email</li> <li>Webhooks: Connect with external systems using webhooks</li> </ul>"},{"location":"products/taskake/features/#reporting-and-analytics","title":"Reporting and Analytics","text":"<ul> <li>Dashboard Widgets: Customizable widgets for key metrics</li> <li>Performance Reports: Track team and individual performance</li> <li>Burndown Charts: Visualize progress towards project completion</li> <li>Custom Reports: Create custom reports based on specific criteria</li> <li>Export Options: Export reports in various formats (PDF, CSV, Excel)</li> <li>Data Visualization: Visual representations of task and project data</li> </ul>"},{"location":"products/taskake/features/#advanced-task-features","title":"Advanced Task Features","text":"<ul> <li>Custom Fields: Add custom fields to tasks for specific information needs</li> <li>Tags and Labels: Categorize tasks with tags and color-coded labels</li> <li>Bulk Actions: Perform actions on multiple tasks simultaneously</li> <li>Advanced Filtering: Find tasks using complex filter combinations</li> <li>Task Relationships: Define various relationships between tasks</li> <li>Version History: Track changes to tasks over time</li> <li>Task Templates Library: Access a library of pre-defined task templates</li> </ul>"},{"location":"products/taskake/features/#user-interface","title":"User Interface","text":""},{"location":"products/taskake/features/#main-dashboard","title":"Main Dashboard","text":"<ul> <li>Overview Panel: Quick view of important metrics and recent activity</li> <li>My Tasks: View tasks assigned to you</li> <li>Team Tasks: View tasks assigned to your team</li> <li>Calendar View: See tasks and deadlines in a calendar format</li> <li>Customizable Layout: Arrange dashboard components according to preference</li> </ul>"},{"location":"products/taskake/features/#task-views","title":"Task Views","text":"<ul> <li>List View: Traditional list view of tasks</li> <li>Board View: Kanban-style board view for visual task management</li> <li>Calendar View: Calendar representation of tasks and deadlines</li> <li>Gantt View: Gantt chart for visualizing project timelines</li> <li>Timeline View: Chronological view of tasks and milestones</li> </ul>"},{"location":"products/taskake/features/#mobile-interface","title":"Mobile Interface","text":"<ul> <li>Mobile App: Native mobile applications for iOS and Android</li> <li>Responsive Web: Mobile-responsive web interface</li> <li>Offline Mode: Work offline with synchronization when online</li> <li>Push Notifications: Receive important updates via push notifications</li> </ul>"},{"location":"products/taskake/features/#workflows","title":"Workflows","text":""},{"location":"products/taskake/features/#task-lifecycle","title":"Task Lifecycle","text":"<ol> <li>Creation: Task is created and assigned</li> <li>Planning: Details, dependencies, and timelines are established</li> <li>Execution: Work is performed on the task</li> <li>Review: Task is reviewed for quality and completeness</li> <li>Completion: Task is marked as complete</li> </ol>"},{"location":"products/taskake/features/#common-use-cases","title":"Common Use Cases","text":"<ul> <li>Software Development: Track features, bugs, and sprints</li> <li>Marketing Campaigns: Plan and execute marketing campaigns</li> <li>Product Launches: Coordinate all aspects of a product launch</li> <li>Client Projects: Manage client projects and deliverables</li> <li>Personal Task Management: Organize personal tasks and to-dos</li> </ul>"},{"location":"products/taskake/features/#integration-points","title":"Integration Points","text":""},{"location":"products/taskake/features/#integration-with-other-halooid-products","title":"Integration with Other Halooid Products","text":"<ul> <li>Qultrix: Tasks can be assigned based on employee skills and availability</li> <li>AdminHub: Administrators can monitor task and project status across the organization</li> <li>CustomerConnect: Customer requests can automatically create tasks</li> <li>Invantray: Tasks can be linked to inventory items for maintenance or deployment</li> </ul>"},{"location":"products/taskake/features/#external-integrations","title":"External Integrations","text":"<ul> <li>Calendar Apps: Sync with Google Calendar, Outlook, etc.</li> <li>File Storage: Integrate with Google Drive, Dropbox, etc.</li> <li>Communication Tools: Connect with Slack, Microsoft Teams, etc.</li> <li>Development Tools: Integrate with GitHub, Jira, etc.</li> </ul>"},{"location":"products/taskake/features/#configuration-options","title":"Configuration Options","text":"<ul> <li>Custom Statuses: Define custom task statuses for your workflow</li> <li>Custom Fields: Create custom fields for tasks and projects</li> <li>Workflow Rules: Configure automated workflow rules</li> <li>Notification Settings: Customize notification preferences</li> <li>Access Control: Set up roles and permissions</li> <li>Branding: Customize the interface with your company branding</li> </ul>"},{"location":"products/taskake/features/#best-practices","title":"Best Practices","text":"<ul> <li>Task Naming: Use clear, descriptive names for tasks</li> <li>Task Description: Include all necessary details in task descriptions</li> <li>Due Dates: Set realistic due dates and update them as needed</li> <li>Subtasks: Break down complex tasks into manageable subtasks</li> <li>Comments: Use comments to document progress and decisions</li> <li>Attachments: Attach relevant files to tasks for easy reference</li> <li>Regular Updates: Update task status regularly to keep everyone informed</li> </ul>"},{"location":"products/taskake/user-guide/","title":"Taskake User Guide","text":"<p>Welcome to the Taskake User Guide! This guide provides comprehensive instructions on how to use Taskake, our powerful task management system designed to help teams organize, track, and complete work efficiently.</p>"},{"location":"products/taskake/user-guide/#getting-started","title":"Getting Started","text":""},{"location":"products/taskake/user-guide/#accessing-taskake","title":"Accessing Taskake","text":"<p>Taskake is available through both web and mobile interfaces:</p> <ul> <li>Web Interface: Access Taskake through your web browser at <code>https://app.halooid.com/taskake</code></li> <li>Mobile App: Download the Halooid mobile app from the App Store (iOS) or Google Play Store (Android)</li> </ul>"},{"location":"products/taskake/user-guide/#logging-in","title":"Logging In","text":"<ol> <li>Navigate to the Taskake login page</li> <li>Enter your email address and password</li> <li>Click \"Sign In\" or tap \"Log In\" on mobile</li> </ol>"},{"location":"products/taskake/user-guide/#dashboard-overview","title":"Dashboard Overview","text":"<p>After logging in, you'll see the Taskake dashboard, which provides an overview of:</p> <ul> <li>Your assigned tasks</li> <li>Recent activity</li> <li>Upcoming deadlines</li> <li>Project progress</li> </ul>"},{"location":"products/taskake/user-guide/#task-management","title":"Task Management","text":""},{"location":"products/taskake/user-guide/#creating-tasks","title":"Creating Tasks","text":"<p>To create a new task:</p> <ol> <li>Click the \"New Task\" button in the top-right corner</li> <li>Fill in the task details:</li> <li>Title (required)</li> <li>Description</li> <li>Status (default: To Do)</li> <li>Priority (default: Medium)</li> <li>Due Date</li> <li>Assignee</li> <li>Project (optional)</li> <li>Estimated Hours (optional)</li> <li>Tags (optional)</li> <li>Click \"Create Task\"</li> </ol>"},{"location":"products/taskake/user-guide/#viewing-tasks","title":"Viewing Tasks","text":"<p>Tasks can be viewed in multiple formats:</p> <ul> <li>List View: Displays tasks in a traditional list format</li> <li>Board View: Kanban-style board organized by status</li> <li>Calendar View: Tasks displayed on a calendar based on due dates</li> <li>Gantt View: Timeline view showing task dependencies and project progress</li> </ul>"},{"location":"products/taskake/user-guide/#updating-tasks","title":"Updating Tasks","text":"<p>To update a task:</p> <ol> <li>Click on the task to open the task details</li> <li>Click \"Edit\" or the pencil icon</li> <li>Update the task details</li> <li>Click \"Save Changes\"</li> </ol>"},{"location":"products/taskake/user-guide/#task-status","title":"Task Status","text":"<p>Tasks can have the following statuses:</p> <ul> <li>To Do: Task has not been started</li> <li>In Progress: Task is currently being worked on</li> <li>Review: Task is completed and awaiting review</li> <li>Done: Task is completed and approved</li> <li>Cancelled: Task has been cancelled</li> </ul> <p>To change a task's status:</p> <ol> <li>Open the task details</li> <li>Click on the status dropdown</li> <li>Select the new status</li> <li>Click \"Save\"</li> </ol> <p>Alternatively, in Board View, you can drag and drop tasks between status columns.</p>"},{"location":"products/taskake/user-guide/#project-management","title":"Project Management","text":""},{"location":"products/taskake/user-guide/#creating-projects","title":"Creating Projects","text":"<p>To create a new project:</p> <ol> <li>Navigate to the Projects section</li> <li>Click \"New Project\"</li> <li>Fill in the project details:</li> <li>Name (required)</li> <li>Description</li> <li>Status</li> <li>Start Date</li> <li>End Date</li> <li>Click \"Create Project\"</li> </ol>"},{"location":"products/taskake/user-guide/#managing-project-tasks","title":"Managing Project Tasks","text":"<p>To add tasks to a project:</p> <ol> <li>Navigate to the project details page</li> <li>Click \"Add Task\"</li> <li>Either create a new task or select an existing task</li> <li>Click \"Add to Project\"</li> </ol>"},{"location":"products/taskake/user-guide/#project-dashboard","title":"Project Dashboard","text":"<p>Each project has its own dashboard showing:</p> <ul> <li>Project progress</li> <li>Task distribution by status</li> <li>Team workload</li> <li>Recent activity</li> <li>Upcoming deadlines</li> </ul>"},{"location":"products/taskake/user-guide/#time-tracking","title":"Time Tracking","text":""},{"location":"products/taskake/user-guide/#logging-time","title":"Logging Time","text":"<p>To log time on a task:</p> <ol> <li>Open the task details</li> <li>Click \"Log Time\"</li> <li>Enter the time details:</li> <li>Date</li> <li>Start Time</li> <li>End Time (or Duration)</li> <li>Description</li> <li>Click \"Save\"</li> </ol>"},{"location":"products/taskake/user-guide/#using-the-timer","title":"Using the Timer","text":"<p>To track time in real-time:</p> <ol> <li>Open the task details</li> <li>Click \"Start Timer\"</li> <li>The timer will begin counting</li> <li>When finished, click \"Stop Timer\"</li> <li>Add a description (optional)</li> <li>Click \"Save\"</li> </ol>"},{"location":"products/taskake/user-guide/#time-reports","title":"Time Reports","text":"<p>To view time reports:</p> <ol> <li>Navigate to the Reports section</li> <li>Select \"Time Reports\"</li> <li>Set the filters:</li> <li>Date Range</li> <li>Projects</li> <li>Users</li> <li>Tasks</li> <li>Click \"Generate Report\"</li> </ol>"},{"location":"products/taskake/user-guide/#team-collaboration","title":"Team Collaboration","text":""},{"location":"products/taskake/user-guide/#task-comments","title":"Task Comments","text":"<p>To comment on a task:</p> <ol> <li>Open the task details</li> <li>Scroll to the Comments section</li> <li>Type your comment in the text box</li> <li>Click \"Post Comment\"</li> </ol>"},{"location":"products/taskake/user-guide/#mentions","title":"@Mentions","text":"<p>To mention a team member in a comment:</p> <ol> <li>Type \"@\" followed by the team member's name</li> <li>Select the team member from the dropdown</li> <li>Complete your comment</li> <li>Click \"Post Comment\"</li> </ol> <p>The mentioned team member will receive a notification.</p>"},{"location":"products/taskake/user-guide/#file-attachments","title":"File Attachments","text":"<p>To attach a file to a task:</p> <ol> <li>Open the task details</li> <li>Click \"Attach File\"</li> <li>Select the file from your device</li> <li>Click \"Upload\"</li> </ol>"},{"location":"products/taskake/user-guide/#notifications","title":"Notifications","text":""},{"location":"products/taskake/user-guide/#viewing-notifications","title":"Viewing Notifications","text":"<p>To view your notifications:</p> <ol> <li>Click the bell icon in the top navigation bar</li> <li>View the list of notifications</li> <li>Click on a notification to navigate to the related item</li> </ol>"},{"location":"products/taskake/user-guide/#notification-settings","title":"Notification Settings","text":"<p>To customize your notification settings:</p> <ol> <li>Go to your user profile</li> <li>Click \"Settings\"</li> <li>Select \"Notifications\"</li> <li>Choose which notifications you want to receive</li> <li>Click \"Save Changes\"</li> </ol>"},{"location":"products/taskake/user-guide/#integration-with-other-halooid-products","title":"Integration with Other Halooid Products","text":"<p>Taskake integrates seamlessly with other Halooid products:</p> <ul> <li>Qultrix: Tasks can be assigned based on employee skills and availability</li> <li>AdminHub: Administrators can monitor task and project status across the organization</li> <li>CustomerConnect: Customer requests can automatically create tasks</li> <li>Invantray: Tasks can be linked to inventory items for maintenance or deployment</li> </ul>"},{"location":"products/taskake/user-guide/#mobile-app-features","title":"Mobile App Features","text":"<p>The Taskake mobile app provides all the core functionality of the web interface, plus:</p> <ul> <li>Offline access to your tasks</li> <li>Push notifications for task updates</li> <li>Quick task creation</li> <li>Time tracking on the go</li> <li>File attachments from your device</li> </ul>"},{"location":"products/taskake/user-guide/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<p>For power users, Taskake offers keyboard shortcuts:</p> <ul> <li><code>N</code>: New task</li> <li><code>P</code>: New project</li> <li><code>C</code>: New comment</li> <li><code>E</code>: Edit selected item</li> <li><code>D</code>: Mark task as done</li> <li><code>/</code>: Search</li> <li><code>?</code>: Show keyboard shortcuts</li> </ul>"},{"location":"products/taskake/user-guide/#need-help","title":"Need Help?","text":"<p>If you need assistance with Taskake:</p> <ul> <li>Click the \"Help\" icon in the bottom-left corner</li> <li>Check out our Knowledge Base</li> <li>Contact support at support@halooid.com</li> </ul>"}]}