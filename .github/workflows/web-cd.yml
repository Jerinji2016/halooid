name: Web CD

on:
  # push:
  #   branches: [ main ]
  #   paths:
  #     - 'web/**'
  #     - '.github/workflows/web-cd.yml'
  #   tags:
  #     - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/web-frontend
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=sha,format=short
      
      - name: Build and push Web Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./web
          file: ./web/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/web-frontend:${{ steps.meta.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.25.0'
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name halooid-cluster --region ${{ secrets.AWS_REGION }}
      
      - name: Deploy to Kubernetes
        run: |
          # Set the image tag based on the GitHub tag
          VERSION=${GITHUB_REF#refs/tags/v}
          
          # Update the Kubernetes manifests with the new image tag
          sed -i "s|image: ghcr.io/${{ github.repository }}/web-frontend:.*|image: ghcr.io/${{ github.repository }}/web-frontend:${VERSION}|g" kubernetes/web/web-frontend.yaml
          
          # Apply the Kubernetes manifests
          kubectl apply -f kubernetes/web/
