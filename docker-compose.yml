version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:14-alpine
    container_name: halooid-postgres
    environment:
      POSTGRES_USER: halooid
      POSTGRES_PASSWORD: halooid_password
      POSTGRES_DB: halooid
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U halooid"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - halooid-network

  # Redis for caching and session management
  redis:
    image: redis:6-alpine
    container_name: halooid-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - halooid-network

  # Adminer for database management (optional)
  adminer:
    image: adminer
    container_name: halooid-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - halooid-network

  # API Gateway
  api-gateway:
    build:
      context: ./backend
      dockerfile: ./build/api-gateway/Dockerfile
    container_name: halooid-api-gateway
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=halooid
      - DB_PASSWORD=halooid_password
      - DB_NAME=halooid
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AUTH_SERVICE_URL=http://auth-service:8001
      - RBAC_SERVICE_URL=http://rbac-service:8002
    networks:
      - halooid-network

  # Auth Service
  auth-service:
    build:
      context: ./backend
      dockerfile: ./build/auth-service/Dockerfile
    container_name: halooid-auth-service
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=halooid
      - DB_PASSWORD=halooid_password
      - DB_NAME=halooid
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ACCESS_TOKEN_SECRET=your-access-token-secret
      - REFRESH_TOKEN_SECRET=your-refresh-token-secret
      - ACCESS_TOKEN_EXPIRY=15m
      - REFRESH_TOKEN_EXPIRY=168h
      - PORT=8001
    networks:
      - halooid-network

  # RBAC Service
  rbac-service:
    build:
      context: ./backend
      dockerfile: ./build/rbac-service/Dockerfile
    container_name: halooid-rbac-service
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=halooid
      - DB_PASSWORD=halooid_password
      - DB_NAME=halooid
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ACCESS_TOKEN_SECRET=your-access-token-secret
      - REFRESH_TOKEN_SECRET=your-refresh-token-secret
      - PORT=8002
    networks:
      - halooid-network

  # Web frontend
  web-frontend:
    build:
      context: ./web
      dockerfile: ./Dockerfile
    container_name: halooid-web-frontend
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    environment:
      - API_URL=http://api-gateway:8000
    networks:
      - halooid-network

volumes:
  postgres_data:
  redis_data:

networks:
  halooid-network:
    driver: bridge
